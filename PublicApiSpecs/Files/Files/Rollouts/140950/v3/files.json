{
  "openapi" : "3.0.1",
  "info" : {
    "title" : "Fichiers",
    "description" : "Upload and manage files.",
    "version" : "v3",
    "x-hubspot-product-tier-requirements" : {
      "marketing" : "FREE",
      "sales" : "FREE",
      "service" : "FREE",
      "cms" : "STARTER"
    },
    "x-hubspot-documentation-banner" : "NONE",
    "x-hubspot-api-use-case" : "Lors du lancement d'un repositionnement de l'entreprise, téléchargez un nouvel ensemble d'images et de ressources de marque dans le gestionnaire de fichiers afin que les équipes marketing et commerciales puissent mettre à jour leurs ressources en conséquence.",
    "x-hubspot-related-documentation" : [ {
      "name" : "Files Guide",
      "url" : "https://developers.hubspot.com/beta-docs/guides/api/files"
    } ],
    "x-hubspot-introduction" : "Utilisez l'API de fichiers pour gérer et stocker des fichiers dans l'outil de gestion de fichiers de HubSpot. Les fichiers peuvent être utilisés dans divers outils HubSpot, comme pour insérer des fichiers image dans des emails."
  },
  "servers" : [ {
    "url" : "https://api.hubapi.com"
  } ],
  "tags" : [ {
    "name" : "Files"
  }, {
    "name" : "Fichiers"
  }, {
    "name" : "Folders"
  }, {
    "name" : "Dossiers"
  } ],
  "paths" : {
    "/files/v3/files/{fileId}/gdpr-delete" : {
      "delete" : {
        "tags" : [ "Files", "Fichiers" ],
        "summary" : "Supprimer en conformité avec le RGPD",
        "description" : "Supprimer le fichier le RGPD",
        "operationId" : "delete-/files/v3/files/{fileId}/gdpr-delete_archiveGDPR",
        "parameters" : [ {
          "name" : "fileId",
          "in" : "path",
          "description" : "ID du fichier à supprimer selon le RGPD",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "\\d+",
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "No content",
            "content" : { }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "private_apps_legacy" : [ "files" ]
        }, {
          "oauth2_legacy" : [ "files" ]
        } ]
      }
    },
    "/files/v3/files/{fileId}" : {
      "get" : {
        "tags" : [ "Files", "Fichiers" ],
        "summary" : "Obtenir le fichier.",
        "description" : "Obtenir le fichier par ID.",
        "operationId" : "get-/files/v3/files/{fileId}_getById",
        "parameters" : [ {
          "name" : "fileId",
          "in" : "path",
          "description" : "ID du fichier souhaité.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "\\d+",
            "type" : "string"
          }
        }, {
          "name" : "properties",
          "in" : "query",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/File"
                }
              }
            }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "private_apps_legacy" : [ "files.ui_hidden.read" ]
        }, {
          "oauth2_legacy" : [ "files.ui_hidden.read" ]
        }, {
          "private_apps_legacy" : [ "files" ]
        }, {
          "oauth2_legacy" : [ "files" ]
        } ]
      },
      "put" : {
        "tags" : [ "Files", "Fichiers" ],
        "summary" : "Remplacer le fichier.",
        "description" : "Remplacer les données du fichier existant par de nouvelles données. Cela permet de changer le contenu d'une image sans avoir à télécharger un nouveau fichier ni mettre à jour des références.",
        "operationId" : "put-/files/v3/files/{fileId}_replace",
        "parameters" : [ {
          "name" : "fileId",
          "in" : "path",
          "description" : "ID du fichier souhaité.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "\\d+",
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "file" : {
                    "type" : "string",
                    "description" : "File data that will replace existing file in the file manager.",
                    "format" : "binary"
                  },
                  "charsetHunch" : {
                    "type" : "string",
                    "description" : "Character set of given file data."
                  },
                  "options" : {
                    "type" : "string",
                    "description" : "JSON String representing FileReplaceOptions"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/File"
                }
              }
            }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "private_apps_legacy" : [ "files" ]
        }, {
          "oauth2_legacy" : [ "files" ]
        } ]
      },
      "delete" : {
        "tags" : [ "Files", "Fichiers" ],
        "summary" : "Supprimer le fichier",
        "description" : "Supprimer le fichier par ID.",
        "operationId" : "delete-/files/v3/files/{fileId}_archive",
        "parameters" : [ {
          "name" : "fileId",
          "in" : "path",
          "description" : "FileId à supprimer",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "\\d+",
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "No content",
            "content" : { }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "private_apps_legacy" : [ "files" ]
        }, {
          "oauth2_legacy" : [ "files" ]
        } ]
      },
      "patch" : {
        "tags" : [ "Files", "Fichiers" ],
        "summary" : "mettre à jour propriétés du fichier",
        "description" : "Mettre à jour les propriétés du fichier par ID.",
        "operationId" : "patch-/files/v3/files/{fileId}_updateProperties",
        "parameters" : [ {
          "name" : "fileId",
          "in" : "path",
          "description" : "ID du fichier à mettre à jour.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "\\d+",
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Options to update.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/FileUpdateInput"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/File"
                }
              }
            }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "private_apps_legacy" : [ "files" ]
        }, {
          "oauth2_legacy" : [ "files" ]
        } ]
      }
    },
    "/files/v3/folders/{folderId}" : {
      "get" : {
        "tags" : [ "Folders", "Dossiers" ],
        "summary" : "Obtenir le dossier",
        "description" : "Trouver le dossier par ID.",
        "operationId" : "get-/files/v3/folders/{folderId}_getById",
        "parameters" : [ {
          "name" : "folderId",
          "in" : "path",
          "description" : "ID du dossier souhaité.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "\\d+",
            "type" : "string"
          }
        }, {
          "name" : "properties",
          "in" : "query",
          "description" : "Propriétés à définir sur le dossier retourné.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Folder"
                }
              }
            }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "private_apps_legacy" : [ "files.ui_hidden.read" ]
        }, {
          "oauth2_legacy" : [ "files.ui_hidden.read" ]
        }, {
          "private_apps_legacy" : [ "files" ]
        }, {
          "oauth2_legacy" : [ "files" ]
        } ]
      },
      "delete" : {
        "tags" : [ "Folders", "Dossiers" ],
        "summary" : "Supprimer le dossier.",
        "description" : "Supprimer le dossier par ID.",
        "operationId" : "delete-/files/v3/folders/{folderId}_archive",
        "parameters" : [ {
          "name" : "folderId",
          "in" : "path",
          "description" : "ID du dossier à supprimer.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "\\d+",
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "No content",
            "content" : { }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "private_apps_legacy" : [ "files" ]
        }, {
          "oauth2_legacy" : [ "files" ]
        } ]
      }
    },
    "/files/v3/files" : {
      "post" : {
        "tags" : [ "Files", "Fichiers" ],
        "summary" : "Charger le fichier",
        "description" : "Chargez un seul fichier en spécifiant le contenu dans le corps de la requête.",
        "operationId" : "post-/files/v3/files_upload",
        "parameters" : [ ],
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "file" : {
                    "type" : "string",
                    "description" : "File to be uploaded.",
                    "format" : "binary"
                  },
                  "folderId" : {
                    "type" : "string",
                    "description" : "Either 'folderId' or 'folderPath' is required. folderId is the ID of the folder the file will be uploaded to."
                  },
                  "folderPath" : {
                    "type" : "string",
                    "description" : "Either 'folderPath' or 'folderId' is required. This field represents the destination folder path for the uploaded file. If a path doesn't exist, the system will try to create one."
                  },
                  "fileName" : {
                    "type" : "string",
                    "description" : "Desired name for the uploaded file."
                  },
                  "charsetHunch" : {
                    "type" : "string",
                    "description" : "Character set of the uploaded file."
                  },
                  "options" : {
                    "type" : "string",
                    "description" : "JSON string representing FileUploadOptions."
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/File"
                }
              }
            }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "private_apps_legacy" : [ "files" ]
        }, {
          "oauth2_legacy" : [ "files" ]
        } ]
      }
    },
    "/files/v3/folders" : {
      "post" : {
        "tags" : [ "Folders", "Dossiers" ],
        "summary" : "Créer un dossier.",
        "description" : "Crée un dossier.",
        "operationId" : "post-/files/v3/folders_create",
        "parameters" : [ ],
        "requestBody" : {
          "description" : "Folder creation options",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/FolderInput"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Folder"
                }
              }
            }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "private_apps_legacy" : [ "files" ]
        }, {
          "oauth2_legacy" : [ "files" ]
        } ]
      }
    },
    "/files/v3/files/{fileId}/signed-url" : {
      "get" : {
        "tags" : [ "Files", "Fichiers" ],
        "summary" : "Obtenir une URL signée pour accéder au fichier privé.",
        "description" : "Génère une URL signée qui permet un accès temporaire à un fichier privé.",
        "operationId" : "get-/files/v3/files/{fileId}/signed-url_getSignedUrl",
        "parameters" : [ {
          "name" : "fileId",
          "in" : "path",
          "description" : "ID du fichier.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "\\d+",
            "type" : "string"
          }
        }, {
          "name" : "size",
          "in" : "query",
          "description" : "Pour les fichiers image. Cela redimensionnera l'image à la taille souhaitée avant de la partager. N'affecte pas le fichier original, mais uniquement le fichier servi par cette URL signée.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "thumb", "icon", "medium", "preview" ]
          }
        }, {
          "name" : "expirationSeconds",
          "in" : "query",
          "description" : "Durée en secondes de l'accès au fichier par le lien.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "upscale",
          "in" : "query",
          "description" : "Si une taille est fournie, l'image sera agrandie pour s'adapter aux dimensions.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SignedUrl"
                }
              }
            }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "private_apps_legacy" : [ "files.ui_hidden.read" ]
        }, {
          "oauth2_legacy" : [ "files.ui_hidden.read" ]
        }, {
          "private_apps_legacy" : [ "files" ]
        }, {
          "oauth2_legacy" : [ "files" ]
        } ]
      }
    },
    "/files/v3/files/import-from-url/async" : {
      "post" : {
        "tags" : [ "Files", "Fichiers" ],
        "summary" : "Importer un fichier depuis une URL dans le gestionnaire de fichiers.",
        "description" : "Importe de manière asynchrone le fichier à l'URL donnée dans le gestionnaire de fichiers.",
        "operationId" : "post-/files/v3/files/import-from-url/async_importFromUrl",
        "parameters" : [ ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ImportFromUrlInput"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "202" : {
            "description" : "accepted",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ImportFromUrlTaskLocator"
                }
              }
            }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "private_apps_legacy" : [ "files" ]
        }, {
          "oauth2_legacy" : [ "files" ]
        } ]
      }
    },
    "/files/v3/files/stat/{path}" : {
      "get" : {
        "tags" : [ "Files", "Fichiers" ],
        "operationId" : "get-/files/v3/files/stat/{path}_getMetadata",
        "parameters" : [ {
          "name" : "path",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : ".+",
            "type" : "string"
          }
        }, {
          "name" : "properties",
          "in" : "query",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FileStat"
                }
              }
            }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "private_apps_legacy" : [ "files.ui_hidden.read" ]
        }, {
          "oauth2_legacy" : [ "files.ui_hidden.read" ]
        }, {
          "private_apps_legacy" : [ "files" ]
        }, {
          "oauth2_legacy" : [ "files" ]
        } ]
      }
    },
    "/files/v3/folders/search" : {
      "get" : {
        "tags" : [ "Folders", "Dossiers" ],
        "summary" : "Rechercher des dossiers",
        "description" : "Rechercher des dossiers. Ne contient pas de dossiers cachés ou archivés.",
        "operationId" : "get-/files/v3/folders/search_doSearch",
        "parameters" : [ {
          "name" : "properties",
          "in" : "query",
          "description" : "Propriétés qui doivent être incluses dans les dossiers retournés.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "after",
          "in" : "query",
          "description" : "Le décalage maximal des éléments pour une recherche donnée est de 10 000. Affinez votre recherche si vous atteignez cette limite.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "before",
          "in" : "query",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Limite de résultats à renvoyer. La limite maximale est de 100.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Trier les résultats selon la propriété donnée. Par exemple, -trier les noms par champ de noms décroissant, trier les noms par champ de noms croissant.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "id",
          "in" : "query",
          "description" : "Rechercher le dossier par ID donné.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "createdAt",
          "in" : "query",
          "description" : "Rechercher des dossiers avec l'horodatage de création donné.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "createdAtLte",
          "in" : "query",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "createdAtGte",
          "in" : "query",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "updatedAt",
          "in" : "query",
          "description" : "Rechercher un dossier à l'horodatage de mise à jour donné.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "updatedAtLte",
          "in" : "query",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "updatedAtGte",
          "in" : "query",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "name",
          "in" : "query",
          "description" : "Rechercher des dossiers contenant le nom spécifié.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "path",
          "in" : "query",
          "description" : "Rechercher des dossiers par chemin.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "parentFolderId",
          "in" : "query",
          "description" : "Rechercher les dossiers avec le folderId de dossier parent donné.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CollectionResponseFolder"
                }
              }
            }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "private_apps_legacy" : [ "files.ui_hidden.read" ]
        }, {
          "oauth2_legacy" : [ "files.ui_hidden.read" ]
        }, {
          "private_apps_legacy" : [ "files" ]
        }, {
          "oauth2_legacy" : [ "files" ]
        } ]
      }
    },
    "/files/v3/folders/update/async/tasks/{taskId}/status" : {
      "get" : {
        "tags" : [ "Folders", "Dossiers" ],
        "summary" : "Vérifier l'état de mise à jour du dossier.",
        "description" : "Vérifiez l'état de la mise à jour du dossier. Les mises à jour de dossiers se font de manière asynchrone.",
        "operationId" : "get-/files/v3/folders/update/async/tasks/{taskId}/status_checkUpdateStatus",
        "parameters" : [ {
          "name" : "taskId",
          "in" : "path",
          "description" : "TaskID de la mise à jour du dossier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FolderActionResponse"
                }
              }
            }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "private_apps_legacy" : [ "files" ]
        }, {
          "oauth2_legacy" : [ "files" ]
        } ]
      }
    },
    "/files/v3/files/search" : {
      "get" : {
        "tags" : [ "Files", "Fichiers" ],
        "summary" : "Rechercher les fichiers",
        "description" : "Rechercher dans les fichiers du gestionnaire de fichiers. Ne pas afficher les fichiers cachés ou archivés.",
        "operationId" : "get-/files/v3/files/search_doSearch",
        "parameters" : [ {
          "name" : "properties",
          "in" : "query",
          "description" : "Propriétés de fichier souhaitées dans l'objet de retour.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "after",
          "in" : "query",
          "description" : "Le décalage maximal des éléments pour une recherche donnée est de 10 000. Affinez votre recherche si vous atteignez cette limite.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "before",
          "in" : "query",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Nombre d'articles à retourner. La limite maximale est de 100.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Trier les fichiers selon un champ donné.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "id",
          "in" : "query",
          "description" : "Rechercher des fichiers par ID donné.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "createdAt",
          "in" : "query",
          "description" : "Rechercher des fichiers par heure de création.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "createdAtLte",
          "in" : "query",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "createdAtGte",
          "in" : "query",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "updatedAt",
          "in" : "query",
          "description" : "Rechercher des fichiers par heure de dernière mise à jour.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "updatedAtLte",
          "in" : "query",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "updatedAtGte",
          "in" : "query",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "name",
          "in" : "query",
          "description" : "Rechercher des fichiers contenant le nom donné.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "path",
          "in" : "query",
          "description" : "Rechercher des fichiers par chemin",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "parentFolderId",
          "in" : "query",
          "description" : "Rechercher des fichiers avec le folderId spécifié.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "size",
          "in" : "query",
          "description" : "Requête par taille de fichier.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "height",
          "in" : "query",
          "description" : "Rechercher des fichiers par hauteur d'image ou de vidéo.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "width",
          "in" : "query",
          "description" : "Rechercher des fichiers par largeur d'image ou de vidéo.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "encoding",
          "in" : "query",
          "description" : "Rechercher des fichiers avec un encodage spécifié.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "type",
          "in" : "query",
          "description" : "Filtrer par type de fichier fourni.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "extension",
          "in" : "query",
          "description" : "Rechercher des fichiers par extension donnée.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "url",
          "in" : "query",
          "description" : "Rechercher l'URL donnée",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "isUsableInContent",
          "in" : "query",
          "description" : "Si vrai, les fichiers marqués pour utilisation dans nouveau contenu seront affichés. Si faux, les fichiers à ne pas utiliser dans nouveau contenu seront affichés.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "allowsAnonymousAccess",
          "in" : "query",
          "description" : "Si la valeur est « true », les fichiers privées seront affichés, si elle est « false », les fichiers publics seront affichés",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CollectionResponseFile"
                }
              }
            }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "private_apps_legacy" : [ "files.ui_hidden.read" ]
        }, {
          "oauth2_legacy" : [ "files.ui_hidden.read" ]
        }, {
          "private_apps_legacy" : [ "files" ]
        }, {
          "oauth2_legacy" : [ "files" ]
        } ]
      }
    },
    "/files/v3/folders/{folderPath}" : {
      "get" : {
        "tags" : [ "Folders", "Dossiers" ],
        "summary" : "Obtenir le dossier.",
        "description" : "Obtenir le dossier par chemin.",
        "operationId" : "get-/files/v3/folders/{folderPath}_getByPath",
        "parameters" : [ {
          "name" : "folderPath",
          "in" : "path",
          "description" : "Chemin du dossier souhaité.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : ".+",
            "type" : "string"
          }
        }, {
          "name" : "properties",
          "in" : "query",
          "description" : "Propriétés à définir sur le dossier retourné.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Folder"
                }
              }
            }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "private_apps_legacy" : [ "files.ui_hidden.read" ]
        }, {
          "oauth2_legacy" : [ "files.ui_hidden.read" ]
        }, {
          "private_apps_legacy" : [ "files" ]
        }, {
          "oauth2_legacy" : [ "files" ]
        } ]
      },
      "delete" : {
        "tags" : [ "Folders", "Dossiers" ],
        "summary" : "Supprimer le dossier.",
        "description" : "Supprimer le dossier par chemin.",
        "operationId" : "delete-/files/v3/folders/{folderPath}_archiveByPath",
        "parameters" : [ {
          "name" : "folderPath",
          "in" : "path",
          "description" : "Chemin du dossier à supprimer",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : ".+",
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "No content",
            "content" : { }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "private_apps_legacy" : [ "files" ]
        }, {
          "oauth2_legacy" : [ "files" ]
        } ]
      }
    },
    "/files/v3/folders/update/async" : {
      "post" : {
        "tags" : [ "Folders", "Dossiers" ],
        "summary" : "Mettre à jour les propriétés du dossier",
        "description" : "Mettre à jour les propriétés du dossier par l'ID donné. Cette action se déroule de manière asynchrone et mettra également à jour tous les dossiers enfants.",
        "operationId" : "post-/files/v3/folders/update/async_updateProperties",
        "parameters" : [ ],
        "requestBody" : {
          "description" : "Properties to change in the folder",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/FolderUpdateInput"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "202" : {
            "description" : "accepted",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FolderUpdateTaskLocator"
                }
              }
            }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "private_apps_legacy" : [ "files" ]
        }, {
          "oauth2_legacy" : [ "files" ]
        } ]
      }
    },
    "/files/v3/files/import-from-url/async/tasks/{taskId}/status" : {
      "get" : {
        "tags" : [ "Files", "Fichiers" ],
        "summary" : "Vérifier le statut d'import.",
        "description" : "Vérifiez le statut de l'import demandé.",
        "operationId" : "get-/files/v3/files/import-from-url/async/tasks/{taskId}/status_checkImport",
        "parameters" : [ {
          "name" : "taskId",
          "in" : "path",
          "description" : "ID de tâche importé par URL",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FileActionResponse"
                }
              }
            }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "private_apps_legacy" : [ "files.ui_hidden.read" ]
        }, {
          "oauth2_legacy" : [ "files.ui_hidden.read" ]
        }, {
          "private_apps_legacy" : [ "files" ]
        }, {
          "oauth2_legacy" : [ "files" ]
        } ]
      }
    }
  },
  "components" : {
    "schemas" : {
      "StandardError" : {
        "required" : [ "category", "context", "errors", "links", "message", "status" ],
        "type" : "object",
        "properties" : {
          "subCategory" : {
            "type" : "object",
            "properties" : { }
          },
          "context" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            }
          },
          "links" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "id" : {
            "type" : "string"
          },
          "category" : {
            "type" : "string"
          },
          "message" : {
            "type" : "string"
          },
          "errors" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ErrorDetail"
            }
          },
          "status" : {
            "type" : "string"
          }
        }
      },
      "FolderUpdateInput" : {
        "required" : [ "id" ],
        "type" : "object",
        "properties" : {
          "parentFolderId" : {
            "type" : "integer",
            "description" : "Nouvel ID de dossier parent. S'il est modifié, le dossier et tous les dossiers enfants seront déplacés dans le dossier spécifié. parentFolderId et parentFolderPath ne peuvent pas être spécifiés en même temps",
            "format" : "int64"
          },
          "name" : {
            "type" : "string",
            "description" : "Nouveau nom. Si spécifié, le nom du dossier et fullPath changeront. Tous les dossiers enfants seront mis à jour en conséquence."
          },
          "id" : {
            "type" : "string",
            "description" : "ID du dossier à modifier."
          }
        },
        "description" : "Object for updating folders."
      },
      "FolderActionResponse" : {
        "required" : [ "completedAt", "startedAt", "status", "taskId" ],
        "type" : "object",
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/Folder"
          },
          "completedAt" : {
            "type" : "string",
            "description" : "Moment où les changements demandées ont été terminés.",
            "format" : "date-time"
          },
          "numErrors" : {
            "type" : "integer",
            "description" : "Nombre d'erreurs résultant des changements demandés.",
            "format" : "int32"
          },
          "requestedAt" : {
            "type" : "string",
            "description" : "Horodatage représentant quand la tâche a été demandée.",
            "format" : "date-time"
          },
          "startedAt" : {
            "type" : "string",
            "description" : "Horodatage représentant quand la tâche a commencé.",
            "format" : "date-time"
          },
          "links" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "Lien pour vérifier le statut de la tâche."
          },
          "errors" : {
            "type" : "array",
            "description" : "Erreurs détaillées résultant de la tâche.",
            "items" : {
              "$ref" : "#/components/schemas/StandardError"
            }
          },
          "taskId" : {
            "type" : "string",
            "description" : "ID de la tâche."
          },
          "status" : {
            "type" : "string",
            "description" : "Statut actuel de la tâche",
            "enum" : [ "PENDING", "PROCESSING", "CANCELED", "COMPLETE" ]
          }
        }
      },
      "Paging" : {
        "type" : "object",
        "properties" : {
          "next" : {
            "$ref" : "#/components/schemas/NextPage"
          },
          "prev" : {
            "$ref" : "#/components/schemas/PreviousPage"
          }
        }
      },
      "Error" : {
        "required" : [ "category", "correlationId", "message" ],
        "type" : "object",
        "properties" : {
          "subCategory" : {
            "type" : "string",
            "description" : "Une catégorie spécifique qui contient des détails plus précis sur l'erreur"
          },
          "context" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            },
            "description" : "Contexte concernant la condition d'erreur",
            "example" : {
              "missingScopes" : [ "scope1", "scope2" ],
              "invalidPropertyName" : [ "propertyValue" ]
            }
          },
          "correlationId" : {
            "type" : "string",
            "description" : "Un identifiant unique pour la demande. Incluez cette valeur dans tous les rapports d'erreur ou tickets de support",
            "format" : "uuid",
            "example" : "aeb5f871-7f07-4993-9211-075dc63e7cbf"
          },
          "links" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "Une carte des noms de liens vers les URI associés contenant la documentation sur l'erreur ou les étapes de remédiation recommandées",
            "example" : {
              "knowledge-base" : "https://www.hubspot.com/products/service/knowledge-base"
            }
          },
          "message" : {
            "type" : "string",
            "description" : "Un message lisible par la personne décrivant l'erreur ainsi que les étapes de remédiation appropriées, le cas échéant",
            "example" : "Invalid input (details will vary based on the error)"
          },
          "category" : {
            "type" : "string",
            "description" : "La catégorie d'erreur",
            "example" : "VALIDATION_ERROR"
          },
          "errors" : {
            "type" : "array",
            "description" : "informations supplémentaires sur l'erreur",
            "items" : {
              "$ref" : "#/components/schemas/ErrorDetail"
            }
          }
        },
        "example" : {
          "message" : "Invalid input (details will vary based on the error)",
          "correlationId" : "aeb5f871-7f07-4993-9211-075dc63e7cbf",
          "category" : "VALIDATION_ERROR",
          "links" : {
            "knowledge-base" : "https://www.hubspot.com/products/service/knowledge-base"
          }
        }
      },
      "Folder" : {
        "required" : [ "archived", "createdAt", "id", "updatedAt" ],
        "type" : "object",
        "properties" : {
          "createdAt" : {
            "type" : "string",
            "description" : "Horodatage de la création du dossier.",
            "format" : "date-time"
          },
          "archivedAt" : {
            "type" : "string",
            "description" : "Horodatage de la suppression du dossier.",
            "format" : "date-time"
          },
          "archived" : {
            "type" : "boolean",
            "description" : "Indique si le dossier est supprimé ou non."
          },
          "path" : {
            "type" : "string",
            "description" : "Chemin d'accès du dossier dans le gestionnaire de fichiers."
          },
          "parentFolderId" : {
            "type" : "string",
            "description" : "ID du dossier parent."
          },
          "name" : {
            "type" : "string",
            "description" : "Nom du dossier."
          },
          "id" : {
            "type" : "string",
            "description" : "ID du dossier."
          },
          "updatedAt" : {
            "type" : "string",
            "description" : "Horodatage de la dernière mise à jour du dossier.",
            "format" : "date-time"
          }
        }
      },
      "CollectionResponseFile" : {
        "required" : [ "results" ],
        "type" : "object",
        "properties" : {
          "paging" : {
            "$ref" : "#/components/schemas/Paging"
          },
          "results" : {
            "type" : "array",
            "description" : "",
            "items" : {
              "$ref" : "#/components/schemas/File"
            }
          }
        },
        "description" : "Collections of files"
      },
      "ErrorDetail" : {
        "required" : [ "message" ],
        "type" : "object",
        "properties" : {
          "subCategory" : {
            "type" : "string",
            "description" : "Une catégorie spécifique qui contient des détails plus précis sur l'erreur"
          },
          "code" : {
            "type" : "string",
            "description" : "Le code d'état associé au détail de l'erreur"
          },
          "in" : {
            "type" : "string",
            "description" : "Le nom du champ ou du paramètre dans lequel l'erreur a été trouvée."
          },
          "context" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            },
            "description" : "Contexte concernant la condition d'erreur",
            "example" : {
              "missingScopes" : [ "scope1", "scope2" ]
            }
          },
          "message" : {
            "type" : "string",
            "description" : "Un message lisible par la personne décrivant l'erreur ainsi que les étapes de remédiation appropriées, le cas échéant"
          }
        }
      },
      "FileActionResponse" : {
        "required" : [ "completedAt", "startedAt", "status", "taskId" ],
        "type" : "object",
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/File"
          },
          "completedAt" : {
            "type" : "string",
            "description" : "Heure d'achèvement de la tâche.",
            "format" : "date-time"
          },
          "numErrors" : {
            "type" : "integer",
            "description" : "Nombre d'erreurs résultant de la tâche.",
            "format" : "int32"
          },
          "requestedAt" : {
            "type" : "string",
            "description" : "Horodatage de la demande de tâche.",
            "format" : "date-time"
          },
          "startedAt" : {
            "type" : "string",
            "description" : "Horodatage du début de la tâche.",
            "format" : "date-time"
          },
          "links" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "Lien pour vérifier le statut de la tâche demandée."
          },
          "errors" : {
            "type" : "array",
            "description" : "Messages d'erreur descriptifs",
            "items" : {
              "$ref" : "#/components/schemas/StandardError"
            }
          },
          "taskId" : {
            "type" : "string",
            "description" : "ID de la tâche demandée."
          },
          "status" : {
            "type" : "string",
            "description" : "Statut actuel de la tâche",
            "enum" : [ "PENDING", "PROCESSING", "CANCELED", "COMPLETE" ]
          }
        }
      },
      "CollectionResponseFolder" : {
        "required" : [ "results" ],
        "type" : "object",
        "properties" : {
          "paging" : {
            "$ref" : "#/components/schemas/Paging"
          },
          "results" : {
            "type" : "array",
            "description" : "",
            "items" : {
              "$ref" : "#/components/schemas/Folder"
            }
          }
        }
      },
      "FileStat" : {
        "type" : "object",
        "properties" : {
          "file" : {
            "$ref" : "#/components/schemas/File"
          },
          "folder" : {
            "$ref" : "#/components/schemas/Folder"
          }
        }
      },
      "ImportFromUrlInput" : {
        "required" : [ "access", "url" ],
        "type" : "object",
        "properties" : {
          "folderPath" : {
            "type" : "string",
            "description" : "Un folderPath ou folderId est requis. Chemin du dossier de destination pour le fichier chargé. Si le chemin du dossier n'existe pas, une tentative de création du chemin du dossier sera effectuée."
          },
          "access" : {
            "type" : "string",
            "description" : "PUBLIC_INDEXABLE : le fichier est accessible publiquement par quiconque possède l'URL. Les moteurs de recherche peuvent indexer le fichier. PUBLIC_NOT_INDEXABLE : le fichier est accessible publiquement par quiconque possède l'URL. Les moteurs de recherche *ne peuvent pas* indexer le fichier. PRIVATE : le fichier n'est PAS accessible publiquement. Nécessite une URL signée pour voir le contenu. Les moteurs de recherche *ne peuvent pas* indexer le fichier.\n",
            "enum" : [ "PUBLIC_INDEXABLE", "PUBLIC_NOT_INDEXABLE", "HIDDEN_INDEXABLE", "HIDDEN_NOT_INDEXABLE", "HIDDEN_PRIVATE", "PRIVATE" ]
          },
          "duplicateValidationScope" : {
            "type" : "string",
            "description" : "ENTIRE_PORTAL : rechercher un fichier doublon dans l'ensemble du compte. EXACT_FOLDER : rechercher un fichier doublon dans le dossier fourni.\n",
            "enum" : [ "ENTIRE_PORTAL", "EXACT_FOLDER" ]
          },
          "name" : {
            "type" : "string",
            "description" : "Nommer le fichier résultant dans le gestionnaire de fichiers."
          },
          "duplicateValidationStrategy" : {
            "type" : "string",
            "description" : "NONE : ne pas exécuter de validation de doublon. REJECT : rejeter le chargement si un doublon est trouvé. RETURN_EXISTING : si un fichier doublon est trouvé, ne pas télécharger un nouveau fichier et retourner le doublon trouvé à la place.\n",
            "enum" : [ "NONE", "REJECT", "RETURN_EXISTING" ]
          },
          "ttl" : {
            "type" : "string",
            "description" : "Durée de vie. Si spécifié, le fichier sera supprimé après le délai indiqué. Si non défini, le fichier existera indéfiniment."
          },
          "overwrite" : {
            "type" : "boolean",
            "description" : "Si vrai, le fichier existant sera écrasé s'il en existe un avec le même nom et la même extension dans le dossier donné. Le fichier écrasé sera supprimé et le fichier chargé prendra sa place avec un nouvel identifiant. Si non défini ou défini comme faux, le nom du nouveau fichier sera mis à jour pour éviter tout conflit avec un fichier existant s'il en existe un avec le même chemin, nom et extension."
          },
          "url" : {
            "type" : "string",
            "description" : "URL pour télécharger le nouveau fichier."
          },
          "folderId" : {
            "type" : "string",
            "description" : "Un folderId ou folderPath est requis. folderId de destination pour le fichier chargé."
          }
        }
      },
      "FileUpdateInput" : {
        "type" : "object",
        "properties" : {
          "access" : {
            "type" : "string",
            "description" : "NONE : ne pas exécuter de validation de doublon. REJECT : rejeter le chargement si un doublon est trouvé. RETURN_EXISTING : si un fichier doublon est trouvé, ne pas télécharger un nouveau fichier et retourner le doublon trouvé à la place.\n",
            "enum" : [ "PUBLIC_INDEXABLE", "PUBLIC_NOT_INDEXABLE", "HIDDEN_INDEXABLE", "HIDDEN_NOT_INDEXABLE", "HIDDEN_PRIVATE", "PRIVATE" ]
          },
          "parentFolderId" : {
            "type" : "string",
            "description" : "FolderId où le fichier doit être déplacé. Les paramètres folderId et folderPath ne peuvent pas être définis en même temps."
          },
          "name" : {
            "type" : "string",
            "description" : "Nouveau nom pour le fichier."
          },
          "parentFolderPath" : {
            "type" : "string",
            "description" : "Le chemin d'accès du dossier où le fichier doit être déplacé. Les paramètres folderId et folderPath ne peuvent pas être définis en même temps."
          },
          "isUsableInContent" : {
            "type" : "boolean",
            "description" : "Indiquez si le fichier doit être utilisé dans le nouveau contenu ou non."
          },
          "expiresAt" : {
            "type" : "integer",
            "format" : "int64"
          }
        },
        "description" : "Object for updating files."
      },
      "SignedUrl" : {
        "required" : [ "expiresAt", "extension", "name", "size", "type", "url" ],
        "type" : "object",
        "properties" : {
          "extension" : {
            "type" : "string",
            "description" : "Extension du fichier demandé."
          },
          "size" : {
            "type" : "integer",
            "description" : "Taille en octets du fichier demandé.",
            "format" : "int32"
          },
          "name" : {
            "type" : "string",
            "description" : "Nom du fichier demandé."
          },
          "width" : {
            "type" : "integer",
            "description" : "Pour les fichiers image et vidéo. La largeur du fichier.",
            "format" : "int32"
          },
          "type" : {
            "type" : "string",
            "description" : "Type de fichier. Peut être IMG, DOCUMENT, AUDIO, MOVIE ou OTHER."
          },
          "expiresAt" : {
            "type" : "string",
            "description" : "Horodatage du moment où l'URL ne permettra plus d'accéder au fichier.",
            "format" : "date-time"
          },
          "url" : {
            "type" : "string",
            "description" : "URL signée avec accès au fichier spécifié. Toute personne possédant cette URL pourra accéder au fichier jusqu'à son expiration."
          },
          "height" : {
            "type" : "integer",
            "description" : "Pour les fichiers image et vidéo. La hauteur du fichier.",
            "format" : "int32"
          }
        },
        "description" : "Signed Url object with optional ancillary metadata of requested file"
      },
      "PreviousPage" : {
        "required" : [ "before" ],
        "type" : "object",
        "properties" : {
          "before" : {
            "type" : "string"
          },
          "link" : {
            "type" : "string"
          }
        }
      },
      "FolderInput" : {
        "required" : [ "name" ],
        "type" : "object",
        "properties" : {
          "parentFolderId" : {
            "type" : "string",
            "description" : "ID du dossier du parent du dossier créé. Si non spécifié, le dossier sera créé au niveau de la racine. parentFolderId et parentFolderPath ne peuvent pas être définis en même temps."
          },
          "parentPath" : {
            "type" : "string",
            "description" : "Chemin du dossier du parent du dossier créé. Si non spécifié, le dossier sera créé au niveau de la racine. parentFolderPath et parentFolderId ne peuvent pas être définis en même temps."
          },
          "name" : {
            "type" : "string",
            "description" : "Nom souhaité du dossier."
          }
        },
        "description" : "Object for creating a folder."
      },
      "ImportFromUrlTaskLocator" : {
        "required" : [ "id", "links" ],
        "type" : "object",
        "properties" : {
          "links" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "Liens pour vérifier les informations relatives à la tâche. Le lien « statut » donne l'URL pour vérifier le statut de la tâche.",
            "example" : [ {
              "status" : "https://api.hubspot.com/files/v3/files/import-from-url/async/tasks/57122e26-59f8-4cfc-ba53-96e30c816762/status"
            } ]
          },
          "id" : {
            "type" : "string",
            "description" : "ID de la tâche",
            "example" : "57122e26-59f8-4cfc-ba53-96e30c816762"
          }
        },
        "description" : "Information on the task that has been started, and where to check it's status.",
        "example" : {
          "id" : "57122e26-59f8-4cfc-ba53-96e30c816762",
          "links" : [ {
            "status" : "https://api.hubspot.com/files/v3/files/import-from-url/async/tasks/57122e26-59f8-4cfc-ba53-96e30c816762/status"
          } ]
        }
      },
      "File" : {
        "required" : [ "access", "archived", "createdAt", "id", "updatedAt" ],
        "type" : "object",
        "properties" : {
          "extension" : {
            "type" : "string",
            "description" : "Extension du fichier. Par exemple : .jpg, .png, .gif, .pdf, etc."
          },
          "access" : {
            "type" : "string",
            "description" : "Accès au fichier. Peut être PUBLIC_INDEXABLE, PUBLIC_NOT_INDEXABLE, PRIVATE.",
            "enum" : [ "PUBLIC_INDEXABLE", "PUBLIC_NOT_INDEXABLE", "HIDDEN_INDEXABLE", "HIDDEN_NOT_INDEXABLE", "HIDDEN_PRIVATE", "PRIVATE" ]
          },
          "parentFolderId" : {
            "type" : "string",
            "description" : "ID du dossier dans lequel se trouve le fichier."
          },
          "encoding" : {
            "type" : "string",
            "description" : "Encodage du fichier."
          },
          "type" : {
            "type" : "string",
            "description" : "Type de fichier. Peut être IMG, DOCUMENT, AUDIO, MOVIE ou OTHER."
          },
          "isUsableInContent" : {
            "type" : "boolean",
            "description" : "Précédemment « archivé ». Indique si le fichier doit être utilisé lors de la création de nouveaux contenus tels que des pages web."
          },
          "url" : {
            "type" : "string",
            "description" : "URL du fichier donné. Cette URL peut changer en fonction des paramètres de domaine du compte. Le domaine d'hébergement de fichiers sélectionné sera utilisé."
          },
          "expiresAt" : {
            "type" : "integer",
            "format" : "int64"
          },
          "createdAt" : {
            "type" : "string",
            "description" : "Date de création de l'objet fichier.",
            "format" : "date-time"
          },
          "archivedAt" : {
            "type" : "string",
            "description" : "Date de suppression de l'objet fichier.",
            "format" : "date-time"
          },
          "archived" : {
            "type" : "boolean",
            "description" : "Si le fichier a été supprimé."
          },
          "path" : {
            "type" : "string",
            "description" : "Chemin d'accès du fichier dans le gestionnaire de fichiers."
          },
          "size" : {
            "type" : "integer",
            "description" : "Taille du fichier en octets.",
            "format" : "int64"
          },
          "name" : {
            "type" : "string",
            "description" : "Nom du fichier."
          },
          "width" : {
            "type" : "integer",
            "description" : "Pour les fichiers image et vidéo, la largeur du contenu.",
            "format" : "int32"
          },
          "id" : {
            "type" : "string",
            "description" : "ID du fichier."
          },
          "defaultHostingUrl" : {
            "type" : "string",
            "description" : "URL d'hébergement par défaut du fichier. Cela utilisera l'une des URL fournies par HubSpot pour gérer le fichier."
          },
          "updatedAt" : {
            "type" : "string",
            "description" : "Horodatage de la dernière mise à jour du fichier.",
            "format" : "date-time"
          },
          "height" : {
            "type" : "integer",
            "description" : "Pour les fichiers image et vidéo, la hauteur du contenu.",
            "format" : "int32"
          }
        },
        "description" : "File"
      },
      "NextPage" : {
        "required" : [ "after" ],
        "type" : "object",
        "properties" : {
          "link" : {
            "type" : "string"
          },
          "after" : {
            "type" : "string"
          }
        }
      },
      "FolderUpdateTaskLocator" : {
        "required" : [ "id", "links" ],
        "type" : "object",
        "properties" : {
          "links" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "Liens pour vérifier les informations relatives à la tâche. Le lien « statut » donne l'URL pour vérifier le statut de la tâche.",
            "example" : [ {
              "status" : "https://api.hubspot.com/files/v3/folders/update/async/tasks/57122e26-59f8-4cfc-ba53-96e30c816762/status"
            } ]
          },
          "id" : {
            "type" : "string",
            "description" : "ID de la tâche",
            "example" : "57122e26-59f8-4cfc-ba53-96e30c816762"
          }
        },
        "description" : "Information on the task that has been started, and where to check it's status.",
        "example" : {
          "id" : "57122e26-59f8-4cfc-ba53-96e30c816762",
          "links" : [ {
            "status" : "https://api.hubspot.com/files/v3/folders/update/async/tasks/57122e26-59f8-4cfc-ba53-96e30c816762/status"
          } ]
        }
      }
    },
    "responses" : {
      "Error" : {
        "description" : "An error occurred.",
        "content" : {
          "*/*" : {
            "schema" : {
              "$ref" : "#/components/schemas/Error"
            }
          }
        }
      }
    },
    "securitySchemes" : {
      "oauth2_legacy" : {
        "type" : "oauth2",
        "flows" : {
          "authorizationCode" : {
            "authorizationUrl" : "https://app.hubspot.com/oauth/authorize",
            "tokenUrl" : "https://api.hubapi.com/oauth/v1/token",
            "scopes" : {
              "files" : "Read from and write to my Files",
              "files.ui_hidden.read" : "View hidden files"
            }
          }
        }
      },
      "private_apps_legacy" : {
        "type" : "apiKey",
        "name" : "private-app-legacy",
        "in" : "header"
      }
    }
  },
  "x-hubspot-available-client-libraries" : [ "PHP", "Node", "Ruby", "Python" ],
  "x-hubspot-product-tier-requirements" : {
    "marketing" : "FREE",
    "sales" : "FREE",
    "service" : "FREE",
    "cms" : "STARTER"
  },
  "x-hubspot-documentation-banner" : "NONE"
}