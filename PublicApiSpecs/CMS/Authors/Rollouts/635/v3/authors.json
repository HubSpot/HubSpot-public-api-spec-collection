{
  "openapi" : "3.0.1",
  "info" : {
    "title" : "Autores",
    "description" : "Use these endpoints for interacting with Blog Posts, Blog Authors, and Blog Tags",
    "version" : "v3",
    "x-hubspot-product-tier-requirements" : {
      "marketing" : "PROFESSIONAL",
      "cms" : "STARTER"
    },
    "x-hubspot-documentation-banner" : "NONE",
    "x-hubspot-api-use-case" : "Após contratar um novo autor de blog, você precisa criar um novo perfil de autor de blog para que os leitores possam saber mais sobre ele em cada uma de seus posts.",
    "x-hubspot-related-documentation" : [ {
      "name" : "Blog Authors Guide",
      "url" : "https://developers.hubspot.com/beta-docs/guides/api/cms/blogs/blog-authors"
    } ],
    "x-hubspot-introduction" : "Use a API de autores de blog para gerenciar informações sobre autores de posts de blog."
  },
  "servers" : [ {
    "url" : "https://api.hubapi.com"
  } ],
  "tags" : [ {
    "name" : "Blog Authors"
  }, {
    "name" : "Autores do blog"
  }, {
    "name" : "Blog Posts"
  }, {
    "name" : "Blog Tags"
  } ],
  "paths" : {
    "/cms/v3/blogs/authors/batch/update" : {
      "post" : {
        "tags" : [ "Blog Authors", "Autores do blog" ],
        "summary" : "Atualizar um lote de Autores de blog",
        "description" : "Atualize os objetos de Autor de blog identificados no corpo da solicitação.",
        "operationId" : "post-/cms/v3/blogs/authors/batch/update_updateBatch",
        "parameters" : [ {
          "name" : "archived",
          "in" : "query",
          "description" : "Especifica se deve atualizar Autores de blog excluídos. O padrão é \"false\".",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "requestBody" : {
          "description" : "A JSON array of the JSON representations of the updated Blog Authors.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BatchInputJsonNode"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BatchResponseBlogAuthor"
                }
              }
            }
          },
          "207" : {
            "description" : "multiple statuses",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BatchResponseBlogAuthorWithErrors"
                }
              }
            }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "private_apps_legacy" : [ "content" ]
        }, {
          "oauth2_legacy" : [ "content" ]
        } ]
      }
    },
    "/cms/v3/blogs/posts/schedule" : {
      "post" : {
        "tags" : [ "Blog Posts" ],
        "summary" : "Schedule a Blog Post to be Published",
        "description" : "Schedule a Blog Post to be Published.",
        "operationId" : "post-/cms/v3/blogs/posts/schedule",
        "requestBody" : {
          "description" : "The JSON representation of the ContentScheduleRequestVNext object.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ContentScheduleRequestVNext"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "204" : {
            "description" : "No content",
            "content" : { }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "private_apps_legacy" : [ "content" ]
        }, {
          "oauth2_legacy" : [ "content" ]
        } ]
      }
    },
    "/cms/v3/blogs/tags/batch/create" : {
      "post" : {
        "tags" : [ "Blog Tags" ],
        "summary" : "Create a batch of Blog Tags",
        "description" : "Create the Blog Tag objects detailed in the request body.",
        "operationId" : "post-/cms/v3/blogs/tags/batch/create",
        "requestBody" : {
          "description" : "The JSON array of new Blog Tags to create.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BatchInputTag"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BatchResponseTag"
                }
              }
            }
          },
          "207" : {
            "description" : "multiple statuses",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BatchResponseTagWithErrors"
                }
              }
            }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "private_apps_legacy" : [ "content" ]
        }, {
          "oauth2_legacy" : [ "content" ]
        } ]
      }
    },
    "/cms/v3/blogs/tags/batch/archive" : {
      "post" : {
        "tags" : [ "Blog Tags" ],
        "summary" : "Delete a batch of Blog Tags",
        "description" : "Delete the Blog Tag objects identified in the request body.",
        "operationId" : "post-/cms/v3/blogs/tags/batch/archive",
        "requestBody" : {
          "description" : "The JSON array of Blog Tag ids.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BatchInputString"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "204" : {
            "description" : "No content",
            "content" : { }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "private_apps_legacy" : [ "content" ]
        }, {
          "oauth2_legacy" : [ "content" ]
        } ]
      }
    },
    "/cms/v3/blogs/posts/multi-language/update-languages" : {
      "post" : {
        "tags" : [ "Blog Posts" ],
        "summary" : "Update languages of multi-language group",
        "description" : "Explicitly set new languages for each Blog Post in a multi-language group.",
        "operationId" : "post-/cms/v3/blogs/posts/multi-language/update-languages",
        "requestBody" : {
          "description" : "The JSON representation of the SetNewLanguagePrimaryRequest object.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UpdateLanguagesRequestVNext"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "$ref" : "#/components/responses/Error"
          },
          "200" : {
            "description" : "successful operation",
            "content" : { }
          }
        },
        "security" : [ {
          "private_apps_legacy" : [ "content" ]
        }, {
          "oauth2_legacy" : [ "content" ]
        } ]
      }
    },
    "/cms/v3/blogs/posts/batch/create" : {
      "post" : {
        "tags" : [ "Blog Posts" ],
        "summary" : "Create a batch of Blog Posts",
        "description" : "Create the Blog Post objects detailed in the request body.",
        "operationId" : "post-/cms/v3/blogs/posts/batch/create",
        "requestBody" : {
          "description" : "The JSON array of new Blog Posts to create.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BatchInputBlogPost"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BatchResponseBlogPost"
                }
              }
            }
          },
          "207" : {
            "description" : "multiple statuses",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BatchResponseBlogPostWithErrors"
                }
              }
            }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "private_apps_legacy" : [ "content" ]
        }, {
          "oauth2_legacy" : [ "content" ]
        } ]
      }
    },
    "/cms/v3/blogs/posts/batch/update" : {
      "post" : {
        "tags" : [ "Blog Posts" ],
        "summary" : "Update a batch of Blog Posts",
        "description" : "Update the Blog Post objects identified in the request body.",
        "operationId" : "post-/cms/v3/blogs/posts/batch/update",
        "parameters" : [ {
          "name" : "archived",
          "in" : "query",
          "description" : "Specifies whether to update deleted Blog Posts. Defaults to `false`.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "requestBody" : {
          "description" : "A JSON array of the JSON representations of the updated Blog Posts.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BatchInputJsonNode"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BatchResponseBlogPost"
                }
              }
            }
          },
          "207" : {
            "description" : "multiple statuses",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BatchResponseBlogPostWithErrors"
                }
              }
            }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "private_apps_legacy" : [ "content" ]
        }, {
          "oauth2_legacy" : [ "content" ]
        } ]
      }
    },
    "/cms/v3/blogs/posts/{objectId}/draft" : {
      "get" : {
        "tags" : [ "Blog Posts" ],
        "summary" : "Retrieve the full draft version of the Blog Post",
        "description" : "Retrieve the full draft version of the Blog Post.",
        "operationId" : "get-/cms/v3/blogs/posts/{objectId}/draft",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "The Blog Post id.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BlogPost"
                }
              }
            }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "private_apps_legacy" : [ "content" ]
        }, {
          "oauth2_legacy" : [ "content" ]
        } ]
      },
      "patch" : {
        "tags" : [ "Blog Posts" ],
        "summary" : "Update a Blog Post draft",
        "description" : "Sparse updates the draft version of a single Blog Post object identified by the id in the path.\nAll the column values need not be specified. Only the that need to be modified can be specified.\n",
        "operationId" : "patch-/cms/v3/blogs/posts/{objectId}/draft",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "The Blog Post id.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The JSON representation of the updated Blog Post to be applied to the draft.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BlogPost"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BlogPost"
                }
              }
            }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "private_apps_legacy" : [ "content" ]
        }, {
          "oauth2_legacy" : [ "content" ]
        } ]
      }
    },
    "/cms/v3/blogs/posts/{objectId}/revisions/{revisionId}" : {
      "get" : {
        "tags" : [ "Blog Posts" ],
        "summary" : "Retrieves a previous version of a blog post",
        "description" : "Retrieves a previous version of a blog post.",
        "operationId" : "get-/cms/v3/blogs/posts/{objectId}/revisions/{revisionId}",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "The Blog Post id.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "revisionId",
          "in" : "path",
          "description" : "The Blog Post version id.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VersionBlogPost"
                }
              }
            }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "private_apps_legacy" : [ "content" ]
        }, {
          "oauth2_legacy" : [ "content" ]
        } ]
      }
    },
    "/cms/v3/blogs/posts/{objectId}/revisions/{revisionId}/restore-to-draft" : {
      "post" : {
        "tags" : [ "Blog Posts" ],
        "summary" : "Restore a previous version of a blog post, to the draft version of the blog post",
        "description" : "Takes a specified version of a blog post, sets it as the new draft version of the blog post.",
        "operationId" : "post-/cms/v3/blogs/posts/{objectId}/revisions/{revisionId}/restore-to-draft",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "The Blog Post id.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "revisionId",
          "in" : "path",
          "description" : "The Blog Post version id to restore.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BlogPost"
                }
              }
            }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "private_apps_legacy" : [ "content" ]
        }, {
          "oauth2_legacy" : [ "content" ]
        } ]
      }
    },
    "/cms/v3/blogs/authors/multi-language/attach-to-lang-group" : {
      "post" : {
        "tags" : [ "Blog Authors", "Autores do blog" ],
        "summary" : "Adicionar um Autor de blog a um grupo de vários idiomas",
        "description" : "Adicione um Autor de blog a um grupo de vários idiomas.",
        "operationId" : "post-/cms/v3/blogs/authors/multi-language/attach-to-lang-group_attachToLangGroup",
        "parameters" : [ ],
        "requestBody" : {
          "description" : "The JSON representation of the AttachToLangPrimaryRequest object.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AttachToLangPrimaryRequestVNext"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "$ref" : "#/components/responses/Error"
          },
          "200" : {
            "description" : "successful operation",
            "content" : { }
          }
        },
        "security" : [ {
          "private_apps_legacy" : [ "content" ]
        }, {
          "oauth2_legacy" : [ "content" ]
        } ]
      }
    },
    "/cms/v3/blogs/posts/multi-language/create-language-variation" : {
      "post" : {
        "tags" : [ "Blog Posts" ],
        "summary" : "Create a new language variation",
        "description" : "Create a new language variation from an existing Blog Post",
        "operationId" : "post-/cms/v3/blogs/posts/multi-language/create-language-variation",
        "requestBody" : {
          "description" : "The JSON representation of the BlogPostLanguageCloneRequestVNext object.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BlogPostLanguageCloneRequestVNext"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BlogPost"
                }
              }
            }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "private_apps_legacy" : [ "content" ]
        }, {
          "oauth2_legacy" : [ "content" ]
        } ]
      }
    },
    "/cms/v3/blogs/posts/{objectId}/revisions/{revisionId}/restore" : {
      "post" : {
        "tags" : [ "Blog Posts" ],
        "summary" : "Restore a previous version of a blog post",
        "description" : "Takes a specified version of a blog post and restores it.",
        "operationId" : "post-/cms/v3/blogs/posts/{objectId}/revisions/{revisionId}/restore",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "The Blog Post id.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "revisionId",
          "in" : "path",
          "description" : "The Blog Post version id to restore.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BlogPost"
                }
              }
            }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "private_apps_legacy" : [ "content" ]
        }, {
          "oauth2_legacy" : [ "content" ]
        } ]
      }
    },
    "/cms/v3/blogs/posts/multi-language/detach-from-lang-group" : {
      "post" : {
        "tags" : [ "Blog Posts" ],
        "summary" : "Detach a Blog Post from a multi-language group",
        "description" : "Detach a Blog Post from a multi-language group.",
        "operationId" : "post-/cms/v3/blogs/posts/multi-language/detach-from-lang-group",
        "requestBody" : {
          "description" : "The JSON representation of the DetachFromLangGroupRequest object.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DetachFromLangGroupRequestVNext"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "$ref" : "#/components/responses/Error"
          },
          "200" : {
            "description" : "successful operation",
            "content" : { }
          }
        },
        "security" : [ {
          "private_apps_legacy" : [ "content" ]
        }, {
          "oauth2_legacy" : [ "content" ]
        } ]
      }
    },
    "/cms/v3/blogs/authors/batch/create" : {
      "post" : {
        "tags" : [ "Blog Authors", "Autores do blog" ],
        "summary" : "Criar um lote de Autores de blog",
        "description" : "Crie os objetos de Autor de blog detalhados no corpo da solicitação.",
        "operationId" : "post-/cms/v3/blogs/authors/batch/create_createBatch",
        "parameters" : [ ],
        "requestBody" : {
          "description" : "The JSON array of new Blog Authors to create.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BatchInputBlogAuthor"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BatchResponseBlogAuthor"
                }
              }
            }
          },
          "207" : {
            "description" : "multiple statuses",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BatchResponseBlogAuthorWithErrors"
                }
              }
            }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "private_apps_legacy" : [ "content" ]
        }, {
          "oauth2_legacy" : [ "content" ]
        } ]
      }
    },
    "/cms/v3/blogs/posts/{objectId}/draft/push-live" : {
      "post" : {
        "tags" : [ "Blog Posts" ],
        "summary" : "Push Blog Post draft edits live",
        "description" : "Take any changes from the draft version of the Blog Post and apply them to the live version.",
        "operationId" : "post-/cms/v3/blogs/posts/{objectId}/draft/push-live",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "The id of the Blog Post for which it's draft will be pushed live.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "No content",
            "content" : { }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "private_apps_legacy" : [ "content" ]
        }, {
          "oauth2_legacy" : [ "content" ]
        } ]
      }
    },
    "/cms/v3/blogs/authors" : {
      "get" : {
        "tags" : [ "Blog Authors", "Autores do blog" ],
        "summary" : "Obter todos os Autores de blog",
        "description" : "Obtenha a lista de autores do blog. Oferece suporte à paginação e filtragem. Este método é útil para uma integração que analisa esses modelos e usa um serviço externo para sugerir edições.\n",
        "operationId" : "get-/cms/v3/blogs/authors_getPage",
        "parameters" : [ {
          "name" : "createdAt",
          "in" : "query",
          "description" : "Retorne apenas Autores de blog criados exatamente no horário especificado.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "createdAfter",
          "in" : "query",
          "description" : "Retorne apenas Autores de blog criados após o horário especificado.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "createdBefore",
          "in" : "query",
          "description" : "Retorne apenas Autores de blog criados antes do horário especificado.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "updatedAt",
          "in" : "query",
          "description" : "Retorne apenas Autores de blog atualizados pela última vez exatamente no horário especificado.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "updatedAfter",
          "in" : "query",
          "description" : "Retorne apenas os Autores de blog atualizados após o horário especificado.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "updatedBefore",
          "in" : "query",
          "description" : "Retorne apenas os Autores de blog atualizados antes do horário especificado.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Especifica quais campos usar para classificar os resultados. Os campos válidos são \"name\", \"createdAt\", \"updatedAt\", \"createdBy\", \"updatedBy\". O campo \"createdAt\" será usado por padrão.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "after",
          "in" : "query",
          "description" : "O valor do token do cursor para obter o próximo conjunto de resultados. Você pode obter esse valor da propriedade JSON \"paging.next.after\" em uma resposta paginada que contém mais resultados.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "O número máximo de resultados a serem retornados. O padrão é 100.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "archived",
          "in" : "query",
          "description" : "Especifica se deve retornar Autores de blog excluídos. O padrão é \"false\".",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "property",
          "in" : "query",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CollectionResponseWithTotalBlogAuthorForwardPaging"
                }
              }
            }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "private_apps_legacy" : [ "content" ]
        }, {
          "oauth2_legacy" : [ "content" ]
        } ]
      },
      "post" : {
        "tags" : [ "Blog Authors", "Autores do blog" ],
        "summary" : "Criar um novo Autor de blog",
        "description" : "Criar um novo Autor de blog.",
        "operationId" : "post-/cms/v3/blogs/authors_create",
        "parameters" : [ ],
        "requestBody" : {
          "description" : "The JSON representation of a new Blog Author.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BlogAuthor"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BlogAuthor"
                }
              }
            }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "private_apps_legacy" : [ "content" ]
        }, {
          "oauth2_legacy" : [ "content" ]
        } ]
      }
    },
    "/cms/v3/blogs/posts/{objectId}/draft/reset" : {
      "post" : {
        "tags" : [ "Blog Posts" ],
        "summary" : "Reset the Blog Post draft to the live version",
        "description" : "Discards any edits and resets the draft to the live version.",
        "operationId" : "post-/cms/v3/blogs/posts/{objectId}/draft/reset",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "The id of the Blog Post for which it's draft will be reset.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "No content",
            "content" : { }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "private_apps_legacy" : [ "content" ]
        }, {
          "oauth2_legacy" : [ "content" ]
        } ]
      }
    },
    "/cms/v3/blogs/tags/batch/read" : {
      "post" : {
        "tags" : [ "Blog Tags" ],
        "summary" : "Retrieve a batch of Blog Tags",
        "description" : "Retrieve the Blog Tag objects identified in the request body.",
        "operationId" : "post-/cms/v3/blogs/tags/batch/read",
        "parameters" : [ {
          "name" : "archived",
          "in" : "query",
          "description" : "Specifies whether to return deleted Blog Tags. Defaults to `false`.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "requestBody" : {
          "description" : "The JSON array of Blog Tag ids.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BatchInputString"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BatchResponseTag"
                }
              }
            }
          },
          "207" : {
            "description" : "multiple statuses",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BatchResponseTagWithErrors"
                }
              }
            }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "private_apps_legacy" : [ "content" ]
        }, {
          "oauth2_legacy" : [ "content" ]
        } ]
      }
    },
    "/cms/v3/blogs/tags/{objectId}" : {
      "get" : {
        "tags" : [ "Blog Tags" ],
        "summary" : "Retrieve a Blog Tag",
        "description" : "Retrieve the Blog Tag object identified by the id in the path.",
        "operationId" : "get-/cms/v3/blogs/tags/{objectId}",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "The Blog Tag id.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "archived",
          "in" : "query",
          "description" : "Specifies whether to return deleted Blog Tags. Defaults to `false`.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "property",
          "in" : "query",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Tag"
                }
              }
            }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "private_apps_legacy" : [ "content" ]
        }, {
          "oauth2_legacy" : [ "content" ]
        } ]
      },
      "delete" : {
        "tags" : [ "Blog Tags" ],
        "summary" : "Delete a Blog Tag",
        "description" : "Delete the Blog Tag object identified by the id in the path.",
        "operationId" : "delete-/cms/v3/blogs/tags/{objectId}",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "The Blog Tag id.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "archived",
          "in" : "query",
          "description" : "Whether to return only results that have been archived.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "No content",
            "content" : { }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "private_apps_legacy" : [ "content" ]
        }, {
          "oauth2_legacy" : [ "content" ]
        } ]
      },
      "patch" : {
        "tags" : [ "Blog Tags" ],
        "summary" : "Update a Blog Tag",
        "description" : "Sparse updates a single Blog Tag object identified by the id in the path.\nAll the column values need not be specified. Only the that need to be modified can be specified.\n",
        "operationId" : "patch-/cms/v3/blogs/tags/{objectId}",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "The Blog Tag id.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "archived",
          "in" : "query",
          "description" : "Specifies whether to update deleted Blog Tags. Defaults to `false`.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "requestBody" : {
          "description" : "The JSON representation of the updated Blog Tag.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Tag"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Tag"
                }
              }
            }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "private_apps_legacy" : [ "content" ]
        }, {
          "oauth2_legacy" : [ "content" ]
        } ]
      }
    },
    "/cms/v3/blogs/posts/{objectId}" : {
      "get" : {
        "tags" : [ "Blog Posts" ],
        "summary" : "Retrieve a Blog Post",
        "description" : "Retrieve the Blog Post object identified by the id in the path.",
        "operationId" : "get-/cms/v3/blogs/posts/{objectId}",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "The Blog Post id.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "archived",
          "in" : "query",
          "description" : "Specifies whether to return deleted Blog Posts. Defaults to `false`.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "property",
          "in" : "query",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BlogPost"
                }
              }
            }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "private_apps_legacy" : [ "content" ]
        }, {
          "oauth2_legacy" : [ "content" ]
        } ]
      },
      "delete" : {
        "tags" : [ "Blog Posts" ],
        "summary" : "Delete a Blog Post",
        "description" : "Delete the Blog Post object identified by the id in the path.",
        "operationId" : "delete-/cms/v3/blogs/posts/{objectId}",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "The Blog Post id.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "archived",
          "in" : "query",
          "description" : "Whether to return only results that have been archived.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "No content",
            "content" : { }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "private_apps_legacy" : [ "content" ]
        }, {
          "oauth2_legacy" : [ "content" ]
        } ]
      },
      "patch" : {
        "tags" : [ "Blog Posts" ],
        "summary" : "Update a Blog Post",
        "description" : "Sparse updates a single Blog Post object identified by the id in the path.\nAll the column values need not be specified. Only the that need to be modified can be specified.\n",
        "operationId" : "patch-/cms/v3/blogs/posts/{objectId}",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "The Blog Post id.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "archived",
          "in" : "query",
          "description" : "Specifies whether to update deleted Blog Posts. Defaults to `false`.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "requestBody" : {
          "description" : "The JSON representation of the updated Blog Post.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BlogPost"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BlogPost"
                }
              }
            }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "private_apps_legacy" : [ "content" ]
        }, {
          "oauth2_legacy" : [ "content" ]
        } ]
      }
    },
    "/cms/v3/blogs/authors/{objectId}" : {
      "get" : {
        "tags" : [ "Blog Authors", "Autores do blog" ],
        "summary" : "Recuperar um Autor de blog",
        "description" : "Recupere o objeto de Autor de blog identificado pelo ID no caminho.",
        "operationId" : "get-/cms/v3/blogs/authors/{objectId}_getById",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "O ID do Autor de blog.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "archived",
          "in" : "query",
          "description" : "Especifica se deve retornar Autores de blog excluídos. O padrão é \"false\".",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "property",
          "in" : "query",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BlogAuthor"
                }
              }
            }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "private_apps_legacy" : [ "content" ]
        }, {
          "oauth2_legacy" : [ "content" ]
        } ]
      },
      "delete" : {
        "tags" : [ "Blog Authors", "Autores do blog" ],
        "summary" : "Excluir um Autor de blog",
        "description" : "Exclua o objeto de Autor de blog identificado pelo ID no caminho.",
        "operationId" : "delete-/cms/v3/blogs/authors/{objectId}_archive",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "O ID do Autor de blog.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "archived",
          "in" : "query",
          "description" : "Se apenas os resultados que foram arquivados devem ser retornados.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "No content",
            "content" : { }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "private_apps_legacy" : [ "content" ]
        }, {
          "oauth2_legacy" : [ "content" ]
        } ]
      },
      "patch" : {
        "tags" : [ "Blog Authors", "Autores do blog" ],
        "summary" : "Atualizar um Autor de blog",
        "description" : "Atualiza de forma esparsa um único objeto de Autor de blog identificado pelo ID no caminho.\nNão é necessário especificar todos os valores de coluna, apenas o que precisa ser modificado.\n",
        "operationId" : "patch-/cms/v3/blogs/authors/{objectId}_update",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "O ID do Autor de blog.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "archived",
          "in" : "query",
          "description" : "Especifica se deve atualizar Autores de blog excluídos. O padrão é \"false\".",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "requestBody" : {
          "description" : "The JSON representation of the updated Blog Author.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BlogAuthor"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BlogAuthor"
                }
              }
            }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "private_apps_legacy" : [ "content" ]
        }, {
          "oauth2_legacy" : [ "content" ]
        } ]
      }
    },
    "/cms/v3/blogs/authors/multi-language/detach-from-lang-group" : {
      "post" : {
        "tags" : [ "Blog Authors", "Autores do blog" ],
        "summary" : "Remover um Autor de blog de um grupo de vários idiomas",
        "description" : "Remova um Autor de blog de um grupo de vários idiomas.",
        "operationId" : "post-/cms/v3/blogs/authors/multi-language/detach-from-lang-group_detachFromLangGroup",
        "parameters" : [ ],
        "requestBody" : {
          "description" : "The JSON representation of the DetachFromLangGroupRequest object.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DetachFromLangGroupRequestVNext"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "$ref" : "#/components/responses/Error"
          },
          "200" : {
            "description" : "successful operation",
            "content" : { }
          }
        },
        "security" : [ {
          "private_apps_legacy" : [ "content" ]
        }, {
          "oauth2_legacy" : [ "content" ]
        } ]
      }
    },
    "/cms/v3/blogs/posts/batch/read" : {
      "post" : {
        "tags" : [ "Blog Posts" ],
        "summary" : "Retrieve a batch of Blog Posts",
        "description" : "Retrieve the Blog Post objects identified in the request body.",
        "operationId" : "post-/cms/v3/blogs/posts/batch/read",
        "parameters" : [ {
          "name" : "archived",
          "in" : "query",
          "description" : "Specifies whether to return deleted Blog Posts. Defaults to `false`.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "requestBody" : {
          "description" : "The JSON array of Blog Post ids.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BatchInputString"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BatchResponseBlogPost"
                }
              }
            }
          },
          "207" : {
            "description" : "multiple statuses",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BatchResponseBlogPostWithErrors"
                }
              }
            }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "private_apps_legacy" : [ "content" ]
        }, {
          "oauth2_legacy" : [ "content" ]
        } ]
      }
    },
    "/cms/v3/blogs/authors/batch/archive" : {
      "post" : {
        "tags" : [ "Blog Authors", "Autores do blog" ],
        "summary" : "Excluir um lote de Autores de blog",
        "description" : "Exclua os objetos de Autor de blog identificados no corpo da solicitação.",
        "operationId" : "post-/cms/v3/blogs/authors/batch/archive_archiveBatch",
        "parameters" : [ ],
        "requestBody" : {
          "description" : "The JSON array of Blog Author ids.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BatchInputString"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "204" : {
            "description" : "No content",
            "content" : { }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "private_apps_legacy" : [ "content" ]
        }, {
          "oauth2_legacy" : [ "content" ]
        } ]
      }
    },
    "/cms/v3/blogs/authors/batch/read" : {
      "post" : {
        "tags" : [ "Blog Authors", "Autores do blog" ],
        "summary" : "Recuperar um lote de Autores de blog",
        "description" : "Recupere os objetos de Autor de blog identificados no corpo da solicitação.",
        "operationId" : "post-/cms/v3/blogs/authors/batch/read_readBatch",
        "parameters" : [ {
          "name" : "archived",
          "in" : "query",
          "description" : "Especifica se deve retornar Autores de blog excluídos. O padrão é \"false\".",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "requestBody" : {
          "description" : "The JSON array of Blog Author ids.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BatchInputString"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BatchResponseBlogAuthor"
                }
              }
            }
          },
          "207" : {
            "description" : "multiple statuses",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BatchResponseBlogAuthorWithErrors"
                }
              }
            }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "private_apps_legacy" : [ "content" ]
        }, {
          "oauth2_legacy" : [ "content" ]
        } ]
      }
    },
    "/cms/v3/blogs/posts" : {
      "get" : {
        "tags" : [ "Blog Posts" ],
        "summary" : "Get all Blog Posts",
        "description" : "Get the list of blog posts. Supports paging and filtering. This method would be useful for an integration that examined these models and used an external service to suggest edits.\n",
        "operationId" : "get-/cms/v3/blogs/posts",
        "parameters" : [ {
          "name" : "createdAt",
          "in" : "query",
          "description" : "Only return Blog Posts created at exactly the specified time.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "createdAfter",
          "in" : "query",
          "description" : "Only return Blog Posts created after the specified time.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "createdBefore",
          "in" : "query",
          "description" : "Only return Blog Posts created before the specified time.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "updatedAt",
          "in" : "query",
          "description" : "Only return Blog Posts last updated at exactly the specified time.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "updatedAfter",
          "in" : "query",
          "description" : "Only return Blog Posts last updated after the specified time.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "updatedBefore",
          "in" : "query",
          "description" : "Only return Blog Posts last updated before the specified time.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Specifies which fields to use for sorting results. Valid fields are `name`, `createdAt`, `updatedAt`, `createdBy`, `updatedBy`. `createdAt` will be used by default.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "after",
          "in" : "query",
          "description" : "The cursor token value to get the next set of results. You can get this from the `paging.next.after` JSON property of a paged response containing more results.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "The maximum number of results to return. Default is 20.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "archived",
          "in" : "query",
          "description" : "Specifies whether to return deleted Blog Posts. Defaults to `false`.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "property",
          "in" : "query",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CollectionResponseWithTotalBlogPostForwardPaging"
                }
              }
            }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "private_apps_legacy" : [ "content" ]
        }, {
          "oauth2_legacy" : [ "content" ]
        } ]
      },
      "post" : {
        "tags" : [ "Blog Posts" ],
        "summary" : "Create a new Blog Post",
        "description" : "Create a new Blog Post.",
        "operationId" : "post-/cms/v3/blogs/posts",
        "requestBody" : {
          "description" : "The JSON representation of a new Blog Post.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BlogPost"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BlogPost"
                }
              }
            }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "private_apps_legacy" : [ "content" ]
        }, {
          "oauth2_legacy" : [ "content" ]
        } ]
      }
    },
    "/cms/v3/blogs/posts/clone" : {
      "post" : {
        "tags" : [ "Blog Posts" ],
        "summary" : "Clone a Blog Post",
        "description" : "Clone a Blog Post.",
        "operationId" : "post-/cms/v3/blogs/posts/clone",
        "requestBody" : {
          "description" : "The JSON representation of the ContentCloneRequest object.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ContentCloneRequestVNext"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BlogPost"
                }
              }
            }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "private_apps_legacy" : [ "content" ]
        }, {
          "oauth2_legacy" : [ "content" ]
        } ]
      }
    },
    "/cms/v3/blogs/authors/multi-language/update-languages" : {
      "post" : {
        "tags" : [ "Blog Authors", "Autores do blog" ],
        "summary" : "Atualizar idiomas do grupo de vários idiomas",
        "description" : "Defina explicitamente novos idiomas para cada Autor de blog em um grupo de vários idiomas.",
        "operationId" : "post-/cms/v3/blogs/authors/multi-language/update-languages_updateLangs",
        "parameters" : [ ],
        "requestBody" : {
          "description" : "The JSON representation of the UpdateLanguagesRequest object.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UpdateLanguagesRequestVNext"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "$ref" : "#/components/responses/Error"
          },
          "200" : {
            "description" : "successful operation",
            "content" : { }
          }
        },
        "security" : [ {
          "private_apps_legacy" : [ "content" ]
        }, {
          "oauth2_legacy" : [ "content" ]
        } ]
      }
    },
    "/cms/v3/blogs/tags/batch/update" : {
      "post" : {
        "tags" : [ "Blog Tags" ],
        "summary" : "Update a batch of Blog Tags",
        "description" : "Update the Blog Tag objects identified in the request body.",
        "operationId" : "post-/cms/v3/blogs/tags/batch/update",
        "parameters" : [ {
          "name" : "archived",
          "in" : "query",
          "description" : "Specifies whether to update deleted Blog Tags. Defaults to `false`.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "requestBody" : {
          "description" : "A JSON array of the JSON representations of the updated Blog Tags.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BatchInputJsonNode"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BatchResponseTag"
                }
              }
            }
          },
          "207" : {
            "description" : "multiple statuses",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BatchResponseTagWithErrors"
                }
              }
            }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "private_apps_legacy" : [ "content" ]
        }, {
          "oauth2_legacy" : [ "content" ]
        } ]
      }
    },
    "/cms/v3/blogs/tags/multi-language/update-languages" : {
      "post" : {
        "tags" : [ "Blog Tags" ],
        "summary" : "Update languages of multi-language group",
        "description" : "Explicitly set new languages for each Blog Tag in a multi-language group.",
        "operationId" : "post-/cms/v3/blogs/tags/multi-language/update-languages",
        "requestBody" : {
          "description" : "The JSON representation of the UpdateLanguagesRequest object.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UpdateLanguagesRequestVNext"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "$ref" : "#/components/responses/Error"
          },
          "200" : {
            "description" : "successful operation",
            "content" : { }
          }
        },
        "security" : [ {
          "private_apps_legacy" : [ "content" ]
        }, {
          "oauth2_legacy" : [ "content" ]
        } ]
      }
    },
    "/cms/v3/blogs/tags/multi-language/detach-from-lang-group" : {
      "post" : {
        "tags" : [ "Blog Tags" ],
        "summary" : "Detach a Blog Tag from a multi-language group",
        "description" : "Detach a Blog Tag from a multi-language group.",
        "operationId" : "post-/cms/v3/blogs/tags/multi-language/detach-from-lang-group",
        "requestBody" : {
          "description" : "The JSON representation of the DetachFromLangGroupRequest object.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DetachFromLangGroupRequestVNext"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "$ref" : "#/components/responses/Error"
          },
          "200" : {
            "description" : "successful operation",
            "content" : { }
          }
        },
        "security" : [ {
          "private_apps_legacy" : [ "content" ]
        }, {
          "oauth2_legacy" : [ "content" ]
        } ]
      }
    },
    "/cms/v3/blogs/authors/multi-language/set-new-lang-primary" : {
      "put" : {
        "tags" : [ "Blog Authors", "Autores do blog" ],
        "summary" : "Definir um novo idioma principal",
        "description" : "Defina um Autor de blog como o idioma principal de um grupo de vários idiomas.",
        "operationId" : "put-/cms/v3/blogs/authors/multi-language/set-new-lang-primary_setLangPrimary",
        "parameters" : [ ],
        "requestBody" : {
          "description" : "The JSON representation of the SetNewLanguagePrimaryRequest object.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SetNewLanguagePrimaryRequestVNext"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "204" : {
            "description" : "No content",
            "content" : { }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "private_apps_legacy" : [ "content" ]
        }, {
          "oauth2_legacy" : [ "content" ]
        } ]
      }
    },
    "/cms/v3/blogs/tags/multi-language/set-new-lang-primary" : {
      "put" : {
        "tags" : [ "Blog Tags" ],
        "summary" : "Set a new primary language",
        "description" : "Set a Blog Tag as the primary language of a multi-language group.",
        "operationId" : "put-/cms/v3/blogs/tags/multi-language/set-new-lang-primary",
        "requestBody" : {
          "description" : "The JSON representation of the SetNewLanguagePrimaryRequest object.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SetNewLanguagePrimaryRequestVNext"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "204" : {
            "description" : "No content",
            "content" : { }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "private_apps_legacy" : [ "content" ]
        }, {
          "oauth2_legacy" : [ "content" ]
        } ]
      }
    },
    "/cms/v3/blogs/posts/batch/archive" : {
      "post" : {
        "tags" : [ "Blog Posts" ],
        "summary" : "Delete a batch of Blog Posts",
        "description" : "Delete the Blog Post objects identified in the request body.\nNote: This is not the same as the in-app `archive` function. To perform a dashboard `archive` send an normal update with the `archivedInDashboard` field set to true.",
        "operationId" : "post-/cms/v3/blogs/posts/batch/archive",
        "requestBody" : {
          "description" : "The JSON array of Blog Post ids.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BatchInputString"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "204" : {
            "description" : "No content",
            "content" : { }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "private_apps_legacy" : [ "content" ]
        }, {
          "oauth2_legacy" : [ "content" ]
        } ]
      }
    },
    "/cms/v3/blogs/tags" : {
      "get" : {
        "tags" : [ "Blog Tags" ],
        "summary" : "Get all Blog Tags",
        "description" : "Get the list of blog tags. Supports paging and filtering. This method would be useful for an integration that examined these models and used an external service to suggest edits.\n",
        "operationId" : "get-/cms/v3/blogs/tags",
        "parameters" : [ {
          "name" : "createdAt",
          "in" : "query",
          "description" : "Only return Blog Tags created at exactly the specified time.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "createdAfter",
          "in" : "query",
          "description" : "Only return Blog Tags created after the specified time.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "createdBefore",
          "in" : "query",
          "description" : "Only return Blog Tags created before the specified time.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "updatedAt",
          "in" : "query",
          "description" : "Only return Blog Tags last updated at exactly the specified time.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "updatedAfter",
          "in" : "query",
          "description" : "Only return Blog Tags last updated after the specified time.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "updatedBefore",
          "in" : "query",
          "description" : "Only return Blog Tags last updated before the specified time.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Specifies which fields to use for sorting results. Valid fields are `name`, `createdAt`, `updatedAt`, `createdBy`, `updatedBy`. `createdAt` will be used by default.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "after",
          "in" : "query",
          "description" : "The cursor token value to get the next set of results. You can get this from the `paging.next.after` JSON property of a paged response containing more results.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "The maximum number of results to return. Default is 100.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "archived",
          "in" : "query",
          "description" : "Specifies whether to return deleted Blog Tags. Defaults to `false`.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "property",
          "in" : "query",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CollectionResponseWithTotalTagForwardPaging"
                }
              }
            }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "private_apps_legacy" : [ "content" ]
        }, {
          "oauth2_legacy" : [ "content" ]
        } ]
      },
      "post" : {
        "tags" : [ "Blog Tags" ],
        "summary" : "Create a new Blog Tag",
        "description" : "Create a new Blog Tag.",
        "operationId" : "post-/cms/v3/blogs/tags",
        "requestBody" : {
          "description" : "The JSON representation of a new Blog Tag.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Tag"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Tag"
                }
              }
            }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "private_apps_legacy" : [ "content" ]
        }, {
          "oauth2_legacy" : [ "content" ]
        } ]
      }
    },
    "/cms/v3/blogs/authors/multi-language/create-language-variation" : {
      "post" : {
        "tags" : [ "Blog Authors", "Autores do blog" ],
        "summary" : "Criar uma nova variante de idioma",
        "description" : "Crie uma nova variação de idioma a partir de um Autor de blog existente.",
        "operationId" : "post-/cms/v3/blogs/authors/multi-language/create-language-variation_createLangVariation",
        "parameters" : [ ],
        "requestBody" : {
          "description" : "The JSON representation of the ContentLanguageCloneRequest object.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BlogAuthorCloneRequestVNext"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BlogAuthor"
                }
              }
            }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "private_apps_legacy" : [ "content" ]
        }, {
          "oauth2_legacy" : [ "content" ]
        } ]
      }
    },
    "/cms/v3/blogs/posts/multi-language/attach-to-lang-group" : {
      "post" : {
        "tags" : [ "Blog Posts" ],
        "summary" : "Attach a Blog Post to a multi-language group",
        "description" : "Attach a Blog Post to a multi-language group.",
        "operationId" : "post-/cms/v3/blogs/posts/multi-language/attach-to-lang-group",
        "requestBody" : {
          "description" : "The JSON representation of the AttachToLangPrimaryRequest object.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AttachToLangPrimaryRequestVNext"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "$ref" : "#/components/responses/Error"
          },
          "200" : {
            "description" : "successful operation",
            "content" : { }
          }
        },
        "security" : [ {
          "private_apps_legacy" : [ "content" ]
        }, {
          "oauth2_legacy" : [ "content" ]
        } ]
      }
    },
    "/cms/v3/blogs/tags/multi-language/attach-to-lang-group" : {
      "post" : {
        "tags" : [ "Blog Tags" ],
        "summary" : "Attach a Blog Tag to a multi-language group",
        "description" : "Attach a Blog Tag to a multi-language group.",
        "operationId" : "post-/cms/v3/blogs/tags/multi-language/attach-to-lang-group",
        "requestBody" : {
          "description" : "The JSON representation of the AttachToLangPrimaryRequest object.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AttachToLangPrimaryRequestVNext"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "$ref" : "#/components/responses/Error"
          },
          "200" : {
            "description" : "successful operation",
            "content" : { }
          }
        },
        "security" : [ {
          "private_apps_legacy" : [ "content" ]
        }, {
          "oauth2_legacy" : [ "content" ]
        } ]
      }
    },
    "/cms/v3/blogs/posts/multi-language/set-new-lang-primary" : {
      "put" : {
        "tags" : [ "Blog Posts" ],
        "summary" : "Set a new primary language",
        "description" : "Set a Blog Post as the primary language of a multi-language group.",
        "operationId" : "put-/cms/v3/blogs/posts/multi-language/set-new-lang-primary",
        "requestBody" : {
          "description" : "The JSON representation of the SetNewLanguagePrimaryRequest object.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SetNewLanguagePrimaryRequestVNext"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "204" : {
            "description" : "No content",
            "content" : { }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "private_apps_legacy" : [ "content" ]
        }, {
          "oauth2_legacy" : [ "content" ]
        } ]
      }
    },
    "/cms/v3/blogs/posts/{objectId}/revisions" : {
      "get" : {
        "tags" : [ "Blog Posts" ],
        "summary" : "Retrieves all the previous versions of a blog post",
        "description" : "Retrieves all the previous versions of a blog post.",
        "operationId" : "get-/cms/v3/blogs/posts/{objectId}/revisions",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "The Blog Post id.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "after",
          "in" : "query",
          "description" : "The cursor token value to get the next set of results. You can get this from the `paging.next.after` JSON property of a paged response containing more results.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "before",
          "in" : "query",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "The maximum number of results to return. Default is 100.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CollectionResponseWithTotalVersionBlogPost"
                }
              }
            }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "private_apps_legacy" : [ "content" ]
        }, {
          "oauth2_legacy" : [ "content" ]
        } ]
      }
    },
    "/cms/v3/blogs/tags/multi-language/create-language-variation" : {
      "post" : {
        "tags" : [ "Blog Tags" ],
        "summary" : "Create a new language variation",
        "description" : "Create a new language variation from an existing Blog Tag",
        "operationId" : "post-/cms/v3/blogs/tags/multi-language/create-language-variation",
        "requestBody" : {
          "description" : "The JSON representation of the ContentLanguageCloneRequest object.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/TagCloneRequestVNext"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Tag"
                }
              }
            }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "private_apps_legacy" : [ "content" ]
        }, {
          "oauth2_legacy" : [ "content" ]
        } ]
      }
    }
  },
  "components" : {
    "schemas" : {
      "BatchInputString" : {
        "required" : [ "inputs" ],
        "type" : "object",
        "properties" : {
          "inputs" : {
            "type" : "array",
            "description" : "As strings para inserir.",
            "items" : {
              "type" : "string"
            }
          }
        },
        "description" : "Wrapper for providing an array of strings as inputs."
      },
      "BatchInputBlogAuthor" : {
        "required" : [ "inputs" ],
        "type" : "object",
        "properties" : {
          "inputs" : {
            "type" : "array",
            "description" : "Os autores do blog para inserir.",
            "items" : {
              "$ref" : "#/components/schemas/BlogAuthor"
            }
          }
        },
        "description" : "Wrapper for providing an array of blog authors as inputs."
      },
      "StandardError" : {
        "required" : [ "category", "context", "errors", "links", "message", "status" ],
        "type" : "object",
        "properties" : {
          "subCategory" : {
            "type" : "object",
            "properties" : { },
            "description" : "Subcategoria do erro."
          },
          "context" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            },
            "description" : "Contexto do erro."
          },
          "links" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "Links do erro."
          },
          "id" : {
            "type" : "string",
            "description" : "ID do erro."
          },
          "category" : {
            "type" : "string",
            "description" : "Categoria do erro."
          },
          "message" : {
            "type" : "string",
            "description" : "Mensagem do erro."
          },
          "errors" : {
            "type" : "array",
            "description" : "Lista de detalhes do erro.",
            "items" : {
              "$ref" : "#/components/schemas/ErrorDetail"
            }
          },
          "status" : {
            "type" : "string",
            "description" : "Status do erro."
          }
        },
        "description" : "Model definition for a standard error."
      },
      "BatchResponseTag" : {
        "required" : [ "completedAt", "results", "startedAt", "status" ],
        "type" : "object",
        "properties" : {
          "completedAt" : {
            "type" : "string",
            "description" : "A hora em que a operação em lote foi concluída.",
            "format" : "date-time"
          },
          "requestedAt" : {
            "type" : "string",
            "description" : "A hora em que a operação em lote foi solicitada.",
            "format" : "date-time"
          },
          "startedAt" : {
            "type" : "string",
            "description" : "A hora em que a operação em lote foi iniciada.",
            "format" : "date-time"
          },
          "links" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "Os links associados à operação em lote."
          },
          "results" : {
            "type" : "array",
            "description" : "Os resultados da operação em lote.",
            "items" : {
              "$ref" : "#/components/schemas/Tag"
            }
          },
          "status" : {
            "type" : "string",
            "description" : "O status da operação em lote.",
            "enum" : [ "PENDING", "PROCESSING", "CANCELED", "COMPLETE" ]
          }
        },
        "description" : "Response object for batch operations on blog tags."
      },
      "BatchInputJsonNode" : {
        "required" : [ "inputs" ],
        "type" : "object",
        "properties" : {
          "inputs" : {
            "type" : "array",
            "description" : "Os nós JSON para inserir.",
            "items" : {
              "type" : "object",
              "properties" : { }
            }
          }
        },
        "description" : "Wrapper for providing an array of JSON nodes as inputs."
      },
      "UpdateLanguagesRequestVNext" : {
        "required" : [ "languages", "primaryId" ],
        "type" : "object",
        "properties" : {
          "languages" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "Mapa de IDs de objetos para os idiomas associados do objeto no grupo de vários idiomas."
          },
          "primaryId" : {
            "type" : "string",
            "description" : "O ID do objeto principal em um grupo de vários idiomas."
          }
        },
        "description" : "Request object for updating languages within a multi-language group."
      },
      "CollectionResponseWithTotalVersionBlogPost" : {
        "required" : [ "results", "total" ],
        "type" : "object",
        "properties" : {
          "total" : {
            "type" : "integer",
            "description" : "Número total de versões de posts de blog.",
            "format" : "int32"
          },
          "paging" : {
            "$ref" : "#/components/schemas/Paging"
          },
          "results" : {
            "type" : "array",
            "description" : "Coleção de versões de posts de blog.",
            "items" : {
              "$ref" : "#/components/schemas/VersionBlogPost"
            }
          }
        },
        "description" : "Response object for collections of blog post versions with pagination information."
      },
      "SetNewLanguagePrimaryRequestVNext" : {
        "required" : [ "id" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "O ID do objeto a ser definido como principal no grupo de vários idiomas."
          }
        },
        "description" : "Request body object for setting a new primary language."
      },
      "BlogAuthorCloneRequestVNext" : {
        "required" : [ "blogAuthor", "id" ],
        "type" : "object",
        "properties" : {
          "language" : {
            "type" : "string",
            "description" : "O idioma do objeto recém-clonado."
          },
          "id" : {
            "type" : "string",
            "description" : "ID do objeto a ser clonado."
          },
          "primaryLanguage" : {
            "type" : "string",
            "description" : "O idioma principal no grupo de vários idiomas."
          },
          "blogAuthor" : {
            "$ref" : "#/components/schemas/BlogAuthor"
          }
        },
        "description" : "Request body object for cloning blog authors."
      },
      "RGBAColor" : {
        "required" : [ "a", "b", "g", "r" ],
        "type" : "object",
        "properties" : {
          "a" : {
            "type" : "number",
            "description" : "Alfa."
          },
          "r" : {
            "type" : "integer",
            "description" : "Vermelho.",
            "format" : "int32"
          },
          "b" : {
            "type" : "integer",
            "description" : "Azul.",
            "format" : "int32"
          },
          "g" : {
            "type" : "integer",
            "description" : "Verde.",
            "format" : "int32"
          }
        },
        "description" : "A color defined by RGB values."
      },
      "DetachFromLangGroupRequestVNext" : {
        "required" : [ "id" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "O ID do objeto a ser removido de um grupo de vários idiomas."
          }
        },
        "description" : "Request body object for detaching objects from multi-language groups."
      },
      "BlogAuthor" : {
        "required" : [ "avatar", "bio", "created", "deletedAt", "displayName", "email", "facebook", "fullName", "id", "language", "linkedin", "name", "slug", "translatedFromId", "twitter", "updated", "website" ],
        "type" : "object",
        "properties" : {
          "website" : {
            "type" : "string",
            "description" : "O URL para o site do Autor do blog."
          },
          "displayName" : {
            "type" : "string",
            "description" : "O nome completo do Autor do blog a ser exibido."
          },
          "created" : {
            "type" : "string",
            "format" : "date-time"
          },
          "facebook" : {
            "type" : "string",
            "description" : "O URL para a página do Facebook do Autor do blog."
          },
          "fullName" : {
            "type" : "string"
          },
          "bio" : {
            "type" : "string",
            "description" : "Uma breve biografia do autor do blog."
          },
          "language" : {
            "type" : "string",
            "description" : "O código de idioma ISO 639 explicitamente definido para o autor do blog.",
            "enum" : [ "af", "af-na", "af-za", "agq", "agq-cm", "ak", "ak-gh", "am", "am-et", "ar", "ar-001", "ar-ae", "ar-bh", "ar-dj", "ar-dz", "ar-eg", "ar-eh", "ar-er", "ar-il", "ar-iq", "ar-jo", "ar-km", "ar-kw", "ar-lb", "ar-ly", "ar-ma", "ar-mr", "ar-om", "ar-ps", "ar-qa", "ar-sa", "ar-sd", "ar-so", "ar-ss", "ar-sy", "ar-td", "ar-tn", "ar-ye", "as", "as-in", "asa", "asa-tz", "ast", "ast-es", "az", "az-az", "bas", "bas-cm", "be", "be-by", "bem", "bem-zm", "bez", "bez-tz", "bg", "bg-bg", "bm", "bm-ml", "bn", "bn-bd", "bn-in", "bo", "bo-cn", "bo-in", "br", "br-fr", "brx", "brx-in", "bs", "bs-ba", "ca", "ca-ad", "ca-es", "ca-fr", "ca-it", "ccp", "ccp-bd", "ccp-in", "ce", "ce-ru", "ceb", "ceb-ph", "cgg", "cgg-ug", "chr", "chr-us", "ckb", "ckb-iq", "ckb-ir", "cs", "cs-cz", "cu", "cu-ru", "cy", "cy-gb", "da", "da-dk", "da-gl", "dav", "dav-ke", "de", "de-at", "de-be", "de-ch", "de-de", "de-gr", "de-it", "de-li", "de-lu", "dje", "dje-ne", "doi", "doi-in", "dsb", "dsb-de", "dua", "dua-cm", "dyo", "dyo-sn", "dz", "dz-bt", "ebu", "ebu-ke", "ee", "ee-gh", "ee-tg", "el", "el-cy", "el-gr", "en", "en-001", "en-150", "en-ae", "en-ag", "en-ai", "en-as", "en-at", "en-au", "en-bb", "en-be", "en-bi", "en-bm", "en-bs", "en-bw", "en-bz", "en-ca", "en-cc", "en-ch", "en-ck", "en-cm", "en-cn", "en-cx", "en-cy", "en-de", "en-dg", "en-dk", "en-dm", "en-er", "en-fi", "en-fj", "en-fk", "en-fm", "en-gb", "en-gd", "en-gg", "en-gh", "en-gi", "en-gm", "en-gu", "en-gy", "en-hk", "en-ie", "en-il", "en-im", "en-in", "en-io", "en-je", "en-jm", "en-ke", "en-ki", "en-kn", "en-ky", "en-lc", "en-lr", "en-ls", "en-lu", "en-mg", "en-mh", "en-mo", "en-mp", "en-ms", "en-mt", "en-mu", "en-mw", "en-mx", "en-my", "en-na", "en-nf", "en-ng", "en-nl", "en-nr", "en-nu", "en-nz", "en-pg", "en-ph", "en-pk", "en-pn", "en-pr", "en-pw", "en-rw", "en-sb", "en-sc", "en-sd", "en-se", "en-sg", "en-sh", "en-si", "en-sl", "en-ss", "en-sx", "en-sz", "en-tc", "en-tk", "en-to", "en-tt", "en-tv", "en-tz", "en-ug", "en-um", "en-us", "en-vc", "en-vg", "en-vi", "en-vu", "en-ws", "en-za", "en-zm", "en-zw", "eo", "eo-001", "es", "es-419", "es-ar", "es-bo", "es-br", "es-bz", "es-cl", "es-co", "es-cr", "es-cu", "es-do", "es-ea", "es-ec", "es-es", "es-gq", "es-gt", "es-hn", "es-ic", "es-mx", "es-ni", "es-pa", "es-pe", "es-ph", "es-pr", "es-py", "es-sv", "es-us", "es-uy", "es-ve", "et", "et-ee", "eu", "eu-es", "ewo", "ewo-cm", "fa", "fa-af", "fa-ir", "ff", "ff-bf", "ff-cm", "ff-gh", "ff-gm", "ff-gn", "ff-gw", "ff-lr", "ff-mr", "ff-ne", "ff-ng", "ff-sl", "ff-sn", "fi", "fi-fi", "fil", "fil-ph", "fo", "fo-dk", "fo-fo", "fr", "fr-be", "fr-bf", "fr-bi", "fr-bj", "fr-bl", "fr-ca", "fr-cd", "fr-cf", "fr-cg", "fr-ch", "fr-ci", "fr-cm", "fr-dj", "fr-dz", "fr-fr", "fr-ga", "fr-gf", "fr-gn", "fr-gp", "fr-gq", "fr-ht", "fr-km", "fr-lu", "fr-ma", "fr-mc", "fr-mf", "fr-mg", "fr-ml", "fr-mq", "fr-mr", "fr-mu", "fr-nc", "fr-ne", "fr-pf", "fr-pm", "fr-re", "fr-rw", "fr-sc", "fr-sn", "fr-sy", "fr-td", "fr-tg", "fr-tn", "fr-vu", "fr-wf", "fr-yt", "fur", "fur-it", "fy", "fy-nl", "ga", "ga-gb", "ga-ie", "gd", "gd-gb", "gl", "gl-es", "gsw", "gsw-ch", "gsw-fr", "gsw-li", "gu", "gu-in", "guz", "guz-ke", "gv", "gv-im", "ha", "ha-gh", "ha-ne", "ha-ng", "haw", "haw-us", "he", "hi", "hi-in", "hr", "hr-ba", "hr-hr", "hsb", "hsb-de", "hu", "hu-hu", "hy", "hy-am", "ia", "ia-001", "id", "ig", "ig-ng", "ii", "ii-cn", "id-id", "is", "is-is", "it", "it-ch", "it-it", "it-sm", "it-va", "he-il", "ja", "ja-jp", "jgo", "jgo-cm", "yi", "yi-001", "jmc", "jmc-tz", "jv", "jv-id", "ka", "ka-ge", "kab", "kab-dz", "kam", "kam-ke", "kde", "kde-tz", "kea", "kea-cv", "khq", "khq-ml", "ki", "ki-ke", "kk", "kk-kz", "kkj", "kkj-cm", "kl", "kl-gl", "kln", "kln-ke", "km", "km-kh", "kn", "kn-in", "ko", "ko-kp", "ko-kr", "kok", "kok-in", "ks", "ks-in", "ksb", "ksb-tz", "ksf", "ksf-cm", "ksh", "ksh-de", "kw", "kw-gb", "ku", "ku-tr", "ky", "ky-kg", "lag", "lag-tz", "lb", "lb-lu", "lg", "lg-ug", "lkt", "lkt-us", "ln", "ln-ao", "ln-cd", "ln-cf", "ln-cg", "lo", "lo-la", "lrc", "lrc-iq", "lrc-ir", "lt", "lt-lt", "lu", "lu-cd", "luo", "luo-ke", "luy", "luy-ke", "lv", "lv-lv", "mai", "mai-in", "mas", "mas-ke", "mas-tz", "mer", "mer-ke", "mfe", "mfe-mu", "mg", "mg-mg", "mgh", "mgh-mz", "mgo", "mgo-cm", "mi", "mi-nz", "mk", "mk-mk", "ml", "ml-in", "mn", "mn-mn", "mni", "mni-in", "mr", "mr-in", "ms", "ms-bn", "ms-id", "ms-my", "ms-sg", "mt", "mt-mt", "mua", "mua-cm", "my", "my-mm", "mzn", "mzn-ir", "naq", "naq-na", "nb", "nb-no", "nb-sj", "nd", "nd-zw", "nds", "nds-de", "nds-nl", "ne", "ne-in", "ne-np", "nl", "nl-aw", "nl-be", "nl-ch", "nl-bq", "nl-cw", "nl-lu", "nl-nl", "nl-sr", "nl-sx", "nmg", "nmg-cm", "nn", "nn-no", "nnh", "nnh-cm", "no", "no-no", "nus", "nus-ss", "nyn", "nyn-ug", "om", "om-et", "om-ke", "or", "or-in", "os", "os-ge", "os-ru", "pa", "pa-in", "pa-pk", "pcm", "pcm-ng", "pl", "pl-pl", "prg", "prg-001", "ps", "ps-af", "ps-pk", "pt", "pt-ao", "pt-br", "pt-ch", "pt-cv", "pt-gq", "pt-gw", "pt-lu", "pt-mo", "pt-mz", "pt-pt", "pt-st", "pt-tl", "qu", "qu-bo", "qu-ec", "qu-pe", "rm", "rm-ch", "rn", "rn-bi", "ro", "ro-md", "ro-ro", "rof", "rof-tz", "ru", "ru-by", "ru-kg", "ru-kz", "ru-md", "ru-ru", "ru-ua", "rw", "rw-rw", "rwk", "rwk-tz", "sa", "sa-in", "sah", "sah-ru", "saq", "saq-ke", "sat", "sat-in", "sbp", "sbp-tz", "sd", "sd-in", "sd-pk", "se", "se-fi", "se-no", "se-se", "seh", "seh-mz", "ses", "ses-ml", "sg", "sg-cf", "shi", "shi-ma", "si", "si-lk", "sk", "sk-sk", "sl", "sl-si", "smn", "smn-fi", "sn", "sn-zw", "so", "so-dj", "so-et", "so-ke", "so-so", "sq", "sq-al", "sq-mk", "sq-xk", "sr", "sr-ba", "sr-cs", "sr-me", "sr-rs", "sr-xk", "su", "su-id", "sv", "sv-ax", "sv-fi", "sv-se", "sw", "sw-cd", "sw-ke", "sw-tz", "sw-ug", "sy", "ta", "ta-in", "ta-lk", "ta-my", "ta-sg", "te", "te-in", "teo", "teo-ke", "teo-ug", "tg", "tg-tj", "th", "th-th", "ti", "ti-er", "ti-et", "tk", "tk-tm", "tl", "to", "to-to", "tr", "tr-cy", "tr-tr", "tt", "tt-ru", "twq", "twq-ne", "tzm", "tzm-ma", "ug", "ug-cn", "uk", "uk-ua", "ur", "ur-in", "ur-pk", "uz", "uz-af", "uz-uz", "vai", "vai-lr", "vi", "vi-vn", "vo", "vo-001", "vun", "vun-tz", "wae", "wae-ch", "wo", "wo-sn", "xh", "xh-za", "xog", "xog-ug", "yav", "yav-cm", "yo", "yo-bj", "yo-ng", "yue", "yue-cn", "yue-hk", "zgh", "zgh-ma", "zh", "zh-cn", "zh-hk", "zh-mo", "zh-sg", "zh-tw", "zh-hans", "zh-hant", "zu", "zu-za" ]
          },
          "linkedin" : {
            "type" : "string",
            "description" : "O URL para a página do LinkedIn do autor do blog."
          },
          "avatar" : {
            "type" : "string",
            "description" : "O URL para o avatar do autor do blog, se for fornecido um personalizado."
          },
          "translatedFromId" : {
            "type" : "integer",
            "description" : "O ID do autor do blog principal do qual este objeto foi traduzido.",
            "format" : "int64"
          },
          "twitter" : {
            "type" : "string",
            "description" : "O URL ou nome de usuário da conta do Twitter associada ao Autor do blog. Será normalizado para o URL do Twitter para o usuário mencionado."
          },
          "deletedAt" : {
            "type" : "string",
            "description" : "A data e hora (no formato ISO8601) em que este Autor de blog foi excluído.",
            "format" : "date-time"
          },
          "name" : {
            "type" : "string"
          },
          "id" : {
            "type" : "string",
            "description" : "O ID exclusivo do Autor do blog."
          },
          "updated" : {
            "type" : "string",
            "format" : "date-time"
          },
          "email" : {
            "type" : "string",
            "description" : "O endereço de e-mail do Autor do blog."
          },
          "slug" : {
            "type" : "string"
          }
        },
        "description" : "Model definition for a Blog Author."
      },
      "CollectionResponseWithTotalTagForwardPaging" : {
        "required" : [ "results", "total" ],
        "type" : "object",
        "properties" : {
          "total" : {
            "type" : "integer",
            "description" : "Número total de tags de blog.",
            "format" : "int32"
          },
          "paging" : {
            "$ref" : "#/components/schemas/ForwardPaging"
          },
          "results" : {
            "type" : "array",
            "description" : "Coleção de tags de blog.",
            "items" : {
              "$ref" : "#/components/schemas/Tag"
            }
          }
        },
        "description" : "Response object for collections of blog tags with pagination information."
      },
      "RowMetaData" : {
        "required" : [ "cssClass", "styles" ],
        "type" : "object",
        "properties" : {
          "cssClass" : {
            "type" : "string"
          },
          "styles" : {
            "$ref" : "#/components/schemas/Styles"
          }
        }
      },
      "ContentLanguageVariation" : {
        "required" : [ "archivedInDashboard", "authorName", "campaign", "created", "id", "name", "password", "publicAccessRules", "publicAccessRulesEnabled", "publishDate", "slug", "state", "updated" ],
        "type" : "object",
        "properties" : {
          "archivedInDashboard" : {
            "type" : "boolean"
          },
          "created" : {
            "type" : "string",
            "format" : "date-time"
          },
          "tagIds" : {
            "type" : "array",
            "items" : {
              "type" : "integer",
              "format" : "int64"
            }
          },
          "publishDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "publicAccessRules" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PublicAccessRule"
            }
          },
          "password" : {
            "type" : "string"
          },
          "authorName" : {
            "type" : "string"
          },
          "publicAccessRulesEnabled" : {
            "type" : "boolean"
          },
          "name" : {
            "type" : "string"
          },
          "campaign" : {
            "type" : "string"
          },
          "id" : {
            "type" : "integer",
            "format" : "int64"
          },
          "state" : {
            "type" : "string"
          },
          "updated" : {
            "type" : "string",
            "format" : "date-time"
          },
          "slug" : {
            "type" : "string"
          }
        }
      },
      "AttachToLangPrimaryRequestVNext" : {
        "required" : [ "id", "language", "primaryId" ],
        "type" : "object",
        "properties" : {
          "language" : {
            "type" : "string",
            "description" : "Idioma definido para o objeto a ser adicionado a um grupo de vários idiomas."
          },
          "id" : {
            "type" : "string",
            "description" : "O ID do objeto a ser adicionado a um grupo de vários idiomas."
          },
          "primaryId" : {
            "type" : "string",
            "description" : "O ID do objeto de idioma principal no grupo de vários idiomas."
          },
          "primaryLanguage" : {
            "type" : "string",
            "description" : "O idioma principal do grupo de vários idiomas."
          }
        },
        "description" : "Request body object for attaching objects to multi-language groups."
      },
      "ErrorDetail" : {
        "required" : [ "message" ],
        "type" : "object",
        "properties" : {
          "subCategory" : {
            "type" : "string",
            "description" : "Uma categoria específica que contém mais detalhes específicos sobre o erro"
          },
          "code" : {
            "type" : "string",
            "description" : "O código de status associado ao detalhe do erro"
          },
          "in" : {
            "type" : "string",
            "description" : "O nome do campo ou parâmetro no qual o erro foi encontrado."
          },
          "context" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            },
            "description" : "Contexto sobre a condição de erro",
            "example" : {
              "missingScopes" : [ "scope1", "scope2" ]
            }
          },
          "message" : {
            "type" : "string",
            "description" : "Uma mensagem legível por humanos que descreve o erro, juntamente com as etapas de correção, quando apropriado"
          }
        }
      },
      "SideOrCorner" : {
        "required" : [ "horizontalSide", "verticalSide" ],
        "type" : "object",
        "properties" : {
          "horizontalSide" : {
            "type" : "string"
          },
          "verticalSide" : {
            "type" : "string"
          }
        }
      },
      "BatchInputBlogPost" : {
        "required" : [ "inputs" ],
        "type" : "object",
        "properties" : {
          "inputs" : {
            "type" : "array",
            "description" : "Os posts do blog para inserir.",
            "items" : {
              "$ref" : "#/components/schemas/BlogPost"
            }
          }
        },
        "description" : "Wrapper for providing an array of blog posts as inputs."
      },
      "BatchResponseBlogAuthor" : {
        "required" : [ "completedAt", "results", "startedAt", "status" ],
        "type" : "object",
        "properties" : {
          "completedAt" : {
            "type" : "string",
            "description" : "A hora em que a operação em lote foi concluída.",
            "format" : "date-time"
          },
          "requestedAt" : {
            "type" : "string",
            "description" : "A hora em que a operação em lote foi solicitada.",
            "format" : "date-time"
          },
          "startedAt" : {
            "type" : "string",
            "description" : "A hora em que a operação em lote foi iniciada.",
            "format" : "date-time"
          },
          "links" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "Os links associados à operação em lote."
          },
          "results" : {
            "type" : "array",
            "description" : "Os resultados da operação em lote.",
            "items" : {
              "$ref" : "#/components/schemas/BlogAuthor"
            }
          },
          "status" : {
            "type" : "string",
            "description" : "O status da operação em lote.",
            "enum" : [ "PENDING", "PROCESSING", "CANCELED", "COMPLETE" ]
          }
        },
        "description" : "Response object for batch operations on blog authors."
      },
      "ForwardPaging" : {
        "type" : "object",
        "properties" : {
          "next" : {
            "$ref" : "#/components/schemas/NextPage"
          }
        },
        "description" : "Model definition for forward paging."
      },
      "BlogPostLanguageCloneRequestVNext" : {
        "required" : [ "id" ],
        "type" : "object",
        "properties" : {
          "language" : {
            "type" : "string",
            "description" : "Idioma desejado para a nova variante."
          },
          "id" : {
            "type" : "string",
            "description" : "ID do post do blog a ser clonado."
          }
        },
        "description" : "Request body object for creating new blog post language variant."
      },
      "BatchResponseTagWithErrors" : {
        "required" : [ "completedAt", "results", "startedAt", "status" ],
        "type" : "object",
        "properties" : {
          "completedAt" : {
            "type" : "string",
            "description" : "A hora em que a operação em lote foi concluída.",
            "format" : "date-time"
          },
          "numErrors" : {
            "type" : "integer",
            "description" : "O número de erros.",
            "format" : "int32"
          },
          "requestedAt" : {
            "type" : "string",
            "description" : "A hora em que a operação em lote foi solicitada.",
            "format" : "date-time"
          },
          "startedAt" : {
            "type" : "string",
            "description" : "A hora em que a operação em lote foi iniciada.",
            "format" : "date-time"
          },
          "links" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "Os links associados à operação em lote."
          },
          "results" : {
            "type" : "array",
            "description" : "Os resultados da operação em lote.",
            "items" : {
              "$ref" : "#/components/schemas/Tag"
            }
          },
          "errors" : {
            "type" : "array",
            "description" : "Os erros na operação em lote.",
            "items" : {
              "$ref" : "#/components/schemas/StandardError"
            }
          },
          "status" : {
            "type" : "string",
            "description" : "O status da operação em lote.",
            "enum" : [ "PENDING", "PROCESSING", "CANCELED", "COMPLETE" ]
          }
        },
        "description" : "Response object for batch operations on blog tags with errors."
      },
      "CollectionResponseWithTotalBlogAuthorForwardPaging" : {
        "required" : [ "results", "total" ],
        "type" : "object",
        "properties" : {
          "total" : {
            "type" : "integer",
            "description" : "Número total de autores de blog.",
            "format" : "int32"
          },
          "paging" : {
            "$ref" : "#/components/schemas/ForwardPaging"
          },
          "results" : {
            "type" : "array",
            "description" : "Coleção de autores de blog.",
            "items" : {
              "$ref" : "#/components/schemas/BlogAuthor"
            }
          }
        },
        "description" : "Response object for collections of blog authors with pagination information."
      },
      "VersionUser" : {
        "required" : [ "email", "fullName", "id" ],
        "type" : "object",
        "properties" : {
          "fullName" : {
            "type" : "string",
            "description" : "O nome e o sobrenome do usuário."
          },
          "id" : {
            "type" : "string",
            "description" : "O ID exclusivo do usuário."
          },
          "email" : {
            "type" : "string",
            "description" : "O endereço de e-mail do usuário."
          }
        },
        "description" : "Model definition for a version user. Contains addition information about the user who created a version."
      },
      "ColorStop" : {
        "required" : [ "color" ],
        "type" : "object",
        "properties" : {
          "color" : {
            "$ref" : "#/components/schemas/RGBAColor"
          }
        }
      },
      "Gradient" : {
        "required" : [ "angle", "colors", "sideOrCorner" ],
        "type" : "object",
        "properties" : {
          "angle" : {
            "$ref" : "#/components/schemas/Angle"
          },
          "sideOrCorner" : {
            "$ref" : "#/components/schemas/SideOrCorner"
          },
          "colors" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ColorStop"
            }
          }
        }
      },
      "LayoutSection" : {
        "required" : [ "cells", "cssClass", "cssId", "cssStyle", "label", "name", "params", "rowMetaData", "rows", "styles", "type", "w", "x" ],
        "type" : "object",
        "properties" : {
          "cssStyle" : {
            "type" : "string"
          },
          "label" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          },
          "params" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object",
              "properties" : { }
            },
            "description" : "nulo"
          },
          "rows" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "additionalProperties" : {
                "$ref" : "#/components/schemas/LayoutSection"
              }
            }
          },
          "rowMetaData" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/RowMetaData"
            }
          },
          "cells" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/LayoutSection"
            }
          },
          "cssClass" : {
            "type" : "string"
          },
          "w" : {
            "type" : "integer",
            "format" : "int32"
          },
          "cssId" : {
            "type" : "string"
          },
          "x" : {
            "type" : "integer",
            "format" : "int32"
          },
          "name" : {
            "type" : "string"
          },
          "styles" : {
            "$ref" : "#/components/schemas/Styles"
          }
        }
      },
      "Paging" : {
        "type" : "object",
        "properties" : {
          "next" : {
            "$ref" : "#/components/schemas/NextPage"
          },
          "prev" : {
            "$ref" : "#/components/schemas/PreviousPage"
          }
        },
        "description" : "Model definition for paging."
      },
      "BatchResponseBlogPostWithErrors" : {
        "required" : [ "completedAt", "results", "startedAt", "status" ],
        "type" : "object",
        "properties" : {
          "completedAt" : {
            "type" : "string",
            "description" : "A hora em que a operação em lote foi concluída.",
            "format" : "date-time"
          },
          "numErrors" : {
            "type" : "integer",
            "description" : "O número de erros.",
            "format" : "int32"
          },
          "requestedAt" : {
            "type" : "string",
            "description" : "A hora em que a operação em lote foi solicitada.",
            "format" : "date-time"
          },
          "startedAt" : {
            "type" : "string",
            "description" : "A hora em que a operação em lote foi iniciada.",
            "format" : "date-time"
          },
          "links" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "Os links associados à operação em lote."
          },
          "results" : {
            "type" : "array",
            "description" : "Os resultados da operação em lote.",
            "items" : {
              "$ref" : "#/components/schemas/BlogPost"
            }
          },
          "errors" : {
            "type" : "array",
            "description" : "Os erros na operação em lote.",
            "items" : {
              "$ref" : "#/components/schemas/StandardError"
            }
          },
          "status" : {
            "type" : "string",
            "description" : "O status da operação em lote.",
            "enum" : [ "PENDING", "PROCESSING", "CANCELED", "COMPLETE" ]
          }
        },
        "description" : "Response object for batch operations on blog posts with errors."
      },
      "Error" : {
        "required" : [ "category", "correlationId", "message" ],
        "type" : "object",
        "properties" : {
          "subCategory" : {
            "type" : "string",
            "description" : "Uma categoria específica que contém mais detalhes específicos sobre o erro"
          },
          "context" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            },
            "description" : "Contexto sobre a condição de erro",
            "example" : {
              "missingScopes" : [ "scope1", "scope2" ],
              "invalidPropertyName" : [ "propertyValue" ]
            }
          },
          "correlationId" : {
            "type" : "string",
            "description" : "Um identificador exclusivo para a solicitação. Inclua este valor em relatórios de erro ou tickets de suporte.",
            "format" : "uuid",
            "example" : "aeb5f871-7f07-4993-9211-075dc63e7cbf"
          },
          "links" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "Um mapa de nomes de links para URIs associados que contêm documentação sobre o erro ou etapas de correção recomendadas",
            "example" : {
              "knowledge-base" : "https://www.hubspot.com/products/service/knowledge-base"
            }
          },
          "message" : {
            "type" : "string",
            "description" : "Uma mensagem legível por humanos que descreve o erro, juntamente com as etapas de correção, quando apropriado",
            "example" : "Invalid input (details will vary based on the error)"
          },
          "category" : {
            "type" : "string",
            "description" : "A categoria de erro",
            "example" : "VALIDATION_ERROR"
          },
          "errors" : {
            "type" : "array",
            "description" : "mais informações sobre o erro",
            "items" : {
              "$ref" : "#/components/schemas/ErrorDetail"
            }
          }
        },
        "example" : {
          "message" : "Invalid input (details will vary based on the error)",
          "correlationId" : "aeb5f871-7f07-4993-9211-075dc63e7cbf",
          "category" : "VALIDATION_ERROR",
          "links" : {
            "knowledge-base" : "https://www.hubspot.com/products/service/knowledge-base"
          }
        }
      },
      "VersionBlogPost" : {
        "required" : [ "id", "object", "updatedAt", "user" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "O ID da versão."
          },
          "user" : {
            "$ref" : "#/components/schemas/VersionUser"
          },
          "object" : {
            "$ref" : "#/components/schemas/BlogPost"
          },
          "updatedAt" : {
            "type" : "string",
            "format" : "date-time"
          }
        },
        "description" : "Model definition of a version of a blog post."
      },
      "BlogPost" : {
        "required" : [ "abStatus", "abTestId", "archivedAt", "archivedInDashboard", "attachedStylesheets", "authorName", "blogAuthorId", "campaign", "categoryId", "contentGroupId", "contentTypeCategory", "created", "createdById", "currentState", "currentlyPublished", "domain", "dynamicPageDataSourceId", "dynamicPageDataSourceType", "dynamicPageHubDbTableId", "enableDomainStylesheets", "enableGoogleAmpOutputOverride", "enableLayoutStylesheets", "featuredImage", "featuredImageAltText", "folderId", "footerHtml", "headHtml", "htmlTitle", "id", "includeDefaultCustomCss", "language", "layoutSections", "linkRelCanonicalUrl", "mabExperimentId", "metaDescription", "name", "pageExpiryDate", "pageExpiryEnabled", "pageExpiryRedirectId", "pageExpiryRedirectUrl", "password", "postBody", "postSummary", "publicAccessRules", "publicAccessRulesEnabled", "publishDate", "publishImmediately", "rssBody", "rssSummary", "slug", "state", "tagIds", "themeSettingsValues", "translatedFromId", "translations", "updated", "updatedById", "url", "useFeaturedImage", "widgetContainers", "widgets" ],
        "type" : "object",
        "properties" : {
          "publishDate" : {
            "type" : "string",
            "description" : "A data (no formato ISO8601) em que o post do blog será publicado.",
            "format" : "date-time"
          },
          "language" : {
            "type" : "string",
            "description" : "O código de idioma ISO 639 explicitamente definido do Post do blog. Se nulo, o Post do blog assumirá o idioma padrão do Blog principal.",
            "enum" : [ "af", "af-na", "af-za", "agq", "agq-cm", "ak", "ak-gh", "am", "am-et", "ar", "ar-001", "ar-ae", "ar-bh", "ar-dj", "ar-dz", "ar-eg", "ar-eh", "ar-er", "ar-il", "ar-iq", "ar-jo", "ar-km", "ar-kw", "ar-lb", "ar-ly", "ar-ma", "ar-mr", "ar-om", "ar-ps", "ar-qa", "ar-sa", "ar-sd", "ar-so", "ar-ss", "ar-sy", "ar-td", "ar-tn", "ar-ye", "as", "as-in", "asa", "asa-tz", "ast", "ast-es", "az", "az-az", "bas", "bas-cm", "be", "be-by", "bem", "bem-zm", "bez", "bez-tz", "bg", "bg-bg", "bm", "bm-ml", "bn", "bn-bd", "bn-in", "bo", "bo-cn", "bo-in", "br", "br-fr", "brx", "brx-in", "bs", "bs-ba", "ca", "ca-ad", "ca-es", "ca-fr", "ca-it", "ccp", "ccp-bd", "ccp-in", "ce", "ce-ru", "ceb", "ceb-ph", "cgg", "cgg-ug", "chr", "chr-us", "ckb", "ckb-iq", "ckb-ir", "cs", "cs-cz", "cu", "cu-ru", "cy", "cy-gb", "da", "da-dk", "da-gl", "dav", "dav-ke", "de", "de-at", "de-be", "de-ch", "de-de", "de-gr", "de-it", "de-li", "de-lu", "dje", "dje-ne", "doi", "doi-in", "dsb", "dsb-de", "dua", "dua-cm", "dyo", "dyo-sn", "dz", "dz-bt", "ebu", "ebu-ke", "ee", "ee-gh", "ee-tg", "el", "el-cy", "el-gr", "en", "en-001", "en-150", "en-ae", "en-ag", "en-ai", "en-as", "en-at", "en-au", "en-bb", "en-be", "en-bi", "en-bm", "en-bs", "en-bw", "en-bz", "en-ca", "en-cc", "en-ch", "en-ck", "en-cm", "en-cn", "en-cx", "en-cy", "en-de", "en-dg", "en-dk", "en-dm", "en-er", "en-fi", "en-fj", "en-fk", "en-fm", "en-gb", "en-gd", "en-gg", "en-gh", "en-gi", "en-gm", "en-gu", "en-gy", "en-hk", "en-ie", "en-il", "en-im", "en-in", "en-io", "en-je", "en-jm", "en-ke", "en-ki", "en-kn", "en-ky", "en-lc", "en-lr", "en-ls", "en-lu", "en-mg", "en-mh", "en-mo", "en-mp", "en-ms", "en-mt", "en-mu", "en-mw", "en-mx", "en-my", "en-na", "en-nf", "en-ng", "en-nl", "en-nr", "en-nu", "en-nz", "en-pg", "en-ph", "en-pk", "en-pn", "en-pr", "en-pw", "en-rw", "en-sb", "en-sc", "en-sd", "en-se", "en-sg", "en-sh", "en-si", "en-sl", "en-ss", "en-sx", "en-sz", "en-tc", "en-tk", "en-to", "en-tt", "en-tv", "en-tz", "en-ug", "en-um", "en-us", "en-vc", "en-vg", "en-vi", "en-vu", "en-ws", "en-za", "en-zm", "en-zw", "eo", "eo-001", "es", "es-419", "es-ar", "es-bo", "es-br", "es-bz", "es-cl", "es-co", "es-cr", "es-cu", "es-do", "es-ea", "es-ec", "es-es", "es-gq", "es-gt", "es-hn", "es-ic", "es-mx", "es-ni", "es-pa", "es-pe", "es-ph", "es-pr", "es-py", "es-sv", "es-us", "es-uy", "es-ve", "et", "et-ee", "eu", "eu-es", "ewo", "ewo-cm", "fa", "fa-af", "fa-ir", "ff", "ff-bf", "ff-cm", "ff-gh", "ff-gm", "ff-gn", "ff-gw", "ff-lr", "ff-mr", "ff-ne", "ff-ng", "ff-sl", "ff-sn", "fi", "fi-fi", "fil", "fil-ph", "fo", "fo-dk", "fo-fo", "fr", "fr-be", "fr-bf", "fr-bi", "fr-bj", "fr-bl", "fr-ca", "fr-cd", "fr-cf", "fr-cg", "fr-ch", "fr-ci", "fr-cm", "fr-dj", "fr-dz", "fr-fr", "fr-ga", "fr-gf", "fr-gn", "fr-gp", "fr-gq", "fr-ht", "fr-km", "fr-lu", "fr-ma", "fr-mc", "fr-mf", "fr-mg", "fr-ml", "fr-mq", "fr-mr", "fr-mu", "fr-nc", "fr-ne", "fr-pf", "fr-pm", "fr-re", "fr-rw", "fr-sc", "fr-sn", "fr-sy", "fr-td", "fr-tg", "fr-tn", "fr-vu", "fr-wf", "fr-yt", "fur", "fur-it", "fy", "fy-nl", "ga", "ga-gb", "ga-ie", "gd", "gd-gb", "gl", "gl-es", "gsw", "gsw-ch", "gsw-fr", "gsw-li", "gu", "gu-in", "guz", "guz-ke", "gv", "gv-im", "ha", "ha-gh", "ha-ne", "ha-ng", "haw", "haw-us", "he", "hi", "hi-in", "hr", "hr-ba", "hr-hr", "hsb", "hsb-de", "hu", "hu-hu", "hy", "hy-am", "ia", "ia-001", "id", "ig", "ig-ng", "ii", "ii-cn", "id-id", "is", "is-is", "it", "it-ch", "it-it", "it-sm", "it-va", "he-il", "ja", "ja-jp", "jgo", "jgo-cm", "yi", "yi-001", "jmc", "jmc-tz", "jv", "jv-id", "ka", "ka-ge", "kab", "kab-dz", "kam", "kam-ke", "kde", "kde-tz", "kea", "kea-cv", "khq", "khq-ml", "ki", "ki-ke", "kk", "kk-kz", "kkj", "kkj-cm", "kl", "kl-gl", "kln", "kln-ke", "km", "km-kh", "kn", "kn-in", "ko", "ko-kp", "ko-kr", "kok", "kok-in", "ks", "ks-in", "ksb", "ksb-tz", "ksf", "ksf-cm", "ksh", "ksh-de", "kw", "kw-gb", "ku", "ku-tr", "ky", "ky-kg", "lag", "lag-tz", "lb", "lb-lu", "lg", "lg-ug", "lkt", "lkt-us", "ln", "ln-ao", "ln-cd", "ln-cf", "ln-cg", "lo", "lo-la", "lrc", "lrc-iq", "lrc-ir", "lt", "lt-lt", "lu", "lu-cd", "luo", "luo-ke", "luy", "luy-ke", "lv", "lv-lv", "mai", "mai-in", "mas", "mas-ke", "mas-tz", "mer", "mer-ke", "mfe", "mfe-mu", "mg", "mg-mg", "mgh", "mgh-mz", "mgo", "mgo-cm", "mi", "mi-nz", "mk", "mk-mk", "ml", "ml-in", "mn", "mn-mn", "mni", "mni-in", "mr", "mr-in", "ms", "ms-bn", "ms-id", "ms-my", "ms-sg", "mt", "mt-mt", "mua", "mua-cm", "my", "my-mm", "mzn", "mzn-ir", "naq", "naq-na", "nb", "nb-no", "nb-sj", "nd", "nd-zw", "nds", "nds-de", "nds-nl", "ne", "ne-in", "ne-np", "nl", "nl-aw", "nl-be", "nl-ch", "nl-bq", "nl-cw", "nl-lu", "nl-nl", "nl-sr", "nl-sx", "nmg", "nmg-cm", "nn", "nn-no", "nnh", "nnh-cm", "no", "no-no", "nus", "nus-ss", "nyn", "nyn-ug", "om", "om-et", "om-ke", "or", "or-in", "os", "os-ge", "os-ru", "pa", "pa-in", "pa-pk", "pcm", "pcm-ng", "pl", "pl-pl", "prg", "prg-001", "ps", "ps-af", "ps-pk", "pt", "pt-ao", "pt-br", "pt-ch", "pt-cv", "pt-gq", "pt-gw", "pt-lu", "pt-mo", "pt-mz", "pt-pt", "pt-st", "pt-tl", "qu", "qu-bo", "qu-ec", "qu-pe", "rm", "rm-ch", "rn", "rn-bi", "ro", "ro-md", "ro-ro", "rof", "rof-tz", "ru", "ru-by", "ru-kg", "ru-kz", "ru-md", "ru-ru", "ru-ua", "rw", "rw-rw", "rwk", "rwk-tz", "sa", "sa-in", "sah", "sah-ru", "saq", "saq-ke", "sat", "sat-in", "sbp", "sbp-tz", "sd", "sd-in", "sd-pk", "se", "se-fi", "se-no", "se-se", "seh", "seh-mz", "ses", "ses-ml", "sg", "sg-cf", "shi", "shi-ma", "si", "si-lk", "sk", "sk-sk", "sl", "sl-si", "smn", "smn-fi", "sn", "sn-zw", "so", "so-dj", "so-et", "so-ke", "so-so", "sq", "sq-al", "sq-mk", "sq-xk", "sr", "sr-ba", "sr-cs", "sr-me", "sr-rs", "sr-xk", "su", "su-id", "sv", "sv-ax", "sv-fi", "sv-se", "sw", "sw-cd", "sw-ke", "sw-tz", "sw-ug", "sy", "ta", "ta-in", "ta-lk", "ta-my", "ta-sg", "te", "te-in", "teo", "teo-ke", "teo-ug", "tg", "tg-tj", "th", "th-th", "ti", "ti-er", "ti-et", "tk", "tk-tm", "tl", "to", "to-to", "tr", "tr-cy", "tr-tr", "tt", "tt-ru", "twq", "twq-ne", "tzm", "tzm-ma", "ug", "ug-cn", "uk", "uk-ua", "ur", "ur-in", "ur-pk", "uz", "uz-af", "uz-uz", "vai", "vai-lr", "vi", "vi-vn", "vo", "vo-001", "vun", "vun-tz", "wae", "wae-ch", "wo", "wo-sn", "xh", "xh-za", "xog", "xog-ug", "yav", "yav-cm", "yo", "yo-bj", "yo-ng", "yue", "yue-cn", "yue-hk", "zgh", "zgh-ma", "zh", "zh-cn", "zh-hk", "zh-mo", "zh-sg", "zh-tw", "zh-hans", "zh-hant", "zu", "zu-za" ]
          },
          "enableLayoutStylesheets" : {
            "type" : "boolean",
            "description" : "Booleano para determinar se os estilos do modelo devem ser aplicados ou não."
          },
          "metaDescription" : {
            "type" : "string",
            "description" : "Uma descrição que vai na tag <meta> da página."
          },
          "attachedStylesheets" : {
            "type" : "array",
            "description" : "Lista de folhas de estilo para adicionar a este post do blog. Essas folhas de estilo são adicionadas apenas a esta página. A ordem de precedência é de baixo para cima, assim como no HTML.",
            "items" : {
              "type" : "object",
              "additionalProperties" : {
                "type" : "object",
                "properties" : { }
              }
            }
          },
          "password" : {
            "type" : "string",
            "description" : "Defina isso para criar uma página protegida por senha. Será necessário inserir a senha para ver a página."
          },
          "htmlTitle" : {
            "type" : "string",
            "description" : "O título html deste Post do blog."
          },
          "publishImmediately" : {
            "type" : "boolean",
            "description" : "Defina como verdadeiro se você deseja publicar imediatamente quando o ponto de extremidade de publicação programada for chamado e ignorar a configuração de publish_date."
          },
          "translations" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/ContentLanguageVariation"
            }
          },
          "id" : {
            "type" : "string",
            "description" : "O ID exclusivo do Post do blog."
          },
          "state" : {
            "maxLength" : 25,
            "type" : "string",
            "description" : "Um ENUM descrevendo o estado atual deste Post do blog."
          },
          "slug" : {
            "type" : "string",
            "description" : "O caminho deste post do blog. Este campo é anexado ao domínio para construir o URL deste post."
          },
          "createdById" : {
            "type" : "string",
            "description" : "O ID do usuário que criou este Post do blog."
          },
          "rssBody" : {
            "type" : "string",
            "description" : "O conteúdo do corpo RSS para este Post do blog."
          },
          "currentlyPublished" : {
            "type" : "boolean"
          },
          "archivedInDashboard" : {
            "type" : "boolean",
            "description" : "Se verdadeiro, o post não aparecerá no seu painel, embora ainda possa estar publicado."
          },
          "created" : {
            "type" : "string",
            "format" : "date-time"
          },
          "contentTypeCategory" : {
            "type" : "string",
            "description" : "Um ENUM descrevendo o tipo deste objeto. Sempre deve ser BLOG_POST.",
            "enum" : [ "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12" ]
          },
          "mabExperimentId" : {
            "type" : "string",
            "description" : ""
          },
          "updatedById" : {
            "type" : "string",
            "description" : "O ID do usuário que atualizou este Post do blog."
          },
          "translatedFromId" : {
            "type" : "string",
            "description" : "O ID do post do blog principal do qual este objeto foi traduzido."
          },
          "folderId" : {
            "type" : "string",
            "description" : ""
          },
          "widgetContainers" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object",
              "properties" : { }
            },
            "description" : "Uma estrutura de dados contendo dados de todos os módulos dentro dos contêineres para este post. Somente será preenchido se a página tiver contêineres de widgets."
          },
          "pageExpiryRedirectId" : {
            "type" : "integer",
            "description" : "",
            "format" : "int64"
          },
          "dynamicPageDataSourceType" : {
            "type" : "integer",
            "format" : "int32"
          },
          "featuredImage" : {
            "type" : "string",
            "description" : "A featuredImage deste Post do blog."
          },
          "authorName" : {
            "type" : "string",
            "description" : "O nome do usuário que atualizou este Post do blog."
          },
          "domain" : {
            "type" : "string",
            "description" : "O domínio para o qual este Post do blog será direcionado. Se nulo, o Post do blog será direcionado por padrão para o domínio do Blog principal."
          },
          "name" : {
            "type" : "string",
            "description" : "O nome interno do Post do blog."
          },
          "dynamicPageHubDbTableId" : {
            "type" : "string",
            "description" : "O ID da tabela do HubDB que este Post do blog referencia, se aplicável"
          },
          "campaign" : {
            "type" : "string",
            "description" : "O GUID da campanha de marketing da qual este Post do blog faz parte."
          },
          "dynamicPageDataSourceId" : {
            "type" : "string"
          },
          "enableDomainStylesheets" : {
            "type" : "boolean",
            "description" : "Booleano para determinar se os estilos do modelo devem ser aplicados ou não."
          },
          "includeDefaultCustomCss" : {
            "type" : "boolean",
            "description" : "Booleano para determinar se os arquivos CSS principais devem ser aplicados ou não."
          },
          "layoutSections" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/LayoutSection"
            },
            "description" : ""
          },
          "updated" : {
            "type" : "string",
            "format" : "date-time"
          },
          "footerHtml" : {
            "type" : "string",
            "description" : "O código HTML personalizado para códigos incorporados, javascript etc. que deve ser colocado antes da tag </body> na página."
          },
          "tagIds" : {
            "type" : "array",
            "description" : "Lista de IDs para as tags associadas a este Post do blog.",
            "items" : {
              "type" : "integer",
              "format" : "int64"
            }
          },
          "widgets" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object",
              "properties" : { }
            },
            "description" : "Uma estrutura de dados contendo dados de todos os módulos desta página."
          },
          "postSummary" : {
            "type" : "string",
            "description" : "O resumo do post do blog que aparecerá na página principal de listagem."
          },
          "headHtml" : {
            "type" : "string",
            "description" : "O código HTML personalizado para códigos incorporados, javascript etc. que deve ser colocado na tag <head> da página."
          },
          "pageExpiryRedirectUrl" : {
            "type" : "string",
            "description" : ""
          },
          "abStatus" : {
            "type" : "string",
            "description" : "",
            "enum" : [ "master", "variant", "loser_variant", "mab_master", "mab_variant", "automated_master", "automated_variant", "automated_loser_variant" ]
          },
          "useFeaturedImage" : {
            "type" : "boolean",
            "description" : "Booleano para determinar se este post deve usar uma featuredImage."
          },
          "abTestId" : {
            "type" : "string",
            "description" : ""
          },
          "featuredImageAltText" : {
            "type" : "string",
            "description" : "O texto alternativo da featuredImage."
          },
          "blogAuthorId" : {
            "type" : "string",
            "description" : "O ID do Autor do blog associado a este Post do blog."
          },
          "contentGroupId" : {
            "type" : "string",
            "description" : "O ID do Blog principal ao qual este Post do blog está associado."
          },
          "rssSummary" : {
            "type" : "string",
            "description" : "O conteúdo do resumo RSS para este Post do blog."
          },
          "pageExpiryEnabled" : {
            "type" : "boolean",
            "description" : ""
          },
          "url" : {
            "type" : "string",
            "description" : "Um campo gerado representando o URL deste post do blog."
          },
          "publicAccessRules" : {
            "type" : "array",
            "description" : "Regras para exigir registro de membro para acessar conteúdo privado.",
            "items" : {
              "$ref" : "#/components/schemas/PublicAccessRule"
            }
          },
          "enableGoogleAmpOutputOverride" : {
            "type" : "boolean",
            "description" : "Booleano para permitir a substituição das configurações do AMP para o blog."
          },
          "archivedAt" : {
            "type" : "integer",
            "description" : "A data e hora (no formato ISO8601) em que este Post do blog foi excluído.",
            "format" : "int64"
          },
          "postBody" : {
            "type" : "string",
            "description" : "O HTML do corpo principal do post."
          },
          "themeSettingsValues" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object",
              "properties" : { }
            },
            "description" : ""
          },
          "pageExpiryDate" : {
            "type" : "integer",
            "description" : "",
            "format" : "int64"
          },
          "publicAccessRulesEnabled" : {
            "type" : "boolean",
            "description" : "Booleano para determinar se deve ou não respeitar publicAccessRules."
          },
          "currentState" : {
            "type" : "string",
            "description" : "Um ENUM gerado descrevendo o estado atual deste Post do blog. Sempre deve corresponder ao estado.",
            "enum" : [ "AUTOMATED", "AUTOMATED_DRAFT", "AUTOMATED_SENDING", "AUTOMATED_FOR_FORM", "AUTOMATED_FOR_FORM_BUFFER", "AUTOMATED_FOR_FORM_DRAFT", "AUTOMATED_FOR_FORM_LEGACY", "BLOG_EMAIL_DRAFT", "BLOG_EMAIL_PUBLISHED", "DRAFT", "DRAFT_AB", "DRAFT_AB_VARIANT", "ERROR", "LOSER_AB_VARIANT", "PAGE_STUB", "PRE_PROCESSING", "PROCESSING", "PUBLISHED", "PUBLISHED_AB", "PUBLISHED_AB_VARIANT", "PUBLISHED_OR_SCHEDULED", "RSS_TO_EMAIL_DRAFT", "RSS_TO_EMAIL_PUBLISHED", "SCHEDULED", "SCHEDULED_AB", "SCHEDULED_OR_PUBLISHED", "AUTOMATED_AB", "AUTOMATED_AB_VARIANT", "AUTOMATED_DRAFT_AB", "AUTOMATED_DRAFT_ABVARIANT", "AUTOMATED_LOSER_ABVARIANT" ]
          },
          "categoryId" : {
            "type" : "integer",
            "description" : "O ID de tipo de objeto. Sempre deve .",
            "format" : "int32"
          },
          "linkRelCanonicalUrl" : {
            "type" : "string",
            "description" : "Substituição opcional para definir o URL a ser usado na tag de link rel=canonical na página."
          }
        },
        "description" : "Model definition for a Blog Post."
      },
      "BatchResponseBlogPost" : {
        "required" : [ "completedAt", "results", "startedAt", "status" ],
        "type" : "object",
        "properties" : {
          "completedAt" : {
            "type" : "string",
            "description" : "A hora em que a operação em lote foi concluída.",
            "format" : "date-time"
          },
          "requestedAt" : {
            "type" : "string",
            "description" : "A hora em que a operação em lote foi solicitada.",
            "format" : "date-time"
          },
          "startedAt" : {
            "type" : "string",
            "description" : "A hora em que a operação em lote foi iniciada.",
            "format" : "date-time"
          },
          "links" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "Os links associados à operação em lote."
          },
          "results" : {
            "type" : "array",
            "description" : "Os resultados da operação em lote.",
            "items" : {
              "$ref" : "#/components/schemas/BlogPost"
            }
          },
          "status" : {
            "type" : "string",
            "description" : "O status da operação em lote.",
            "enum" : [ "PENDING", "PROCESSING", "CANCELED", "COMPLETE" ]
          }
        },
        "description" : "Response object for batch operations on blog posts."
      },
      "CollectionResponseWithTotalBlogPostForwardPaging" : {
        "required" : [ "results", "total" ],
        "type" : "object",
        "properties" : {
          "total" : {
            "type" : "integer",
            "description" : "Número total de posts de blog.",
            "format" : "int32"
          },
          "paging" : {
            "$ref" : "#/components/schemas/ForwardPaging"
          },
          "results" : {
            "type" : "array",
            "description" : "Coleção de posts de blog.",
            "items" : {
              "$ref" : "#/components/schemas/BlogPost"
            }
          }
        },
        "description" : "Response object for collections of blog posts with pagination information."
      },
      "PublicAccessRule" : {
        "type" : "object",
        "properties" : { }
      },
      "BackgroundImage" : {
        "required" : [ "backgroundPosition", "backgroundSize", "imageUrl" ],
        "type" : "object",
        "properties" : {
          "imageUrl" : {
            "type" : "string"
          },
          "backgroundSize" : {
            "type" : "string"
          },
          "backgroundPosition" : {
            "type" : "string"
          }
        }
      },
      "Angle" : {
        "required" : [ "units", "value" ],
        "type" : "object",
        "properties" : {
          "units" : {
            "type" : "string"
          },
          "value" : {
            "type" : "number"
          }
        }
      },
      "PreviousPage" : {
        "required" : [ "before" ],
        "type" : "object",
        "properties" : {
          "before" : {
            "type" : "string",
            "description" : ""
          },
          "link" : {
            "type" : "string",
            "description" : ""
          }
        },
        "description" : "Model definition for a previous page"
      },
      "ContentScheduleRequestVNext" : {
        "required" : [ "id", "publishDate" ],
        "type" : "object",
        "properties" : {
          "publishDate" : {
            "type" : "string",
            "description" : "A data em que o objeto deve mudar de agendado para publicado.",
            "format" : "date-time"
          },
          "id" : {
            "type" : "string",
            "description" : "O ID do objeto a ser agendado."
          }
        },
        "description" : "Request body object for scheduling the publish of content"
      },
      "TagCloneRequestVNext" : {
        "required" : [ "id", "name" ],
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "Nome da nova tag de blog clonada."
          },
          "language" : {
            "type" : "string",
            "description" : "Idioma desejado para a nova variante."
          },
          "id" : {
            "type" : "string",
            "description" : "ID do objeto a ser clonado."
          },
          "primaryLanguage" : {
            "type" : "string",
            "description" : "Idioma da tag principal de blog a ser clonada."
          }
        },
        "description" : "Request body object for cloning blog tags."
      },
      "Tag" : {
        "required" : [ "created", "deletedAt", "id", "language", "name", "translatedFromId", "updated" ],
        "type" : "object",
        "properties" : {
          "deletedAt" : {
            "type" : "string",
            "description" : "A data e hora (no formato ISO8601) em que esta Tag de blog foi excluída.",
            "format" : "date-time"
          },
          "created" : {
            "type" : "string",
            "format" : "date-time"
          },
          "name" : {
            "type" : "string",
            "description" : "O nome da tag."
          },
          "language" : {
            "type" : "string",
            "description" : "O código de idioma ISO 639 explicitamente definido para a tag.",
            "enum" : [ "af", "af-na", "af-za", "agq", "agq-cm", "ak", "ak-gh", "am", "am-et", "ar", "ar-001", "ar-ae", "ar-bh", "ar-dj", "ar-dz", "ar-eg", "ar-eh", "ar-er", "ar-il", "ar-iq", "ar-jo", "ar-km", "ar-kw", "ar-lb", "ar-ly", "ar-ma", "ar-mr", "ar-om", "ar-ps", "ar-qa", "ar-sa", "ar-sd", "ar-so", "ar-ss", "ar-sy", "ar-td", "ar-tn", "ar-ye", "as", "as-in", "asa", "asa-tz", "ast", "ast-es", "az", "az-az", "bas", "bas-cm", "be", "be-by", "bem", "bem-zm", "bez", "bez-tz", "bg", "bg-bg", "bm", "bm-ml", "bn", "bn-bd", "bn-in", "bo", "bo-cn", "bo-in", "br", "br-fr", "brx", "brx-in", "bs", "bs-ba", "ca", "ca-ad", "ca-es", "ca-fr", "ca-it", "ccp", "ccp-bd", "ccp-in", "ce", "ce-ru", "ceb", "ceb-ph", "cgg", "cgg-ug", "chr", "chr-us", "ckb", "ckb-iq", "ckb-ir", "cs", "cs-cz", "cu", "cu-ru", "cy", "cy-gb", "da", "da-dk", "da-gl", "dav", "dav-ke", "de", "de-at", "de-be", "de-ch", "de-de", "de-gr", "de-it", "de-li", "de-lu", "dje", "dje-ne", "doi", "doi-in", "dsb", "dsb-de", "dua", "dua-cm", "dyo", "dyo-sn", "dz", "dz-bt", "ebu", "ebu-ke", "ee", "ee-gh", "ee-tg", "el", "el-cy", "el-gr", "en", "en-001", "en-150", "en-ae", "en-ag", "en-ai", "en-as", "en-at", "en-au", "en-bb", "en-be", "en-bi", "en-bm", "en-bs", "en-bw", "en-bz", "en-ca", "en-cc", "en-ch", "en-ck", "en-cm", "en-cn", "en-cx", "en-cy", "en-de", "en-dg", "en-dk", "en-dm", "en-er", "en-fi", "en-fj", "en-fk", "en-fm", "en-gb", "en-gd", "en-gg", "en-gh", "en-gi", "en-gm", "en-gu", "en-gy", "en-hk", "en-ie", "en-il", "en-im", "en-in", "en-io", "en-je", "en-jm", "en-ke", "en-ki", "en-kn", "en-ky", "en-lc", "en-lr", "en-ls", "en-lu", "en-mg", "en-mh", "en-mo", "en-mp", "en-ms", "en-mt", "en-mu", "en-mw", "en-mx", "en-my", "en-na", "en-nf", "en-ng", "en-nl", "en-nr", "en-nu", "en-nz", "en-pg", "en-ph", "en-pk", "en-pn", "en-pr", "en-pw", "en-rw", "en-sb", "en-sc", "en-sd", "en-se", "en-sg", "en-sh", "en-si", "en-sl", "en-ss", "en-sx", "en-sz", "en-tc", "en-tk", "en-to", "en-tt", "en-tv", "en-tz", "en-ug", "en-um", "en-us", "en-vc", "en-vg", "en-vi", "en-vu", "en-ws", "en-za", "en-zm", "en-zw", "eo", "eo-001", "es", "es-419", "es-ar", "es-bo", "es-br", "es-bz", "es-cl", "es-co", "es-cr", "es-cu", "es-do", "es-ea", "es-ec", "es-es", "es-gq", "es-gt", "es-hn", "es-ic", "es-mx", "es-ni", "es-pa", "es-pe", "es-ph", "es-pr", "es-py", "es-sv", "es-us", "es-uy", "es-ve", "et", "et-ee", "eu", "eu-es", "ewo", "ewo-cm", "fa", "fa-af", "fa-ir", "ff", "ff-bf", "ff-cm", "ff-gh", "ff-gm", "ff-gn", "ff-gw", "ff-lr", "ff-mr", "ff-ne", "ff-ng", "ff-sl", "ff-sn", "fi", "fi-fi", "fil", "fil-ph", "fo", "fo-dk", "fo-fo", "fr", "fr-be", "fr-bf", "fr-bi", "fr-bj", "fr-bl", "fr-ca", "fr-cd", "fr-cf", "fr-cg", "fr-ch", "fr-ci", "fr-cm", "fr-dj", "fr-dz", "fr-fr", "fr-ga", "fr-gf", "fr-gn", "fr-gp", "fr-gq", "fr-ht", "fr-km", "fr-lu", "fr-ma", "fr-mc", "fr-mf", "fr-mg", "fr-ml", "fr-mq", "fr-mr", "fr-mu", "fr-nc", "fr-ne", "fr-pf", "fr-pm", "fr-re", "fr-rw", "fr-sc", "fr-sn", "fr-sy", "fr-td", "fr-tg", "fr-tn", "fr-vu", "fr-wf", "fr-yt", "fur", "fur-it", "fy", "fy-nl", "ga", "ga-gb", "ga-ie", "gd", "gd-gb", "gl", "gl-es", "gsw", "gsw-ch", "gsw-fr", "gsw-li", "gu", "gu-in", "guz", "guz-ke", "gv", "gv-im", "ha", "ha-gh", "ha-ne", "ha-ng", "haw", "haw-us", "he", "hi", "hi-in", "hr", "hr-ba", "hr-hr", "hsb", "hsb-de", "hu", "hu-hu", "hy", "hy-am", "ia", "ia-001", "id", "ig", "ig-ng", "ii", "ii-cn", "id-id", "is", "is-is", "it", "it-ch", "it-it", "it-sm", "it-va", "he-il", "ja", "ja-jp", "jgo", "jgo-cm", "yi", "yi-001", "jmc", "jmc-tz", "jv", "jv-id", "ka", "ka-ge", "kab", "kab-dz", "kam", "kam-ke", "kde", "kde-tz", "kea", "kea-cv", "khq", "khq-ml", "ki", "ki-ke", "kk", "kk-kz", "kkj", "kkj-cm", "kl", "kl-gl", "kln", "kln-ke", "km", "km-kh", "kn", "kn-in", "ko", "ko-kp", "ko-kr", "kok", "kok-in", "ks", "ks-in", "ksb", "ksb-tz", "ksf", "ksf-cm", "ksh", "ksh-de", "kw", "kw-gb", "ku", "ku-tr", "ky", "ky-kg", "lag", "lag-tz", "lb", "lb-lu", "lg", "lg-ug", "lkt", "lkt-us", "ln", "ln-ao", "ln-cd", "ln-cf", "ln-cg", "lo", "lo-la", "lrc", "lrc-iq", "lrc-ir", "lt", "lt-lt", "lu", "lu-cd", "luo", "luo-ke", "luy", "luy-ke", "lv", "lv-lv", "mai", "mai-in", "mas", "mas-ke", "mas-tz", "mer", "mer-ke", "mfe", "mfe-mu", "mg", "mg-mg", "mgh", "mgh-mz", "mgo", "mgo-cm", "mi", "mi-nz", "mk", "mk-mk", "ml", "ml-in", "mn", "mn-mn", "mni", "mni-in", "mr", "mr-in", "ms", "ms-bn", "ms-id", "ms-my", "ms-sg", "mt", "mt-mt", "mua", "mua-cm", "my", "my-mm", "mzn", "mzn-ir", "naq", "naq-na", "nb", "nb-no", "nb-sj", "nd", "nd-zw", "nds", "nds-de", "nds-nl", "ne", "ne-in", "ne-np", "nl", "nl-aw", "nl-be", "nl-ch", "nl-bq", "nl-cw", "nl-lu", "nl-nl", "nl-sr", "nl-sx", "nmg", "nmg-cm", "nn", "nn-no", "nnh", "nnh-cm", "no", "no-no", "nus", "nus-ss", "nyn", "nyn-ug", "om", "om-et", "om-ke", "or", "or-in", "os", "os-ge", "os-ru", "pa", "pa-in", "pa-pk", "pcm", "pcm-ng", "pl", "pl-pl", "prg", "prg-001", "ps", "ps-af", "ps-pk", "pt", "pt-ao", "pt-br", "pt-ch", "pt-cv", "pt-gq", "pt-gw", "pt-lu", "pt-mo", "pt-mz", "pt-pt", "pt-st", "pt-tl", "qu", "qu-bo", "qu-ec", "qu-pe", "rm", "rm-ch", "rn", "rn-bi", "ro", "ro-md", "ro-ro", "rof", "rof-tz", "ru", "ru-by", "ru-kg", "ru-kz", "ru-md", "ru-ru", "ru-ua", "rw", "rw-rw", "rwk", "rwk-tz", "sa", "sa-in", "sah", "sah-ru", "saq", "saq-ke", "sat", "sat-in", "sbp", "sbp-tz", "sd", "sd-in", "sd-pk", "se", "se-fi", "se-no", "se-se", "seh", "seh-mz", "ses", "ses-ml", "sg", "sg-cf", "shi", "shi-ma", "si", "si-lk", "sk", "sk-sk", "sl", "sl-si", "smn", "smn-fi", "sn", "sn-zw", "so", "so-dj", "so-et", "so-ke", "so-so", "sq", "sq-al", "sq-mk", "sq-xk", "sr", "sr-ba", "sr-cs", "sr-me", "sr-rs", "sr-xk", "su", "su-id", "sv", "sv-ax", "sv-fi", "sv-se", "sw", "sw-cd", "sw-ke", "sw-tz", "sw-ug", "sy", "ta", "ta-in", "ta-lk", "ta-my", "ta-sg", "te", "te-in", "teo", "teo-ke", "teo-ug", "tg", "tg-tj", "th", "th-th", "ti", "ti-er", "ti-et", "tk", "tk-tm", "tl", "to", "to-to", "tr", "tr-cy", "tr-tr", "tt", "tt-ru", "twq", "twq-ne", "tzm", "tzm-ma", "ug", "ug-cn", "uk", "uk-ua", "ur", "ur-in", "ur-pk", "uz", "uz-af", "uz-uz", "vai", "vai-lr", "vi", "vi-vn", "vo", "vo-001", "vun", "vun-tz", "wae", "wae-ch", "wo", "wo-sn", "xh", "xh-za", "xog", "xog-ug", "yav", "yav-cm", "yo", "yo-bj", "yo-ng", "yue", "yue-cn", "yue-hk", "zgh", "zgh-ma", "zh", "zh-cn", "zh-hk", "zh-mo", "zh-sg", "zh-tw", "zh-hans", "zh-hant", "zu", "zu-za" ]
          },
          "id" : {
            "type" : "string",
            "description" : "O ID exclusivo da Tag de blog."
          },
          "translatedFromId" : {
            "type" : "integer",
            "description" : "O ID da tag principal da qual este objeto foi traduzido.",
            "format" : "int64"
          },
          "updated" : {
            "type" : "string",
            "format" : "date-time"
          }
        },
        "description" : "Model definition for a Tag."
      },
      "BatchResponseBlogAuthorWithErrors" : {
        "required" : [ "completedAt", "results", "startedAt", "status" ],
        "type" : "object",
        "properties" : {
          "completedAt" : {
            "type" : "string",
            "description" : "A hora em que a operação em lote foi concluída.",
            "format" : "date-time"
          },
          "numErrors" : {
            "type" : "integer",
            "description" : "O número de erros.",
            "format" : "int32"
          },
          "requestedAt" : {
            "type" : "string",
            "description" : "A hora em que a operação em lote foi solicitada.",
            "format" : "date-time"
          },
          "startedAt" : {
            "type" : "string",
            "description" : "A hora em que a operação em lote foi iniciada.",
            "format" : "date-time"
          },
          "links" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "Os links associados à operação em lote."
          },
          "results" : {
            "type" : "array",
            "description" : "Os resultados da operação em lote.",
            "items" : {
              "$ref" : "#/components/schemas/BlogAuthor"
            }
          },
          "errors" : {
            "type" : "array",
            "description" : "Os erros na operação em lote.",
            "items" : {
              "$ref" : "#/components/schemas/StandardError"
            }
          },
          "status" : {
            "type" : "string",
            "description" : "O status da operação em lote.",
            "enum" : [ "PENDING", "PROCESSING", "CANCELED", "COMPLETE" ]
          }
        },
        "description" : "Response object for batch operations on blog authors with errors."
      },
      "ContentCloneRequestVNext" : {
        "required" : [ "id" ],
        "type" : "object",
        "properties" : {
          "cloneName" : {
            "type" : "string",
            "description" : "Nome do objeto clonado."
          },
          "id" : {
            "type" : "string",
            "description" : "ID do objeto a ser clonado."
          }
        },
        "description" : "Request body object for cloning content."
      },
      "NextPage" : {
        "required" : [ "after" ],
        "type" : "object",
        "properties" : {
          "link" : {
            "type" : "string",
            "description" : ""
          },
          "after" : {
            "type" : "string",
            "description" : ""
          }
        },
        "description" : "Model definition for a next page."
      },
      "BatchInputTag" : {
        "required" : [ "inputs" ],
        "type" : "object",
        "properties" : {
          "inputs" : {
            "type" : "array",
            "description" : "As tags do blog para inserir.",
            "items" : {
              "$ref" : "#/components/schemas/Tag"
            }
          }
        },
        "description" : "Wrapper for providing an array of blog tags as inputs."
      },
      "Styles" : {
        "required" : [ "backgroundColor", "backgroundGradient", "backgroundImage", "flexboxPositioning", "forceFullWidthSection", "maxWidthSectionCentering", "verticalAlignment" ],
        "type" : "object",
        "properties" : {
          "backgroundColor" : {
            "$ref" : "#/components/schemas/RGBAColor"
          },
          "flexboxPositioning" : {
            "type" : "string"
          },
          "backgroundImage" : {
            "$ref" : "#/components/schemas/BackgroundImage"
          },
          "forceFullWidthSection" : {
            "type" : "boolean"
          },
          "verticalAlignment" : {
            "type" : "string"
          },
          "maxWidthSectionCentering" : {
            "type" : "integer",
            "format" : "int32"
          },
          "backgroundGradient" : {
            "$ref" : "#/components/schemas/Gradient"
          }
        }
      }
    },
    "responses" : {
      "Error" : {
        "description" : "An error occurred.",
        "content" : {
          "*/*" : {
            "schema" : {
              "$ref" : "#/components/schemas/Error"
            }
          }
        }
      }
    },
    "securitySchemes" : {
      "oauth2_legacy" : {
        "type" : "oauth2",
        "flows" : {
          "authorizationCode" : {
            "authorizationUrl" : "https://app.hubspot.com/oauth/authorize",
            "tokenUrl" : "https://api.hubapi.com/oauth/v1/token",
            "scopes" : {
              "content" : "Read from and write to my Content"
            }
          }
        }
      },
      "private_apps_legacy" : {
        "type" : "apiKey",
        "name" : "private-app-legacy",
        "in" : "header"
      }
    }
  },
  "x-hubspot-available-client-libraries" : [ "PHP", "Node", "Ruby", "Python" ],
  "x-hubspot-product-tier-requirements" : {
    "marketing" : "PROFESSIONAL",
    "cms" : "STARTER"
  },
  "x-hubspot-documentation-banner" : "NONE"
}