{
  "openapi" : "3.0.1",
  "info" : {
    "title" : "Landing Page and Site Page endpoints",
    "description" : "Use these endpoints for interacting with Landing Pages and Site Pages",
    "version" : "v3"
  },
  "servers" : [ {
    "url" : "https://api.hubapi.com"
  } ],
  "tags" : [ {
    "name" : "Site Pages"
  }, {
    "name" : "Landing Pages"
  } ],
  "paths" : {
    "/cms/v3/pages/site-pages/{objectId}/revisions/{revisionId}" : {
      "get" : {
        "tags" : [ "Site Pages" ],
        "summary" : "Retrieves a previous version of a Site Page",
        "description" : "Retrieves a previous version of a Site Page",
        "operationId" : "get-/cms/v3/pages/site-pages/{objectId}/revisions/{revisionId}",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "The Site Page id.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "revisionId",
          "in" : "path",
          "description" : "The Site Page version id.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VersionPage"
                }
              }
            }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "private_apps_legacy" : [ "content" ]
        }, {
          "oauth2_legacy" : [ "content" ]
        } ]
      }
    },
    "/cms/v3/pages/landing-pages/{objectId}/revisions" : {
      "get" : {
        "tags" : [ "Landing Pages" ],
        "summary" : "Retrieves all the previous versions of a Landing Page",
        "description" : "Retrieves all the previous versions of a Landing Page.",
        "operationId" : "get-/cms/v3/pages/landing-pages/{objectId}/revisions",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "The Landing Page id.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "after",
          "in" : "query",
          "description" : "The cursor token value to get the next set of results. You can get this from the `paging.next.after` JSON property of a paged response containing more results.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "before",
          "in" : "query",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "The maximum number of results to return. Default is 100.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CollectionResponseWithTotalVersionPage"
                }
              }
            }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "private_apps_legacy" : [ "content" ]
        }, {
          "oauth2_legacy" : [ "content" ]
        } ]
      }
    },
    "/cms/v3/pages/site-pages/batch/update" : {
      "post" : {
        "tags" : [ "Site Pages" ],
        "summary" : "Update a batch of Site Pages",
        "description" : "Update the Site Page objects identified in the request body.",
        "operationId" : "post-/cms/v3/pages/site-pages/batch/update",
        "parameters" : [ {
          "name" : "archived",
          "in" : "query",
          "description" : "Specifies whether to update deleted Site Pages. Defaults to `false`.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "requestBody" : {
          "description" : "The JSON representation of the updated Site Pages.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BatchInputJsonNode"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BatchResponsePage"
                }
              }
            }
          },
          "207" : {
            "description" : "multiple statuses",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BatchResponsePageWithErrors"
                }
              }
            }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "private_apps_legacy" : [ "content" ]
        }, {
          "oauth2_legacy" : [ "content" ]
        } ]
      }
    },
    "/cms/v3/pages/landing-pages/folders/{objectId}/revisions" : {
      "get" : {
        "tags" : [ "Landing Pages" ],
        "summary" : "Retrieves all the previous versions of a Folder",
        "description" : "Retrieves all the previous versions of a Folder.",
        "operationId" : "get-/cms/v3/pages/landing-pages/folders/{objectId}/revisions",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "The Folder id.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "after",
          "in" : "query",
          "description" : "The cursor token value to get the next set of results. You can get this from the `paging.next.after` JSON property of a paged response containing more results.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "before",
          "in" : "query",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "The maximum number of results to return. Default is 100.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CollectionResponseWithTotalVersionContentFolder"
                }
              }
            }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "private_apps_legacy" : [ "content" ]
        }, {
          "oauth2_legacy" : [ "content" ]
        } ]
      }
    },
    "/cms/v3/pages/site-pages/{objectId}/revisions/{revisionId}/restore" : {
      "post" : {
        "tags" : [ "Site Pages" ],
        "summary" : "Restore a previous version of a Site Page",
        "description" : "Takes a specified version of a Site Page and restores it.",
        "operationId" : "post-/cms/v3/pages/site-pages/{objectId}/revisions/{revisionId}/restore",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "The Site Page id.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "revisionId",
          "in" : "path",
          "description" : "The Site Page version id to restore.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Page"
                }
              }
            }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "private_apps_legacy" : [ "content" ]
        }, {
          "oauth2_legacy" : [ "content" ]
        } ]
      }
    },
    "/cms/v3/pages/site-pages/schedule" : {
      "post" : {
        "tags" : [ "Site Pages" ],
        "summary" : "Schedule a Site Page to be Published",
        "description" : "Schedule a Site Page to be Published",
        "operationId" : "post-/cms/v3/pages/site-pages/schedule",
        "parameters" : [ ],
        "requestBody" : {
          "description" : "The JSON representation of the ContentScheduleRequestVNext object.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ContentScheduleRequestVNext"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "204" : {
            "description" : "No content",
            "content" : { }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "private_apps_legacy" : [ "content" ]
        }, {
          "oauth2_legacy" : [ "content" ]
        } ]
      }
    },
    "/cms/v3/pages/site-pages/multi-language/attach-to-lang-group" : {
      "post" : {
        "tags" : [ "Site Pages" ],
        "summary" : "Attach a site page to a multi-language group",
        "description" : "Attach a site page to a multi-language group.",
        "operationId" : "post-/cms/v3/pages/site-pages/multi-language/attach-to-lang-group",
        "parameters" : [ ],
        "requestBody" : {
          "description" : "The JSON representation of the AttachToLangPrimaryRequest object.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AttachToLangPrimaryRequestVNext"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "$ref" : "#/components/responses/Error"
          },
          "200" : {
            "description" : "successful operation",
            "content" : { }
          }
        },
        "security" : [ {
          "private_apps_legacy" : [ "content" ]
        }, {
          "oauth2_legacy" : [ "content" ]
        } ]
      }
    },
    "/cms/v3/pages/landing-pages/folders" : {
      "get" : {
        "tags" : [ "Landing Pages" ],
        "summary" : "Get all Landing Page Folders",
        "description" : "Get the list of Landing Page Folders. Supports paging and filtering. This method would be useful for an integration that examined these models and used an external service to suggest edits.\n",
        "operationId" : "get-/cms/v3/pages/landing-pages/folders",
        "parameters" : [ {
          "name" : "createdAt",
          "in" : "query",
          "description" : "Only return Folders created at exactly the specified time.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "createdAfter",
          "in" : "query",
          "description" : "Only return Folders created after the specified time.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "createdBefore",
          "in" : "query",
          "description" : "Only return Folders created before the specified time.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "updatedAt",
          "in" : "query",
          "description" : "Only return Folders last updated at exactly the specified time.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "updatedAfter",
          "in" : "query",
          "description" : "Only return Folders last updated after the specified time.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "updatedBefore",
          "in" : "query",
          "description" : "Only return Folders last updated before the specified time.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Specifies which fields to use for sorting results. Valid fields are `name`, `createdAt`, `updatedAt`, `createdBy`, `updatedBy`. `createdAt` will be used by default.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "after",
          "in" : "query",
          "description" : "The cursor token value to get the next set of results. You can get this from the `paging.next.after` JSON property of a paged response containing more results.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "The maximum number of results to return. Default is 100.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "archived",
          "in" : "query",
          "description" : "Specifies whether to return deleted Folders. Defaults to `false`.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "property",
          "in" : "query",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CollectionResponseWithTotalContentFolderForwardPaging"
                }
              }
            }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "private_apps_legacy" : [ "content" ]
        }, {
          "oauth2_legacy" : [ "content" ]
        } ]
      },
      "post" : {
        "tags" : [ "Landing Pages" ],
        "summary" : "Create a new Folder",
        "description" : "Create a new Folder",
        "operationId" : "post-/cms/v3/pages/landing-pages/folders",
        "parameters" : [ ],
        "requestBody" : {
          "description" : "The JSON representation of a new Folder.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ContentFolder"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ContentFolder"
                }
              }
            }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "private_apps_legacy" : [ "content" ]
        }, {
          "oauth2_legacy" : [ "content" ]
        } ]
      }
    },
    "/cms/v3/pages/site-pages/multi-language/detach-from-lang-group" : {
      "post" : {
        "tags" : [ "Site Pages" ],
        "summary" : "Detach a site page from a multi-language group",
        "description" : "Detach a site page from a multi-language group.",
        "operationId" : "post-/cms/v3/pages/site-pages/multi-language/detach-from-lang-group",
        "parameters" : [ ],
        "requestBody" : {
          "description" : "The JSON representation of the DetachFromLangGroupRequest object.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DetachFromLangGroupRequestVNext"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "$ref" : "#/components/responses/Error"
          },
          "200" : {
            "description" : "successful operation",
            "content" : { }
          }
        },
        "security" : [ {
          "private_apps_legacy" : [ "content" ]
        }, {
          "oauth2_legacy" : [ "content" ]
        } ]
      }
    },
    "/cms/v3/pages/landing-pages/folders/batch/create" : {
      "post" : {
        "tags" : [ "Landing Pages" ],
        "summary" : "Create a batch of Folders",
        "description" : "Create the Folder objects detailed in the request body.",
        "operationId" : "post-/cms/v3/pages/landing-pages/folders/batch/create",
        "parameters" : [ ],
        "requestBody" : {
          "description" : "The JSON array of new Folders to create.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BatchInputContentFolder"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BatchResponseContentFolder"
                }
              }
            }
          },
          "207" : {
            "description" : "multiple statuses",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BatchResponseContentFolderWithErrors"
                }
              }
            }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "private_apps_legacy" : [ "content" ]
        }, {
          "oauth2_legacy" : [ "content" ]
        } ]
      }
    },
    "/cms/v3/pages/site-pages/{objectId}/revisions" : {
      "get" : {
        "tags" : [ "Site Pages" ],
        "summary" : "Retrieves all the previous versions of a Site Page",
        "description" : "Retrieves all the previous versions of a Site Page.",
        "operationId" : "get-/cms/v3/pages/site-pages/{objectId}/revisions",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "The Site Page id.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "after",
          "in" : "query",
          "description" : "The cursor token value to get the next set of results. You can get this from the `paging.next.after` JSON property of a paged response containing more results.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "before",
          "in" : "query",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "The maximum number of results to return. Default is 100.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CollectionResponseWithTotalVersionPage"
                }
              }
            }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "private_apps_legacy" : [ "content" ]
        }, {
          "oauth2_legacy" : [ "content" ]
        } ]
      }
    },
    "/cms/v3/pages/landing-pages/{objectId}/draft" : {
      "get" : {
        "tags" : [ "Landing Pages" ],
        "summary" : "Retrieve the full draft version of the Landing Page",
        "description" : "Retrieve the full draft version of the Landing Page.",
        "operationId" : "get-/cms/v3/pages/landing-pages/{objectId}/draft",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "The Landing Page id.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Page"
                }
              }
            }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "private_apps_legacy" : [ "content" ]
        }, {
          "oauth2_legacy" : [ "content" ]
        } ]
      },
      "patch" : {
        "tags" : [ "Landing Pages" ],
        "summary" : "Update a Landing Page draft",
        "description" : "Sparse updates the draft version of a single Landing Page object identified by the id in the path.\nYou only need to specify the column values that you are modifying.\n",
        "operationId" : "patch-/cms/v3/pages/landing-pages/{objectId}/draft",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "The Landing Page id.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The JSON representation of the updated Landing Page to be applied to the draft.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Page"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Page"
                }
              }
            }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "private_apps_legacy" : [ "content" ]
        }, {
          "oauth2_legacy" : [ "content" ]
        } ]
      }
    },
    "/cms/v3/pages/landing-pages" : {
      "get" : {
        "tags" : [ "Landing Pages" ],
        "summary" : "Get all Landing Pages",
        "description" : "Get the list of landing pages. Supports paging and filtering. This method would be useful for an integration that examined these models and used an external service to suggest edits.\n",
        "operationId" : "get-/cms/v3/pages/landing-pages",
        "parameters" : [ {
          "name" : "createdAt",
          "in" : "query",
          "description" : "Only return Landing Pages created at exactly the specified time.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "createdAfter",
          "in" : "query",
          "description" : "Only return Landing Pages created after the specified time.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "createdBefore",
          "in" : "query",
          "description" : "Only return Landing Pages created before the specified time.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "updatedAt",
          "in" : "query",
          "description" : "Only return Landing Pages last updated at exactly the specified time.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "updatedAfter",
          "in" : "query",
          "description" : "Only return Landing Pages last updated after the specified time.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "updatedBefore",
          "in" : "query",
          "description" : "Only return Landing Pages last updated before the specified time.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Specifies which fields to use for sorting results. Valid fields are `name`, `createdAt`, `updatedAt`, `createdBy`, `updatedBy`. `createdAt` will be used by default.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "after",
          "in" : "query",
          "description" : "The cursor token value to get the next set of results. You can get this from the `paging.next.after` JSON property of a paged response containing more results.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "The maximum number of results to return. Default is 100.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "archived",
          "in" : "query",
          "description" : "Specifies whether to return deleted Landing Pages. Defaults to `false`.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "property",
          "in" : "query",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CollectionResponseWithTotalPageForwardPaging"
                }
              }
            }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "private_apps_legacy" : [ "content" ]
        }, {
          "oauth2_legacy" : [ "content" ]
        } ]
      },
      "post" : {
        "tags" : [ "Landing Pages" ],
        "summary" : "Create a new Landing Page",
        "description" : "Create a new Landing Page",
        "operationId" : "post-/cms/v3/pages/landing-pages",
        "parameters" : [ ],
        "requestBody" : {
          "description" : "The JSON representation of a new Landing Page.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Page"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Page"
                }
              }
            }
          },
          "200" : {
            "description" : "successful operation",
            "content" : { }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "private_apps_legacy" : [ "content" ]
        }, {
          "oauth2_legacy" : [ "content" ]
        } ]
      }
    },
    "/cms/v3/pages/site-pages/{objectId}/revisions/{revisionId}/restore-to-draft" : {
      "post" : {
        "tags" : [ "Site Pages" ],
        "summary" : "Restore a previous version of a Site Page, to the draft version of the Site Page",
        "description" : "Takes a specified version of a Site Page, sets it as the new draft version of the Site Page.",
        "operationId" : "post-/cms/v3/pages/site-pages/{objectId}/revisions/{revisionId}/restore-to-draft",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "The Site Page id.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "revisionId",
          "in" : "path",
          "description" : "The Site Page version id to restore.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Page"
                }
              }
            }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "private_apps_legacy" : [ "content" ]
        }, {
          "oauth2_legacy" : [ "content" ]
        } ]
      }
    },
    "/cms/v3/pages/site-pages/ab-test/end" : {
      "post" : {
        "tags" : [ "Site Pages" ],
        "summary" : "End an active A/B test",
        "description" : "End an active A/B test and designate a winner.",
        "operationId" : "post-/cms/v3/pages/site-pages/ab-test/end",
        "parameters" : [ ],
        "requestBody" : {
          "description" : "The JSON representation of the AbTestEndRequest object.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AbTestEndRequestVNext"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "204" : {
            "description" : "No content",
            "content" : { }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "private_apps_legacy" : [ "content" ]
        }, {
          "oauth2_legacy" : [ "content" ]
        } ]
      }
    },
    "/cms/v3/pages/landing-pages/batch/create" : {
      "post" : {
        "tags" : [ "Landing Pages" ],
        "summary" : "Create a batch of Landing Pages",
        "description" : "Create the Landing Page objects detailed in the request body.",
        "operationId" : "post-/cms/v3/pages/landing-pages/batch/create",
        "parameters" : [ ],
        "requestBody" : {
          "description" : "The JSON array of new Landing Pages to create.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BatchInputPage"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BatchResponsePage"
                }
              }
            }
          },
          "207" : {
            "description" : "multiple statuses",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BatchResponsePageWithErrors"
                }
              }
            }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "private_apps_legacy" : [ "content" ]
        }, {
          "oauth2_legacy" : [ "content" ]
        } ]
      }
    },
    "/cms/v3/pages/landing-pages/batch/update" : {
      "post" : {
        "tags" : [ "Landing Pages" ],
        "summary" : "Update a batch of Landing Pages",
        "description" : "Update the Landing Page objects identified in the request body.",
        "operationId" : "post-/cms/v3/pages/landing-pages/batch/update",
        "parameters" : [ {
          "name" : "archived",
          "in" : "query",
          "description" : "Specifies whether to update deleted Landing Pages. Defaults to `false`.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "requestBody" : {
          "description" : "The JSON representation of the updated Landing Pages.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BatchInputJsonNode"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BatchResponsePage"
                }
              }
            }
          },
          "207" : {
            "description" : "multiple statuses",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BatchResponsePageWithErrors"
                }
              }
            }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "private_apps_legacy" : [ "content" ]
        }, {
          "oauth2_legacy" : [ "content" ]
        } ]
      }
    },
    "/cms/v3/pages/landing-pages/batch/read" : {
      "post" : {
        "tags" : [ "Landing Pages" ],
        "summary" : "Retrieve a batch of Landing Pages",
        "description" : "Retrieve the Landing Page objects identified in the request body.",
        "operationId" : "post-/cms/v3/pages/landing-pages/batch/read",
        "parameters" : [ {
          "name" : "archived",
          "in" : "query",
          "description" : "Specifies whether to return deleted Landing Pages. Defaults to `false`.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "requestBody" : {
          "description" : "The JSON array of Landing Page ids.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BatchInputString"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BatchResponsePage"
                }
              }
            }
          },
          "207" : {
            "description" : "multiple statuses",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BatchResponsePageWithErrors"
                }
              }
            }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "private_apps_legacy" : [ "content" ]
        }, {
          "oauth2_legacy" : [ "content" ]
        } ]
      }
    },
    "/cms/v3/pages/landing-pages/clone" : {
      "post" : {
        "tags" : [ "Landing Pages" ],
        "summary" : "Clone a Landing Page",
        "description" : "Clone a Landing Page",
        "operationId" : "post-/cms/v3/pages/landing-pages/clone",
        "parameters" : [ ],
        "requestBody" : {
          "description" : "The JSON representation of the ContentCloneRequest object.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ContentCloneRequestVNext"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Page"
                }
              }
            }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "private_apps_legacy" : [ "content" ]
        }, {
          "oauth2_legacy" : [ "content" ]
        } ]
      }
    },
    "/cms/v3/pages/landing-pages/folders/{objectId}/revisions/{revisionId}/restore" : {
      "post" : {
        "tags" : [ "Landing Pages" ],
        "summary" : "Restore a previous version of a Folder",
        "description" : "Takes a specified version of a Folder and restores it.",
        "operationId" : "post-/cms/v3/pages/landing-pages/folders/{objectId}/revisions/{revisionId}/restore",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "The Folder id.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "revisionId",
          "in" : "path",
          "description" : "The Folder version id to restore.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ContentFolder"
                }
              }
            }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "private_apps_legacy" : [ "content" ]
        }, {
          "oauth2_legacy" : [ "content" ]
        } ]
      }
    },
    "/cms/v3/pages/landing-pages/multi-language/set-new-lang-primary" : {
      "put" : {
        "tags" : [ "Landing Pages" ],
        "summary" : "Set a new primary language",
        "description" : "Set a landing page as the primary language of a multi-language group.",
        "operationId" : "put-/cms/v3/pages/landing-pages/multi-language/set-new-lang-primary",
        "parameters" : [ ],
        "requestBody" : {
          "description" : "The JSON representation of the SetNewLanguagePrimaryRequest object.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SetNewLanguagePrimaryRequestVNext"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "204" : {
            "description" : "No content",
            "content" : { }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "private_apps_legacy" : [ "content" ]
        }, {
          "oauth2_legacy" : [ "content" ]
        } ]
      }
    },
    "/cms/v3/pages/landing-pages/{objectId}/revisions/{revisionId}/restore" : {
      "post" : {
        "tags" : [ "Landing Pages" ],
        "summary" : "Restore a previous version of a Landing Page",
        "description" : "Takes a specified version of a Landing Page and restores it.",
        "operationId" : "post-/cms/v3/pages/landing-pages/{objectId}/revisions/{revisionId}/restore",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "The Landing Page id.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "revisionId",
          "in" : "path",
          "description" : "The Landing Page version id to restore.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Page"
                }
              }
            }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "private_apps_legacy" : [ "content" ]
        }, {
          "oauth2_legacy" : [ "content" ]
        } ]
      }
    },
    "/cms/v3/pages/site-pages/{objectId}/draft" : {
      "get" : {
        "tags" : [ "Site Pages" ],
        "summary" : "Retrieve the full draft version of the Site Page",
        "description" : "Retrieve the full draft version of the Site Page.",
        "operationId" : "get-/cms/v3/pages/site-pages/{objectId}/draft",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "The Site Page id.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Page"
                }
              }
            }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "private_apps_legacy" : [ "content" ]
        }, {
          "oauth2_legacy" : [ "content" ]
        } ]
      },
      "patch" : {
        "tags" : [ "Site Pages" ],
        "summary" : "Update a Site Page draft",
        "description" : "Sparse updates the draft version of a single Site Page object identified by the id in the path.\nYou only need to specify the column values that you are modifying.\n",
        "operationId" : "patch-/cms/v3/pages/site-pages/{objectId}/draft",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "The Site Page id.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The JSON representation of the updated Site Page to be applied to the draft.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Page"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Page"
                }
              }
            }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "private_apps_legacy" : [ "content" ]
        }, {
          "oauth2_legacy" : [ "content" ]
        } ]
      }
    },
    "/cms/v3/pages/landing-pages/folders/{objectId}" : {
      "get" : {
        "tags" : [ "Landing Pages" ],
        "summary" : "Retrieve a Folder",
        "description" : "Retrieve the Folder object identified by the id in the path.",
        "operationId" : "get-/cms/v3/pages/landing-pages/folders/{objectId}",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "The Folder id.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "archived",
          "in" : "query",
          "description" : "Specifies whether to return deleted Folders. Defaults to `false`.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "property",
          "in" : "query",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ContentFolder"
                }
              }
            }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "private_apps_legacy" : [ "content" ]
        }, {
          "oauth2_legacy" : [ "content" ]
        } ]
      },
      "delete" : {
        "tags" : [ "Landing Pages" ],
        "summary" : "Delete a Folder",
        "description" : "Delete the Folder object identified by the id in the path.",
        "operationId" : "delete-/cms/v3/pages/landing-pages/folders/{objectId}",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "The Folder id.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "archived",
          "in" : "query",
          "description" : "Whether to return only results that have been archived.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "No content",
            "content" : { }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "private_apps_legacy" : [ "content" ]
        }, {
          "oauth2_legacy" : [ "content" ]
        } ]
      },
      "patch" : {
        "tags" : [ "Landing Pages" ],
        "summary" : "Update a Folder",
        "description" : "Sparse updates a single Folder object identified by the id in the path.\nYou only need to specify the column values that you are modifying.\n",
        "operationId" : "patch-/cms/v3/pages/landing-pages/folders/{objectId}",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "The Folder id.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "archived",
          "in" : "query",
          "description" : "Specifies whether to update deleted Folders. Defaults to `false`.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "requestBody" : {
          "description" : "The JSON representation of the updated Folder.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ContentFolder"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ContentFolder"
                }
              }
            }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "private_apps_legacy" : [ "content" ]
        }, {
          "oauth2_legacy" : [ "content" ]
        } ]
      }
    },
    "/cms/v3/pages/site-pages/batch/read" : {
      "post" : {
        "tags" : [ "Site Pages" ],
        "summary" : "Retrieve a batch of Site Pages",
        "description" : "Retrieve the Site Page objects identified in the request body.",
        "operationId" : "post-/cms/v3/pages/site-pages/batch/read",
        "parameters" : [ {
          "name" : "archived",
          "in" : "query",
          "description" : "Specifies whether to return deleted Site Pages. Defaults to `false`.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "requestBody" : {
          "description" : "The JSON array of Site Page ids.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BatchInputString"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BatchResponsePage"
                }
              }
            }
          },
          "207" : {
            "description" : "multiple statuses",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BatchResponsePageWithErrors"
                }
              }
            }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "private_apps_legacy" : [ "content" ]
        }, {
          "oauth2_legacy" : [ "content" ]
        } ]
      }
    },
    "/cms/v3/pages/landing-pages/ab-test/create-variation" : {
      "post" : {
        "tags" : [ "Landing Pages" ],
        "summary" : "Create a new A/B test variation",
        "description" : "Create a new A/B test variation based on the information provided in the request body.\n",
        "operationId" : "post-/cms/v3/pages/landing-pages/ab-test/create-variation",
        "parameters" : [ ],
        "requestBody" : {
          "description" : "The JSON representation of the AbTestCreateRequest object.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AbTestCreateRequestVNext"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Page"
                }
              }
            }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "private_apps_legacy" : [ "content" ]
        }, {
          "oauth2_legacy" : [ "content" ]
        } ]
      }
    },
    "/cms/v3/pages/site-pages" : {
      "get" : {
        "tags" : [ "Site Pages" ],
        "summary" : "Get all Site Pages",
        "description" : "Get the list of site pages. Supports paging and filtering. This method would be useful for an integration that examined these models and used an external service to suggest edits.\n",
        "operationId" : "get-/cms/v3/pages/site-pages",
        "parameters" : [ {
          "name" : "createdAt",
          "in" : "query",
          "description" : "Only return Site Pages created at exactly the specified time.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "createdAfter",
          "in" : "query",
          "description" : "Only return Site Pages created after the specified time.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "createdBefore",
          "in" : "query",
          "description" : "Only return Site Pages created before the specified time.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "updatedAt",
          "in" : "query",
          "description" : "Only return Site Pages last updated at exactly the specified time.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "updatedAfter",
          "in" : "query",
          "description" : "Only return Site Pages last updated after the specified time.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "updatedBefore",
          "in" : "query",
          "description" : "Only return Site Pages last updated before the specified time.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Specifies which fields to use for sorting results. Valid fields are `name`, `createdAt`, `updatedAt`, `createdBy`, `updatedBy`. `createdAt` will be used by default.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "after",
          "in" : "query",
          "description" : "The cursor token value to get the next set of results. You can get this from the `paging.next.after` JSON property of a paged response containing more results.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "The maximum number of results to return. Default is 100.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "archived",
          "in" : "query",
          "description" : "Specifies whether to return deleted Site Pages. Defaults to `false`.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "property",
          "in" : "query",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CollectionResponseWithTotalPageForwardPaging"
                }
              }
            }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "private_apps_legacy" : [ "content" ]
        }, {
          "oauth2_legacy" : [ "content" ]
        } ]
      },
      "post" : {
        "tags" : [ "Site Pages" ],
        "summary" : "Create a new Site Page",
        "description" : "Create a new Site Page",
        "operationId" : "post-/cms/v3/pages/site-pages",
        "parameters" : [ ],
        "requestBody" : {
          "description" : "The JSON representation of a new Site Page.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Page"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Page"
                }
              }
            }
          },
          "200" : {
            "description" : "successful operation",
            "content" : { }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "private_apps_legacy" : [ "content" ]
        }, {
          "oauth2_legacy" : [ "content" ]
        } ]
      }
    },
    "/cms/v3/pages/landing-pages/multi-language/attach-to-lang-group" : {
      "post" : {
        "tags" : [ "Landing Pages" ],
        "summary" : "Attach a landing page to a multi-language group",
        "description" : "Attach a landing page to a multi-language group.",
        "operationId" : "post-/cms/v3/pages/landing-pages/multi-language/attach-to-lang-group",
        "parameters" : [ ],
        "requestBody" : {
          "description" : "The JSON representation of the AttachToLangPrimaryRequest object.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AttachToLangPrimaryRequestVNext"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "$ref" : "#/components/responses/Error"
          },
          "200" : {
            "description" : "successful operation",
            "content" : { }
          }
        },
        "security" : [ {
          "private_apps_legacy" : [ "content" ]
        }, {
          "oauth2_legacy" : [ "content" ]
        } ]
      }
    },
    "/cms/v3/pages/site-pages/multi-language/create-language-variation" : {
      "post" : {
        "tags" : [ "Site Pages" ],
        "summary" : "Create a new language variation",
        "description" : "Create a new language variation from an existing site page",
        "operationId" : "post-/cms/v3/pages/site-pages/multi-language/create-language-variation",
        "parameters" : [ ],
        "requestBody" : {
          "description" : "The JSON representation of the ContentLanguageCloneRequest object.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ContentLanguageCloneRequestVNext"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Page"
                }
              }
            }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "private_apps_legacy" : [ "content" ]
        }, {
          "oauth2_legacy" : [ "content" ]
        } ]
      }
    },
    "/cms/v3/pages/landing-pages/{objectId}/revisions/{revisionId}" : {
      "get" : {
        "tags" : [ "Landing Pages" ],
        "summary" : "Retrieves a previous version of a Landing Page",
        "description" : "Retrieves a previous version of a Landing Page",
        "operationId" : "get-/cms/v3/pages/landing-pages/{objectId}/revisions/{revisionId}",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "The Landing Page id.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "revisionId",
          "in" : "path",
          "description" : "The Landing Page version id.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VersionPage"
                }
              }
            }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "private_apps_legacy" : [ "content" ]
        }, {
          "oauth2_legacy" : [ "content" ]
        } ]
      }
    },
    "/cms/v3/pages/landing-pages/ab-test/end" : {
      "post" : {
        "tags" : [ "Landing Pages" ],
        "summary" : "End an active A/B test",
        "description" : "End an active A/B test and designate a winner.",
        "operationId" : "post-/cms/v3/pages/landing-pages/ab-test/end",
        "parameters" : [ ],
        "requestBody" : {
          "description" : "The JSON representation of the AbTestEndRequest object.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AbTestEndRequestVNext"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "204" : {
            "description" : "No content",
            "content" : { }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "private_apps_legacy" : [ "content" ]
        }, {
          "oauth2_legacy" : [ "content" ]
        } ]
      }
    },
    "/cms/v3/pages/landing-pages/{objectId}/draft/push-live" : {
      "post" : {
        "tags" : [ "Landing Pages" ],
        "summary" : "Push Landing Page draft edits live",
        "description" : "Take any changes from the draft version of the Landing Page and apply them to the live version.",
        "operationId" : "post-/cms/v3/pages/landing-pages/{objectId}/draft/push-live",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "The id of the Landing Page for which it's draft will be pushed live.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "No content",
            "content" : { }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "private_apps_legacy" : [ "content" ]
        }, {
          "oauth2_legacy" : [ "content" ]
        } ]
      }
    },
    "/cms/v3/pages/landing-pages/multi-language/detach-from-lang-group" : {
      "post" : {
        "tags" : [ "Landing Pages" ],
        "summary" : "Detach a landing page from a multi-language group",
        "description" : "Detach a landing page from a multi-language group.",
        "operationId" : "post-/cms/v3/pages/landing-pages/multi-language/detach-from-lang-group",
        "parameters" : [ ],
        "requestBody" : {
          "description" : "The JSON representation of the DetachFromLangGroupRequest object.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DetachFromLangGroupRequestVNext"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "$ref" : "#/components/responses/Error"
          },
          "200" : {
            "description" : "successful operation",
            "content" : { }
          }
        },
        "security" : [ {
          "private_apps_legacy" : [ "content" ]
        }, {
          "oauth2_legacy" : [ "content" ]
        } ]
      }
    },
    "/cms/v3/pages/landing-pages/schedule" : {
      "post" : {
        "tags" : [ "Landing Pages" ],
        "summary" : "Schedule a Landing Page to be Published",
        "description" : "Schedule a Landing Page to be Published",
        "operationId" : "post-/cms/v3/pages/landing-pages/schedule",
        "parameters" : [ ],
        "requestBody" : {
          "description" : "The JSON representation of the ContentScheduleRequestVNext object.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ContentScheduleRequestVNext"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "204" : {
            "description" : "No content",
            "content" : { }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "private_apps_legacy" : [ "content" ]
        }, {
          "oauth2_legacy" : [ "content" ]
        } ]
      }
    },
    "/cms/v3/pages/site-pages/ab-test/create-variation" : {
      "post" : {
        "tags" : [ "Site Pages" ],
        "summary" : "Create a new A/B test variation",
        "description" : "Create a new A/B test variation based on the information provided in the request body.\n",
        "operationId" : "post-/cms/v3/pages/site-pages/ab-test/create-variation",
        "parameters" : [ ],
        "requestBody" : {
          "description" : "The JSON representation of the AbTestCreateRequest object.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AbTestCreateRequestVNext"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Page"
                }
              }
            }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "private_apps_legacy" : [ "content" ]
        }, {
          "oauth2_legacy" : [ "content" ]
        } ]
      }
    },
    "/cms/v3/pages/landing-pages/multi-language/update-languages" : {
      "post" : {
        "tags" : [ "Landing Pages" ],
        "summary" : "Update languages of multi-language group",
        "description" : "Explicitly set new languages for each landing page in a multi-language group.",
        "operationId" : "post-/cms/v3/pages/landing-pages/multi-language/update-languages",
        "parameters" : [ ],
        "requestBody" : {
          "description" : "The JSON representation of the UpdateLanguagesRequest object.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UpdateLanguagesRequestVNext"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "$ref" : "#/components/responses/Error"
          },
          "200" : {
            "description" : "successful operation",
            "content" : { }
          }
        },
        "security" : [ {
          "private_apps_legacy" : [ "content" ]
        }, {
          "oauth2_legacy" : [ "content" ]
        } ]
      }
    },
    "/cms/v3/pages/site-pages/multi-language/update-languages" : {
      "post" : {
        "tags" : [ "Site Pages" ],
        "summary" : "Update languages of multi-language group",
        "description" : "Explicitly set new languages for each site page in a multi-language group.",
        "operationId" : "post-/cms/v3/pages/site-pages/multi-language/update-languages",
        "parameters" : [ ],
        "requestBody" : {
          "description" : "The JSON representation of the UpdateLanguagesRequest object.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UpdateLanguagesRequestVNext"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "$ref" : "#/components/responses/Error"
          },
          "200" : {
            "description" : "successful operation",
            "content" : { }
          }
        },
        "security" : [ {
          "private_apps_legacy" : [ "content" ]
        }, {
          "oauth2_legacy" : [ "content" ]
        } ]
      }
    },
    "/cms/v3/pages/landing-pages/ab-test/rerun" : {
      "post" : {
        "tags" : [ "Landing Pages" ],
        "summary" : "Rerun a previous A/B test",
        "description" : "Rerun a previous A/B test.",
        "operationId" : "post-/cms/v3/pages/landing-pages/ab-test/rerun",
        "parameters" : [ ],
        "requestBody" : {
          "description" : "The JSON representation of the AbTestRerunRequest object.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AbTestRerunRequestVNext"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "204" : {
            "description" : "No content",
            "content" : { }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "private_apps_legacy" : [ "content" ]
        }, {
          "oauth2_legacy" : [ "content" ]
        } ]
      }
    },
    "/cms/v3/pages/site-pages/batch/create" : {
      "post" : {
        "tags" : [ "Site Pages" ],
        "summary" : "Create a batch of Site Pages",
        "description" : "Create the Site Page objects detailed in the request body.",
        "operationId" : "post-/cms/v3/pages/site-pages/batch/create",
        "parameters" : [ ],
        "requestBody" : {
          "description" : "The JSON array of new Site Pages to create.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BatchInputPage"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BatchResponsePage"
                }
              }
            }
          },
          "207" : {
            "description" : "multiple statuses",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BatchResponsePageWithErrors"
                }
              }
            }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "private_apps_legacy" : [ "content" ]
        }, {
          "oauth2_legacy" : [ "content" ]
        } ]
      }
    },
    "/cms/v3/pages/site-pages/batch/archive" : {
      "post" : {
        "tags" : [ "Site Pages" ],
        "summary" : "Delete a batch of Site Pages",
        "description" : "Delete the Site Page objects identified in the request body.\nNote: This is not the same as the dashboard `archive` function. To perform a dashboard `archive` send an normal update with the `archivedInDashboard` field set to true.",
        "operationId" : "post-/cms/v3/pages/site-pages/batch/archive",
        "parameters" : [ ],
        "requestBody" : {
          "description" : "The JSON array of Site Page ids.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BatchInputString"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "204" : {
            "description" : "No content",
            "content" : { }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "private_apps_legacy" : [ "content" ]
        }, {
          "oauth2_legacy" : [ "content" ]
        } ]
      }
    },
    "/cms/v3/pages/landing-pages/folders/batch/archive" : {
      "post" : {
        "tags" : [ "Landing Pages" ],
        "summary" : "Delete a batch of Folders",
        "description" : "Delete the Folder objects identified in the request body.",
        "operationId" : "post-/cms/v3/pages/landing-pages/folders/batch/archive",
        "parameters" : [ ],
        "requestBody" : {
          "description" : "The JSON array of Folder ids.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BatchInputString"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "204" : {
            "description" : "No content",
            "content" : { }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "private_apps_legacy" : [ "content" ]
        }, {
          "oauth2_legacy" : [ "content" ]
        } ]
      }
    },
    "/cms/v3/pages/landing-pages/folders/batch/update" : {
      "post" : {
        "tags" : [ "Landing Pages" ],
        "summary" : "Update a batch of Folders",
        "description" : "Update the Folder objects identified in the request body.",
        "operationId" : "post-/cms/v3/pages/landing-pages/folders/batch/update",
        "parameters" : [ {
          "name" : "archived",
          "in" : "query",
          "description" : "Whether to return only results that have been archived.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BatchInputJsonNode"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BatchResponseContentFolder"
                }
              }
            }
          },
          "207" : {
            "description" : "multiple statuses",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BatchResponseContentFolderWithErrors"
                }
              }
            }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "private_apps_legacy" : [ "content" ]
        }, {
          "oauth2_legacy" : [ "content" ]
        } ]
      }
    },
    "/cms/v3/pages/site-pages/clone" : {
      "post" : {
        "tags" : [ "Site Pages" ],
        "summary" : "Clone a Site Page",
        "description" : "Clone a Site Page",
        "operationId" : "post-/cms/v3/pages/site-pages/clone",
        "parameters" : [ ],
        "requestBody" : {
          "description" : "The JSON representation of the ContentCloneRequest object.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ContentCloneRequestVNext"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Page"
                }
              }
            }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "private_apps_legacy" : [ "content" ]
        }, {
          "oauth2_legacy" : [ "content" ]
        } ]
      }
    },
    "/cms/v3/pages/site-pages/multi-language/set-new-lang-primary" : {
      "put" : {
        "tags" : [ "Site Pages" ],
        "summary" : "Set a new primary language",
        "description" : "Set a site page as the primary language of a multi-language group.",
        "operationId" : "put-/cms/v3/pages/site-pages/multi-language/set-new-lang-primary",
        "parameters" : [ ],
        "requestBody" : {
          "description" : "The JSON representation of the SetNewLanguagePrimaryRequest object.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SetNewLanguagePrimaryRequestVNext"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "204" : {
            "description" : "No content",
            "content" : { }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "private_apps_legacy" : [ "content" ]
        }, {
          "oauth2_legacy" : [ "content" ]
        } ]
      }
    },
    "/cms/v3/pages/landing-pages/folders/{objectId}/revisions/{revisionId}" : {
      "get" : {
        "tags" : [ "Landing Pages" ],
        "summary" : "Retrieves a previous version of a Folder",
        "description" : "Retrieves a previous version of a Folder",
        "operationId" : "get-/cms/v3/pages/landing-pages/folders/{objectId}/revisions/{revisionId}",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "The Folder id.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "revisionId",
          "in" : "path",
          "description" : "The Folder version id.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VersionContentFolder"
                }
              }
            }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "private_apps_legacy" : [ "content" ]
        }, {
          "oauth2_legacy" : [ "content" ]
        } ]
      }
    },
    "/cms/v3/pages/landing-pages/{objectId}/draft/reset" : {
      "post" : {
        "tags" : [ "Landing Pages" ],
        "summary" : "Reset the Landing Page draft to the live version",
        "description" : "Discards any edits and resets the draft to the live version.",
        "operationId" : "post-/cms/v3/pages/landing-pages/{objectId}/draft/reset",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "The id of the Landing Page for which it's draft will be reset.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "No content",
            "content" : { }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "private_apps_legacy" : [ "content" ]
        }, {
          "oauth2_legacy" : [ "content" ]
        } ]
      }
    },
    "/cms/v3/pages/landing-pages/{objectId}" : {
      "get" : {
        "tags" : [ "Landing Pages" ],
        "summary" : "Retrieve a Landing Page",
        "description" : "Retrieve the Landing Page object identified by the id in the path.",
        "operationId" : "get-/cms/v3/pages/landing-pages/{objectId}",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "The Landing Page id.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "archived",
          "in" : "query",
          "description" : "Specifies whether to return deleted Landing Pages. Defaults to `false`.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "property",
          "in" : "query",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Page"
                }
              }
            }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "private_apps_legacy" : [ "content" ]
        }, {
          "oauth2_legacy" : [ "content" ]
        } ]
      },
      "delete" : {
        "tags" : [ "Landing Pages" ],
        "summary" : "Delete a Landing Page",
        "description" : "Delete the Landing Page object identified by the id in the path.",
        "operationId" : "delete-/cms/v3/pages/landing-pages/{objectId}",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "The Landing Page id.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "archived",
          "in" : "query",
          "description" : "Whether to return only results that have been archived.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "No content",
            "content" : { }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "private_apps_legacy" : [ "content" ]
        }, {
          "oauth2_legacy" : [ "content" ]
        } ]
      },
      "patch" : {
        "tags" : [ "Landing Pages" ],
        "summary" : "Update a Landing Page",
        "description" : "Sparse updates a single Landing Page object identified by the id in the path.\nYou only need to specify the column values that you are modifying.\n",
        "operationId" : "patch-/cms/v3/pages/landing-pages/{objectId}",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "The Landing Page id.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "archived",
          "in" : "query",
          "description" : "Specifies whether to update deleted Landing Pages. Defaults to `false`.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "requestBody" : {
          "description" : "The JSON representation of the updated Landing Page.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Page"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Page"
                }
              }
            }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "private_apps_legacy" : [ "content" ]
        }, {
          "oauth2_legacy" : [ "content" ]
        } ]
      }
    },
    "/cms/v3/pages/landing-pages/multi-language/create-language-variation" : {
      "post" : {
        "tags" : [ "Landing Pages" ],
        "summary" : "Create a new language variation",
        "description" : "Create a new language variation from an existing landing page",
        "operationId" : "post-/cms/v3/pages/landing-pages/multi-language/create-language-variation",
        "parameters" : [ ],
        "requestBody" : {
          "description" : "The JSON representation of the ContentLanguageCloneRequest object.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ContentLanguageCloneRequestVNext"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Page"
                }
              }
            }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "private_apps_legacy" : [ "content" ]
        }, {
          "oauth2_legacy" : [ "content" ]
        } ]
      }
    },
    "/cms/v3/pages/site-pages/{objectId}/draft/push-live" : {
      "post" : {
        "tags" : [ "Site Pages" ],
        "summary" : "Push Site Page draft edits live",
        "description" : "Take any changes from the draft version of the Site Page and apply them to the live version.",
        "operationId" : "post-/cms/v3/pages/site-pages/{objectId}/draft/push-live",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "The id of the Site Page for which it's draft will be pushed live.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "No content",
            "content" : { }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "private_apps_legacy" : [ "content" ]
        }, {
          "oauth2_legacy" : [ "content" ]
        } ]
      }
    },
    "/cms/v3/pages/landing-pages/batch/archive" : {
      "post" : {
        "tags" : [ "Landing Pages" ],
        "summary" : "Delete a batch of Landing Pages",
        "description" : "Delete the Landing Page objects identified in the request body.\nNote: This is not the same as the dashboard `archive` function. To perform a dashboard `archive` send an normal update with the `archivedInDashboard` field set to true.",
        "operationId" : "post-/cms/v3/pages/landing-pages/batch/archive",
        "parameters" : [ ],
        "requestBody" : {
          "description" : "The JSON array of Landing Page ids.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BatchInputString"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "204" : {
            "description" : "No content",
            "content" : { }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "private_apps_legacy" : [ "content" ]
        }, {
          "oauth2_legacy" : [ "content" ]
        } ]
      }
    },
    "/cms/v3/pages/site-pages/ab-test/rerun" : {
      "post" : {
        "tags" : [ "Site Pages" ],
        "summary" : "Rerun a previous A/B test",
        "description" : "Rerun a previous A/B test.",
        "operationId" : "post-/cms/v3/pages/site-pages/ab-test/rerun",
        "parameters" : [ ],
        "requestBody" : {
          "description" : "The JSON representation of the AbTestRerunRequest object.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AbTestRerunRequestVNext"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "204" : {
            "description" : "No content",
            "content" : { }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "private_apps_legacy" : [ "content" ]
        }, {
          "oauth2_legacy" : [ "content" ]
        } ]
      }
    },
    "/cms/v3/pages/landing-pages/{objectId}/revisions/{revisionId}/restore-to-draft" : {
      "post" : {
        "tags" : [ "Landing Pages" ],
        "summary" : "Restore a previous version of a Landing Page, to the draft version of the Landing Page",
        "description" : "Takes a specified version of a Landing Page, sets it as the new draft version of the Landing Page.",
        "operationId" : "post-/cms/v3/pages/landing-pages/{objectId}/revisions/{revisionId}/restore-to-draft",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "The Landing Page id.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "revisionId",
          "in" : "path",
          "description" : "The Landing Page version id to restore.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Page"
                }
              }
            }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "private_apps_legacy" : [ "content" ]
        }, {
          "oauth2_legacy" : [ "content" ]
        } ]
      }
    },
    "/cms/v3/pages/site-pages/{objectId}/draft/reset" : {
      "post" : {
        "tags" : [ "Site Pages" ],
        "summary" : "Reset the Site Page draft to the live version",
        "description" : "Discards any edits and resets the draft to the live version.",
        "operationId" : "post-/cms/v3/pages/site-pages/{objectId}/draft/reset",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "The id of the Site Page for which it's draft will be reset.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "No content",
            "content" : { }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "private_apps_legacy" : [ "content" ]
        }, {
          "oauth2_legacy" : [ "content" ]
        } ]
      }
    },
    "/cms/v3/pages/site-pages/{objectId}" : {
      "get" : {
        "tags" : [ "Site Pages" ],
        "summary" : "Retrieve a Site Page",
        "description" : "Retrieve the Site Page object identified by the id in the path.",
        "operationId" : "get-/cms/v3/pages/site-pages/{objectId}",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "The Site Page id.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "archived",
          "in" : "query",
          "description" : "Specifies whether to return deleted Site Pages. Defaults to `false`.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "property",
          "in" : "query",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Page"
                }
              }
            }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "private_apps_legacy" : [ "content" ]
        }, {
          "oauth2_legacy" : [ "content" ]
        } ]
      },
      "delete" : {
        "tags" : [ "Site Pages" ],
        "summary" : "Delete a Site Page",
        "description" : "Delete the Site Page object identified by the id in the path.",
        "operationId" : "delete-/cms/v3/pages/site-pages/{objectId}",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "The Site Page id.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "archived",
          "in" : "query",
          "description" : "Whether to return only results that have been archived.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "No content",
            "content" : { }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "private_apps_legacy" : [ "content" ]
        }, {
          "oauth2_legacy" : [ "content" ]
        } ]
      },
      "patch" : {
        "tags" : [ "Site Pages" ],
        "summary" : "Update a Site Page",
        "description" : "Sparse updates a single Site Page object identified by the id in the path.\nYou only need to specify the column values that you are modifying.\n",
        "operationId" : "patch-/cms/v3/pages/site-pages/{objectId}",
        "parameters" : [ {
          "name" : "objectId",
          "in" : "path",
          "description" : "The Site Page id.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "archived",
          "in" : "query",
          "description" : "Specifies whether to update deleted Site Pages. Defaults to `false`.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "requestBody" : {
          "description" : "The JSON representation of the updated Site Page.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Page"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Page"
                }
              }
            }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "private_apps_legacy" : [ "content" ]
        }, {
          "oauth2_legacy" : [ "content" ]
        } ]
      }
    },
    "/cms/v3/pages/landing-pages/folders/batch/read" : {
      "post" : {
        "tags" : [ "Landing Pages" ],
        "summary" : "Retrieve a batch of Folders",
        "description" : "Update the Folder objects identified in the request body.",
        "operationId" : "post-/cms/v3/pages/landing-pages/folders/batch/read",
        "parameters" : [ {
          "name" : "archived",
          "in" : "query",
          "description" : "Specifies whether to return deleted Folders. Defaults to `false`.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "requestBody" : {
          "description" : "The JSON array of Folder ids.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BatchInputString"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BatchResponseContentFolder"
                }
              }
            }
          },
          "207" : {
            "description" : "multiple statuses",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BatchResponseContentFolderWithErrors"
                }
              }
            }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "private_apps_legacy" : [ "content" ]
        }, {
          "oauth2_legacy" : [ "content" ]
        } ]
      }
    }
  },
  "components" : {
    "schemas" : {
      "BatchInputString" : {
        "required" : [ "inputs" ],
        "type" : "object",
        "properties" : {
          "inputs" : {
            "type" : "array",
            "description" : "Strings to input.",
            "items" : {
              "type" : "string"
            }
          }
        },
        "description" : "Wrapper for providing an array of strings as inputs."
      },
      "StandardError" : {
        "required" : [ "category", "context", "errors", "links", "message", "status" ],
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "description" : "Error status."
          },
          "id" : {
            "type" : "string",
            "description" : "Error ID."
          },
          "category" : {
            "type" : "string",
            "description" : "Error category."
          },
          "subCategory" : {
            "type" : "object",
            "properties" : { },
            "description" : "Error subcategory."
          },
          "message" : {
            "type" : "string",
            "description" : "Error message."
          },
          "errors" : {
            "type" : "array",
            "description" : "List of error details.",
            "items" : {
              "$ref" : "#/components/schemas/ErrorDetail"
            }
          },
          "context" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            },
            "description" : "Error context."
          },
          "links" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "Error links."
          }
        },
        "description" : "Model definition for a standard error."
      },
      "ContentLanguageCloneRequestVNext" : {
        "required" : [ "id" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "ID of content to clone."
          },
          "language" : {
            "type" : "string",
            "description" : "Target language of new variant."
          },
          "primaryLanguage" : {
            "type" : "string",
            "description" : "Language of primary content to clone."
          }
        },
        "description" : "Request body object for creating new language variant content."
      },
      "BatchInputJsonNode" : {
        "required" : [ "inputs" ],
        "type" : "object",
        "properties" : {
          "inputs" : {
            "type" : "array",
            "description" : "JSON nodes to input.",
            "items" : {
              "type" : "object",
              "properties" : { }
            }
          }
        },
        "description" : "Wrapper for providing an array of JSON nodes as inputs."
      },
      "UpdateLanguagesRequestVNext" : {
        "required" : [ "languages", "primaryId" ],
        "type" : "object",
        "properties" : {
          "primaryId" : {
            "type" : "string",
            "description" : "ID of the primary object in the multi-language group."
          },
          "languages" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "Map of object IDs to associated languages of object in the multi-language group."
          }
        },
        "description" : "Request object for updating languages within a multi-language group."
      },
      "BatchResponsePageWithErrors" : {
        "required" : [ "completedAt", "results", "startedAt", "status" ],
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "description" : "Status of batch operation.",
            "enum" : [ "PENDING", "PROCESSING", "CANCELED", "COMPLETE" ]
          },
          "results" : {
            "type" : "array",
            "description" : "Results of batch operation.",
            "items" : {
              "$ref" : "#/components/schemas/Page"
            }
          },
          "numErrors" : {
            "type" : "integer",
            "description" : "Number of errors.",
            "format" : "int32"
          },
          "errors" : {
            "type" : "array",
            "description" : "Errors in batch operation.",
            "items" : {
              "$ref" : "#/components/schemas/StandardError"
            }
          },
          "requestedAt" : {
            "type" : "string",
            "description" : "Time of batch operation request.",
            "format" : "date-time"
          },
          "startedAt" : {
            "type" : "string",
            "description" : "Time of batch operation start.",
            "format" : "date-time"
          },
          "completedAt" : {
            "type" : "string",
            "description" : "Time of batch operation completion.",
            "format" : "date-time"
          },
          "links" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "Links associated with batch operation."
          }
        },
        "description" : "Response object for batch operations on pages with errors."
      },
      "SetNewLanguagePrimaryRequestVNext" : {
        "required" : [ "id" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "ID of object to set as primary in multi-language group."
          }
        },
        "description" : "Request body object for setting a new primary language."
      },
      "RGBAColor" : {
        "required" : [ "a", "b", "g", "r" ],
        "type" : "object",
        "properties" : {
          "r" : {
            "type" : "integer",
            "description" : "Red.",
            "format" : "int32"
          },
          "g" : {
            "type" : "integer",
            "description" : "Green.",
            "format" : "int32"
          },
          "b" : {
            "type" : "integer",
            "description" : "Blue.",
            "format" : "int32"
          },
          "a" : {
            "type" : "number",
            "description" : "Alpha."
          }
        },
        "description" : "A color defined by RGB values."
      },
      "CollectionResponseWithTotalContentFolderForwardPaging" : {
        "required" : [ "results", "total" ],
        "type" : "object",
        "properties" : {
          "total" : {
            "type" : "integer",
            "description" : "Total number of content folders.",
            "format" : "int32"
          },
          "results" : {
            "type" : "array",
            "description" : "Collection of content folders.",
            "items" : {
              "$ref" : "#/components/schemas/ContentFolder"
            }
          },
          "paging" : {
            "$ref" : "#/components/schemas/ForwardPaging"
          }
        },
        "description" : "Response object for collections of content folders with pagination information."
      },
      "DetachFromLangGroupRequestVNext" : {
        "required" : [ "id" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "ID of the object to remove from a multi-language group."
          }
        },
        "description" : "Request body object for detaching objects from multi-language groups."
      },
      "AbTestCreateRequestVNext" : {
        "required" : [ "contentId", "variationName" ],
        "type" : "object",
        "properties" : {
          "variationName" : {
            "type" : "string",
            "description" : "Name of A/B test variation."
          },
          "contentId" : {
            "type" : "string",
            "description" : "ID of the object to test."
          }
        },
        "description" : "Request body object for creating A/B tests."
      },
      "Page" : {
        "required" : [ "abStatus", "abTestId", "archivedAt", "archivedInDashboard", "attachedStylesheets", "authorName", "campaign", "categoryId", "contentGroupId", "contentTypeCategory", "created", "createdById", "currentState", "currentlyPublished", "domain", "dynamicPageDataSourceId", "dynamicPageDataSourceType", "dynamicPageHubDbTableId", "enableDomainStylesheets", "enableLayoutStylesheets", "featuredImage", "featuredImageAltText", "folderId", "footerHtml", "headHtml", "htmlTitle", "id", "includeDefaultCustomCss", "language", "layoutSections", "linkRelCanonicalUrl", "mabExperimentId", "metaDescription", "name", "pageExpiryDate", "pageExpiryEnabled", "pageExpiryRedirectId", "pageExpiryRedirectUrl", "pageRedirected", "password", "publicAccessRules", "publicAccessRulesEnabled", "publishDate", "publishImmediately", "slug", "state", "subcategory", "templatePath", "themeSettingsValues", "translatedFromId", "translations", "updated", "updatedById", "url", "useFeaturedImage", "widgetContainers", "widgets" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "The unique ID of the page."
          },
          "slug" : {
            "type" : "string",
            "description" : "The path of the this page. This field is appended to the domain to construct the url of this page."
          },
          "contentGroupId" : {
            "type" : "string"
          },
          "campaign" : {
            "type" : "string",
            "description" : "The GUID of the marketing campaign this page is a part of."
          },
          "categoryId" : {
            "type" : "integer",
            "description" : "ID of the type of object this is. Should always .",
            "format" : "int32"
          },
          "state" : {
            "maxLength" : 25,
            "type" : "string",
            "description" : "An ENUM descibing the current state of this page."
          },
          "templatePath" : {
            "type" : "string",
            "description" : "String detailing the path of the template used for this page."
          },
          "name" : {
            "type" : "string",
            "description" : "The internal name of the page."
          },
          "mabExperimentId" : {
            "type" : "string",
            "description" : "The ID of the MAB test (or dynamic test) associated with this page, if applicable"
          },
          "authorName" : {
            "type" : "string",
            "description" : "The name of the user that updated this page."
          },
          "abTestId" : {
            "type" : "string",
            "description" : "The ID of the AB test associated with this page, if applicable"
          },
          "createdById" : {
            "type" : "string",
            "description" : "The ID of the user that created this page."
          },
          "updatedById" : {
            "type" : "string",
            "description" : "The ID of the user that updated this page."
          },
          "domain" : {
            "type" : "string",
            "description" : "The domain this page will resolve to. If null, the page will default to the primary domain for this content type."
          },
          "subcategory" : {
            "type" : "string",
            "description" : "Details the type of page this is. Should always be landing_page or site_page"
          },
          "abStatus" : {
            "type" : "string",
            "description" : "The status of the AB test associated with this page, if applicable",
            "enum" : [ "master", "variant", "loser_variant", "mab_master", "mab_variant", "automated_master", "automated_variant", "automated_loser_variant" ]
          },
          "folderId" : {
            "type" : "string",
            "description" : "The ID of the associated folder this landing page is organized under in the app dashboard."
          },
          "widgetContainers" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object",
              "properties" : { }
            },
            "description" : "A data structure containing the data for all the modules inside the containers for this page. This will only be populated if the page has widget containers."
          },
          "widgets" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object",
              "properties" : { }
            },
            "description" : "A data structure containing the data for all the modules for this page."
          },
          "language" : {
            "type" : "string",
            "description" : "The explicitly defined ISO 639 language code of the page. If null, the page will default to the language of the Domain.",
            "enum" : [ "af", "af-na", "af-za", "agq", "agq-cm", "ak", "ak-gh", "am", "am-et", "ar", "ar-001", "ar-ae", "ar-bh", "ar-dj", "ar-dz", "ar-eg", "ar-eh", "ar-er", "ar-il", "ar-iq", "ar-jo", "ar-km", "ar-kw", "ar-lb", "ar-ly", "ar-ma", "ar-mr", "ar-om", "ar-ps", "ar-qa", "ar-sa", "ar-sd", "ar-so", "ar-ss", "ar-sy", "ar-td", "ar-tn", "ar-ye", "as", "as-in", "asa", "asa-tz", "ast", "ast-es", "az", "az-az", "bas", "bas-cm", "be", "be-by", "bem", "bem-zm", "bez", "bez-tz", "bg", "bg-bg", "bm", "bm-ml", "bn", "bn-bd", "bn-in", "bo", "bo-cn", "bo-in", "br", "br-fr", "brx", "brx-in", "bs", "bs-ba", "ca", "ca-ad", "ca-es", "ca-fr", "ca-it", "ccp", "ccp-bd", "ccp-in", "ce", "ce-ru", "ceb", "ceb-ph", "cgg", "cgg-ug", "chr", "chr-us", "ckb", "ckb-iq", "ckb-ir", "cs", "cs-cz", "cu", "cu-ru", "cy", "cy-gb", "da", "da-dk", "da-gl", "dav", "dav-ke", "de", "de-at", "de-be", "de-ch", "de-de", "de-gr", "de-it", "de-li", "de-lu", "dje", "dje-ne", "doi", "doi-in", "dsb", "dsb-de", "dua", "dua-cm", "dyo", "dyo-sn", "dz", "dz-bt", "ebu", "ebu-ke", "ee", "ee-gh", "ee-tg", "el", "el-cy", "el-gr", "en", "en-001", "en-150", "en-ae", "en-ag", "en-ai", "en-as", "en-at", "en-au", "en-bb", "en-be", "en-bi", "en-bm", "en-bs", "en-bw", "en-bz", "en-ca", "en-cc", "en-ch", "en-ck", "en-cm", "en-cn", "en-cx", "en-cy", "en-de", "en-dg", "en-dk", "en-dm", "en-er", "en-fi", "en-fj", "en-fk", "en-fm", "en-gb", "en-gd", "en-gg", "en-gh", "en-gi", "en-gm", "en-gu", "en-gy", "en-hk", "en-ie", "en-il", "en-im", "en-in", "en-io", "en-je", "en-jm", "en-ke", "en-ki", "en-kn", "en-ky", "en-lc", "en-lr", "en-ls", "en-lu", "en-mg", "en-mh", "en-mo", "en-mp", "en-ms", "en-mt", "en-mu", "en-mw", "en-mx", "en-my", "en-na", "en-nf", "en-ng", "en-nl", "en-nr", "en-nu", "en-nz", "en-pg", "en-ph", "en-pk", "en-pn", "en-pr", "en-pw", "en-rw", "en-sb", "en-sc", "en-sd", "en-se", "en-sg", "en-sh", "en-si", "en-sl", "en-ss", "en-sx", "en-sz", "en-tc", "en-tk", "en-to", "en-tt", "en-tv", "en-tz", "en-ug", "en-um", "en-us", "en-vc", "en-vg", "en-vi", "en-vu", "en-ws", "en-za", "en-zm", "en-zw", "eo", "eo-001", "es", "es-419", "es-ar", "es-bo", "es-br", "es-bz", "es-cl", "es-co", "es-cr", "es-cu", "es-do", "es-ea", "es-ec", "es-es", "es-gq", "es-gt", "es-hn", "es-ic", "es-mx", "es-ni", "es-pa", "es-pe", "es-ph", "es-pr", "es-py", "es-sv", "es-us", "es-uy", "es-ve", "et", "et-ee", "eu", "eu-es", "ewo", "ewo-cm", "fa", "fa-af", "fa-ir", "ff", "ff-bf", "ff-cm", "ff-gh", "ff-gm", "ff-gn", "ff-gw", "ff-lr", "ff-mr", "ff-ne", "ff-ng", "ff-sl", "ff-sn", "fi", "fi-fi", "fil", "fil-ph", "fo", "fo-dk", "fo-fo", "fr", "fr-be", "fr-bf", "fr-bi", "fr-bj", "fr-bl", "fr-ca", "fr-cd", "fr-cf", "fr-cg", "fr-ch", "fr-ci", "fr-cm", "fr-dj", "fr-dz", "fr-fr", "fr-ga", "fr-gf", "fr-gn", "fr-gp", "fr-gq", "fr-ht", "fr-km", "fr-lu", "fr-ma", "fr-mc", "fr-mf", "fr-mg", "fr-ml", "fr-mq", "fr-mr", "fr-mu", "fr-nc", "fr-ne", "fr-pf", "fr-pm", "fr-re", "fr-rw", "fr-sc", "fr-sn", "fr-sy", "fr-td", "fr-tg", "fr-tn", "fr-vu", "fr-wf", "fr-yt", "fur", "fur-it", "fy", "fy-nl", "ga", "ga-gb", "ga-ie", "gd", "gd-gb", "gl", "gl-es", "gsw", "gsw-ch", "gsw-fr", "gsw-li", "gu", "gu-in", "guz", "guz-ke", "gv", "gv-im", "ha", "ha-gh", "ha-ne", "ha-ng", "haw", "haw-us", "he", "hi", "hi-in", "hr", "hr-ba", "hr-hr", "hsb", "hsb-de", "hu", "hu-hu", "hy", "hy-am", "ia", "ia-001", "id", "ig", "ig-ng", "ii", "ii-cn", "id-id", "is", "is-is", "it", "it-ch", "it-it", "it-sm", "it-va", "he-il", "ja", "ja-jp", "jgo", "jgo-cm", "yi", "yi-001", "jmc", "jmc-tz", "jv", "jv-id", "ka", "ka-ge", "kab", "kab-dz", "kam", "kam-ke", "kde", "kde-tz", "kea", "kea-cv", "khq", "khq-ml", "ki", "ki-ke", "kk", "kk-kz", "kkj", "kkj-cm", "kl", "kl-gl", "kln", "kln-ke", "km", "km-kh", "kn", "kn-in", "ko", "ko-kp", "ko-kr", "kok", "kok-in", "ks", "ks-in", "ksb", "ksb-tz", "ksf", "ksf-cm", "ksh", "ksh-de", "kw", "kw-gb", "ku", "ku-tr", "ky", "ky-kg", "lag", "lag-tz", "lb", "lb-lu", "lg", "lg-ug", "lkt", "lkt-us", "ln", "ln-ao", "ln-cd", "ln-cf", "ln-cg", "lo", "lo-la", "lrc", "lrc-iq", "lrc-ir", "lt", "lt-lt", "lu", "lu-cd", "luo", "luo-ke", "luy", "luy-ke", "lv", "lv-lv", "mai", "mai-in", "mas", "mas-ke", "mas-tz", "mer", "mer-ke", "mfe", "mfe-mu", "mg", "mg-mg", "mgh", "mgh-mz", "mgo", "mgo-cm", "mi", "mi-nz", "mk", "mk-mk", "ml", "ml-in", "mn", "mn-mn", "mni", "mni-in", "mr", "mr-in", "ms", "ms-bn", "ms-id", "ms-my", "ms-sg", "mt", "mt-mt", "mua", "mua-cm", "my", "my-mm", "mzn", "mzn-ir", "naq", "naq-na", "nb", "nb-no", "nb-sj", "nd", "nd-zw", "nds", "nds-de", "nds-nl", "ne", "ne-in", "ne-np", "nl", "nl-aw", "nl-be", "nl-ch", "nl-bq", "nl-cw", "nl-lu", "nl-nl", "nl-sr", "nl-sx", "nmg", "nmg-cm", "nn", "nn-no", "nnh", "nnh-cm", "no", "no-no", "nus", "nus-ss", "nyn", "nyn-ug", "om", "om-et", "om-ke", "or", "or-in", "os", "os-ge", "os-ru", "pa", "pa-in", "pa-pk", "pcm", "pcm-ng", "pl", "pl-pl", "prg", "prg-001", "ps", "ps-af", "ps-pk", "pt", "pt-ao", "pt-br", "pt-ch", "pt-cv", "pt-gq", "pt-gw", "pt-lu", "pt-mo", "pt-mz", "pt-pt", "pt-st", "pt-tl", "qu", "qu-bo", "qu-ec", "qu-pe", "rm", "rm-ch", "rn", "rn-bi", "ro", "ro-md", "ro-ro", "rof", "rof-tz", "ru", "ru-by", "ru-kg", "ru-kz", "ru-md", "ru-ru", "ru-ua", "rw", "rw-rw", "rwk", "rwk-tz", "sa", "sa-in", "sah", "sah-ru", "saq", "saq-ke", "sat", "sat-in", "sbp", "sbp-tz", "sd", "sd-in", "sd-pk", "se", "se-fi", "se-no", "se-se", "seh", "seh-mz", "ses", "ses-ml", "sg", "sg-cf", "shi", "shi-ma", "si", "si-lk", "sk", "sk-sk", "sl", "sl-si", "smn", "smn-fi", "sn", "sn-zw", "so", "so-dj", "so-et", "so-ke", "so-so", "sq", "sq-al", "sq-mk", "sq-xk", "sr", "sr-ba", "sr-cs", "sr-me", "sr-rs", "sr-xk", "su", "su-id", "sv", "sv-ax", "sv-fi", "sv-se", "sw", "sw-cd", "sw-ke", "sw-tz", "sw-ug", "sy", "ta", "ta-in", "ta-lk", "ta-my", "ta-sg", "te", "te-in", "teo", "teo-ke", "teo-ug", "tg", "tg-tj", "th", "th-th", "ti", "ti-er", "ti-et", "tk", "tk-tm", "tl", "to", "to-to", "tr", "tr-cy", "tr-tr", "tt", "tt-ru", "twq", "twq-ne", "tzm", "tzm-ma", "ug", "ug-cn", "uk", "uk-ua", "ur", "ur-in", "ur-pk", "uz", "uz-af", "uz-uz", "vai", "vai-lr", "vi", "vi-vn", "vo", "vo-001", "vun", "vun-tz", "wae", "wae-ch", "wo", "wo-sn", "xh", "xh-za", "xog", "xog-ug", "yav", "yav-cm", "yo", "yo-bj", "yo-ng", "yue", "yue-cn", "yue-hk", "zgh", "zgh-ma", "zh", "zh-cn", "zh-hk", "zh-mo", "zh-sg", "zh-tw", "zh-hans", "zh-hant", "zu", "zu-za" ]
          },
          "translatedFromId" : {
            "type" : "string",
            "description" : "ID of the primary page this object was translated from."
          },
          "translations" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/ContentLanguageVariation"
            }
          },
          "dynamicPageHubDbTableId" : {
            "type" : "string",
            "description" : "The ID of the HubDB table this page references, if applicable"
          },
          "dynamicPageDataSourceType" : {
            "type" : "integer",
            "format" : "int32"
          },
          "dynamicPageDataSourceId" : {
            "type" : "string"
          },
          "pageRedirected" : {
            "type" : "boolean",
            "description" : "A generated Boolean describing whether or not this page is currently expired and being redirected."
          },
          "currentlyPublished" : {
            "type" : "boolean"
          },
          "publishImmediately" : {
            "type" : "boolean",
            "description" : "Set this to true if you want to be published immediately when the schedule publish endpoint is called, and to ignore the publish_date setting."
          },
          "linkRelCanonicalUrl" : {
            "type" : "string",
            "description" : "Optional override to set the URL to be used in the rel=canonical link tag on the page."
          },
          "archivedInDashboard" : {
            "type" : "boolean",
            "description" : "If True, the page will not show up in your dashboard, although the page could still be live."
          },
          "currentState" : {
            "type" : "string",
            "description" : "A generated ENUM descibing the current state of this page.",
            "enum" : [ "AUTOMATED", "AUTOMATED_DRAFT", "AUTOMATED_SENDING", "AUTOMATED_FOR_FORM", "AUTOMATED_FOR_FORM_BUFFER", "AUTOMATED_FOR_FORM_DRAFT", "AUTOMATED_FOR_FORM_LEGACY", "BLOG_EMAIL_DRAFT", "BLOG_EMAIL_PUBLISHED", "DRAFT", "DRAFT_AB", "DRAFT_AB_VARIANT", "ERROR", "LOSER_AB_VARIANT", "PAGE_STUB", "PRE_PROCESSING", "PROCESSING", "PUBLISHED", "PUBLISHED_AB", "PUBLISHED_AB_VARIANT", "PUBLISHED_OR_SCHEDULED", "RSS_TO_EMAIL_DRAFT", "RSS_TO_EMAIL_PUBLISHED", "SCHEDULED", "SCHEDULED_AB", "SCHEDULED_OR_PUBLISHED", "AUTOMATED_AB", "AUTOMATED_AB_VARIANT", "AUTOMATED_DRAFT_AB", "AUTOMATED_DRAFT_ABVARIANT", "AUTOMATED_LOSER_ABVARIANT" ]
          },
          "pageExpiryEnabled" : {
            "type" : "boolean",
            "description" : "Boolean describing if the page expiration feature is enabled for this page"
          },
          "pageExpiryRedirectId" : {
            "type" : "integer",
            "description" : "The ID of another page this page's url should redirect to once this page expires. Should only set this or pageExpiryRedirectUrl.",
            "format" : "int64"
          },
          "pageExpiryRedirectUrl" : {
            "type" : "string",
            "description" : "The URL this page's url should redirect to once this page expires. Should only set this or pageExpiryRedirectId."
          },
          "pageExpiryDate" : {
            "type" : "integer",
            "description" : "The date at which this page should expire and begin redirecting to another url or page.",
            "format" : "int64"
          },
          "includeDefaultCustomCss" : {
            "type" : "boolean",
            "description" : "Boolean to determine whether or not the Primary CSS Files should be applied."
          },
          "enableLayoutStylesheets" : {
            "type" : "boolean",
            "description" : "Boolean to determine whether or not the styles from the template should be applied."
          },
          "enableDomainStylesheets" : {
            "type" : "boolean",
            "description" : "Boolean to determine whether or not the styles from the template should be applied."
          },
          "contentTypeCategory" : {
            "type" : "string",
            "description" : "An ENUM descibing the type of this object. Should be either LANDING_PAGE or SITE_PAGE.",
            "enum" : [ "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12" ]
          },
          "layoutSections" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/LayoutSection"
            }
          },
          "htmlTitle" : {
            "type" : "string",
            "description" : "The html title of this page."
          },
          "featuredImageAltText" : {
            "type" : "string",
            "description" : "Alt Text of the featuredImage."
          },
          "publicAccessRulesEnabled" : {
            "type" : "boolean",
            "description" : "Boolean to determine whether or not to respect publicAccessRules."
          },
          "publicAccessRules" : {
            "type" : "array",
            "description" : "Rules for require member registration to access private content.",
            "items" : {
              "$ref" : "#/components/schemas/PublicAccessRule"
            }
          },
          "attachedStylesheets" : {
            "type" : "array",
            "description" : "List of stylesheets to attach to this page. These stylesheets are attached to just this page. Order of precedence is bottom to top, just like in the HTML.",
            "items" : {
              "type" : "object",
              "additionalProperties" : {
                "type" : "object",
                "properties" : { }
              }
            }
          },
          "metaDescription" : {
            "type" : "string",
            "description" : "A description that goes in <meta> tag on the page."
          },
          "headHtml" : {
            "type" : "string",
            "description" : "Custom HTML for embed codes, javascript, etc. that goes in the <head> tag of the page."
          },
          "footerHtml" : {
            "type" : "string",
            "description" : "Custom HTML for embed codes, javascript that should be placed before the </body> tag of the page."
          },
          "featuredImage" : {
            "type" : "string",
            "description" : "The featuredImage of this page."
          },
          "useFeaturedImage" : {
            "type" : "boolean",
            "description" : "Boolean to determine if this page should use a featuredImage."
          },
          "themeSettingsValues" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object",
              "properties" : { }
            }
          },
          "url" : {
            "type" : "string",
            "description" : "A generated field representing the URL of this page."
          },
          "password" : {
            "type" : "string",
            "description" : "Set this to create a password protected page. Entering the password will be required to view the page."
          },
          "publishDate" : {
            "type" : "string",
            "description" : "The date (ISO8601 format) the page is to be published at.",
            "format" : "date-time"
          },
          "created" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updated" : {
            "type" : "string",
            "format" : "date-time"
          },
          "archivedAt" : {
            "type" : "string",
            "description" : "The timestamp (ISO8601 format) when this page was deleted.",
            "format" : "date-time"
          }
        },
        "description" : "Model definition for a landing page or site page."
      },
      "RowMetaData" : {
        "required" : [ "cssClass", "styles" ],
        "type" : "object",
        "properties" : {
          "styles" : {
            "$ref" : "#/components/schemas/Styles"
          },
          "cssClass" : {
            "type" : "string"
          }
        }
      },
      "ContentLanguageVariation" : {
        "required" : [ "archivedInDashboard", "authorName", "campaign", "created", "id", "name", "password", "publicAccessRules", "publicAccessRulesEnabled", "publishDate", "slug", "state", "updated" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int64"
          },
          "name" : {
            "type" : "string"
          },
          "slug" : {
            "type" : "string"
          },
          "state" : {
            "type" : "string"
          },
          "authorName" : {
            "type" : "string"
          },
          "password" : {
            "type" : "string"
          },
          "publicAccessRulesEnabled" : {
            "type" : "boolean"
          },
          "publicAccessRules" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PublicAccessRule"
            }
          },
          "campaign" : {
            "type" : "string"
          },
          "tagIds" : {
            "type" : "array",
            "items" : {
              "type" : "integer",
              "format" : "int64"
            }
          },
          "archivedInDashboard" : {
            "type" : "boolean"
          },
          "created" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updated" : {
            "type" : "string",
            "format" : "date-time"
          },
          "publishDate" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "AttachToLangPrimaryRequestVNext" : {
        "required" : [ "id", "language", "primaryId" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "ID of the object to add to a multi-language group."
          },
          "language" : {
            "type" : "string",
            "description" : "Designated language of the object to add to a multi-language group."
          },
          "primaryId" : {
            "type" : "string",
            "description" : "ID of primary language object in multi-language group."
          },
          "primaryLanguage" : {
            "type" : "string",
            "description" : "Primary language of the multi-language group."
          }
        },
        "description" : "Request body object fro attaching objects to multi-language groups."
      },
      "SideOrCorner" : {
        "required" : [ "horizontalSide", "verticalSide" ],
        "type" : "object",
        "properties" : {
          "verticalSide" : {
            "type" : "string"
          },
          "horizontalSide" : {
            "type" : "string"
          }
        }
      },
      "ErrorDetail" : {
        "required" : [ "message" ],
        "type" : "object",
        "properties" : {
          "message" : {
            "type" : "string",
            "description" : "A human readable message describing the error along with remediation steps where appropriate"
          },
          "in" : {
            "type" : "string",
            "description" : "The name of the field or parameter in which the error was found."
          },
          "code" : {
            "type" : "string",
            "description" : "The status code associated with the error detail"
          },
          "subCategory" : {
            "type" : "string",
            "description" : "A specific category that contains more specific detail about the error"
          },
          "context" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            },
            "description" : "Context about the error condition",
            "example" : {
              "missingScopes" : [ "scope1", "scope2" ]
            }
          }
        }
      },
      "ForwardPaging" : {
        "type" : "object",
        "properties" : {
          "next" : {
            "$ref" : "#/components/schemas/NextPage"
          }
        },
        "description" : "Model definition for forward paging."
      },
      "ContentFolder" : {
        "required" : [ "category", "created", "deletedAt", "id", "name", "parentFolderId", "updated" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "The unique ID of the content folder."
          },
          "name" : {
            "type" : "string",
            "description" : "The name of the folder which will show up in the app dashboard"
          },
          "parentFolderId" : {
            "type" : "integer",
            "description" : "The ID of the content folder this folder is nested under",
            "format" : "int64"
          },
          "category" : {
            "type" : "integer",
            "description" : "The type of object this folder applies to. Should always be LANDING_PAGE.",
            "format" : "int32"
          },
          "created" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updated" : {
            "type" : "string",
            "format" : "date-time"
          },
          "deletedAt" : {
            "type" : "string",
            "description" : "The timestamp (ISO8601 format) when this content folder was deleted.",
            "format" : "date-time"
          }
        },
        "description" : "Model definition for a content folder."
      },
      "BatchResponseContentFolder" : {
        "required" : [ "completedAt", "results", "startedAt", "status" ],
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "enum" : [ "PENDING", "PROCESSING", "CANCELED", "COMPLETE" ]
          },
          "results" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ContentFolder"
            }
          },
          "requestedAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "startedAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "completedAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "links" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          }
        },
        "description" : "Response object for successful batch operations on content folders."
      },
      "CollectionResponseWithTotalPageForwardPaging" : {
        "required" : [ "results", "total" ],
        "type" : "object",
        "properties" : {
          "total" : {
            "type" : "integer",
            "description" : "Total number of pages.",
            "format" : "int32"
          },
          "results" : {
            "type" : "array",
            "description" : "Collection of pages.",
            "items" : {
              "$ref" : "#/components/schemas/Page"
            }
          },
          "paging" : {
            "$ref" : "#/components/schemas/ForwardPaging"
          }
        },
        "description" : "Response object for collections of pages with pagination information."
      },
      "VersionPage" : {
        "required" : [ "id", "object", "updatedAt", "user" ],
        "type" : "object",
        "properties" : {
          "object" : {
            "$ref" : "#/components/schemas/Page"
          },
          "user" : {
            "$ref" : "#/components/schemas/VersionUser"
          },
          "id" : {
            "type" : "string",
            "description" : "ID of this page version."
          },
          "updatedAt" : {
            "type" : "string",
            "format" : "date-time"
          }
        },
        "description" : "Model definition for a landing page or site page version. Contains metadata describing the version of the page. It can be used to view edit history of a page."
      },
      "CollectionResponseWithTotalVersionContentFolder" : {
        "required" : [ "results", "total" ],
        "type" : "object",
        "properties" : {
          "total" : {
            "type" : "integer",
            "description" : "Total number of content folder versions.",
            "format" : "int32"
          },
          "results" : {
            "type" : "array",
            "description" : "Collection of content folder versions.",
            "items" : {
              "$ref" : "#/components/schemas/VersionContentFolder"
            }
          },
          "paging" : {
            "$ref" : "#/components/schemas/Paging"
          }
        },
        "description" : "Response object for collections of content folder versions with pagination information."
      },
      "BatchResponseContentFolderWithErrors" : {
        "required" : [ "completedAt", "results", "startedAt", "status" ],
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "description" : "Status of batch operation.",
            "enum" : [ "PENDING", "PROCESSING", "CANCELED", "COMPLETE" ]
          },
          "results" : {
            "type" : "array",
            "description" : "Results of batch operation.",
            "items" : {
              "$ref" : "#/components/schemas/ContentFolder"
            }
          },
          "numErrors" : {
            "type" : "integer",
            "description" : "Number of errors.",
            "format" : "int32"
          },
          "errors" : {
            "type" : "array",
            "description" : "Errors in batch operation.",
            "items" : {
              "$ref" : "#/components/schemas/StandardError"
            }
          },
          "requestedAt" : {
            "type" : "string",
            "description" : "Time of batch operation request.",
            "format" : "date-time"
          },
          "startedAt" : {
            "type" : "string",
            "description" : "Time of batch operation start.",
            "format" : "date-time"
          },
          "completedAt" : {
            "type" : "string",
            "description" : "Time of batch operation completion.",
            "format" : "date-time"
          },
          "links" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "Links associated with batch operation."
          }
        },
        "description" : "Response object for batch operations on content folders with errors."
      },
      "VersionUser" : {
        "required" : [ "email", "fullName", "id" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "ID of the user."
          },
          "email" : {
            "type" : "string",
            "description" : "Email address of the user."
          },
          "fullName" : {
            "type" : "string",
            "description" : "First and last name of the user."
          }
        },
        "description" : "Model definition for a version user. Contains addition information about the user who created a version."
      },
      "ColorStop" : {
        "required" : [ "color" ],
        "type" : "object",
        "properties" : {
          "color" : {
            "$ref" : "#/components/schemas/RGBAColor"
          }
        }
      },
      "Gradient" : {
        "required" : [ "angle", "colors", "sideOrCorner" ],
        "type" : "object",
        "properties" : {
          "sideOrCorner" : {
            "$ref" : "#/components/schemas/SideOrCorner"
          },
          "angle" : {
            "$ref" : "#/components/schemas/Angle"
          },
          "colors" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ColorStop"
            }
          }
        }
      },
      "CollectionResponseWithTotalVersionPage" : {
        "required" : [ "results", "total" ],
        "type" : "object",
        "properties" : {
          "total" : {
            "type" : "integer",
            "description" : "Total number of page versions.",
            "format" : "int32"
          },
          "results" : {
            "type" : "array",
            "description" : "Collection of page versions.",
            "items" : {
              "$ref" : "#/components/schemas/VersionPage"
            }
          },
          "paging" : {
            "$ref" : "#/components/schemas/Paging"
          }
        },
        "description" : "Response object for collections of page versions with pagination information."
      },
      "BatchInputContentFolder" : {
        "required" : [ "inputs" ],
        "type" : "object",
        "properties" : {
          "inputs" : {
            "type" : "array",
            "description" : "Content folders to input.",
            "items" : {
              "$ref" : "#/components/schemas/ContentFolder"
            }
          }
        },
        "description" : "Wrapper for providing an array of content folders as inputs."
      },
      "BatchResponsePage" : {
        "required" : [ "completedAt", "results", "startedAt", "status" ],
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "enum" : [ "PENDING", "PROCESSING", "CANCELED", "COMPLETE" ]
          },
          "results" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Page"
            }
          },
          "requestedAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "startedAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "completedAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "links" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          }
        },
        "description" : "Response object for successful batch operations on pages."
      },
      "LayoutSection" : {
        "required" : [ "cells", "cssClass", "cssId", "cssStyle", "label", "name", "params", "rowMetaData", "rows", "styles", "type", "w", "x" ],
        "type" : "object",
        "properties" : {
          "x" : {
            "type" : "integer",
            "format" : "int32"
          },
          "w" : {
            "type" : "integer",
            "format" : "int32"
          },
          "name" : {
            "type" : "string"
          },
          "label" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          },
          "params" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object",
              "properties" : { }
            }
          },
          "rows" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "additionalProperties" : {
                "$ref" : "#/components/schemas/LayoutSection"
              }
            }
          },
          "rowMetaData" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/RowMetaData"
            }
          },
          "cells" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/LayoutSection"
            }
          },
          "cssClass" : {
            "type" : "string"
          },
          "cssStyle" : {
            "type" : "string"
          },
          "cssId" : {
            "type" : "string"
          },
          "styles" : {
            "$ref" : "#/components/schemas/Styles"
          }
        }
      },
      "Paging" : {
        "type" : "object",
        "properties" : {
          "next" : {
            "$ref" : "#/components/schemas/NextPage"
          },
          "prev" : {
            "$ref" : "#/components/schemas/PreviousPage"
          }
        },
        "description" : "Model definition for paging."
      },
      "Error" : {
        "required" : [ "category", "correlationId", "message" ],
        "type" : "object",
        "properties" : {
          "message" : {
            "type" : "string",
            "description" : "A human readable message describing the error along with remediation steps where appropriate",
            "example" : "An error occurred"
          },
          "correlationId" : {
            "type" : "string",
            "description" : "A unique identifier for the request. Include this value with any error reports or support tickets",
            "format" : "uuid",
            "example" : "aeb5f871-7f07-4993-9211-075dc63e7cbf"
          },
          "category" : {
            "type" : "string",
            "description" : "The error category"
          },
          "subCategory" : {
            "type" : "string",
            "description" : "A specific category that contains more specific detail about the error"
          },
          "errors" : {
            "type" : "array",
            "description" : "further information about the error",
            "items" : {
              "$ref" : "#/components/schemas/ErrorDetail"
            }
          },
          "context" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            },
            "description" : "Context about the error condition",
            "example" : {
              "invalidPropertyName" : [ "propertyValue" ],
              "missingScopes" : [ "scope1", "scope2" ]
            }
          },
          "links" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "A map of link names to associated URIs containing documentation about the error or recommended remediation steps"
          }
        },
        "example" : {
          "message" : "Invalid input (details will vary based on the error)",
          "correlationId" : "aeb5f871-7f07-4993-9211-075dc63e7cbf",
          "category" : "VALIDATION_ERROR",
          "links" : {
            "knowledge-base" : "https://www.hubspot.com/products/service/knowledge-base"
          }
        }
      },
      "AbTestRerunRequestVNext" : {
        "required" : [ "abTestId", "variationId" ],
        "type" : "object",
        "properties" : {
          "abTestId" : {
            "type" : "string",
            "description" : "ID of the test to rerun."
          },
          "variationId" : {
            "type" : "string",
            "description" : "ID of the object to reactivate as a test variation."
          }
        },
        "description" : "Request body object for rerunning A/B tests."
      },
      "PublicAccessRule" : {
        "type" : "object"
      },
      "AbTestEndRequestVNext" : {
        "required" : [ "abTestId", "winnerId" ],
        "type" : "object",
        "properties" : {
          "abTestId" : {
            "type" : "string",
            "description" : "ID of the test to end."
          },
          "winnerId" : {
            "type" : "string",
            "description" : "ID of the object to designate as the test winner."
          }
        },
        "description" : "Request body object for ending A/B tests."
      },
      "BackgroundImage" : {
        "required" : [ "backgroundPosition", "backgroundSize", "imageUrl" ],
        "type" : "object",
        "properties" : {
          "imageUrl" : {
            "type" : "string"
          },
          "backgroundSize" : {
            "type" : "string"
          },
          "backgroundPosition" : {
            "type" : "string"
          }
        }
      },
      "Angle" : {
        "required" : [ "units", "value" ],
        "type" : "object",
        "properties" : {
          "value" : {
            "type" : "number"
          },
          "units" : {
            "type" : "string"
          }
        }
      },
      "PreviousPage" : {
        "required" : [ "before" ],
        "type" : "object",
        "properties" : {
          "before" : {
            "type" : "string"
          },
          "link" : {
            "type" : "string"
          }
        },
        "description" : "Model definition for a previous page"
      },
      "ContentScheduleRequestVNext" : {
        "required" : [ "id", "publishDate" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "The ID of the object to be scheduled."
          },
          "publishDate" : {
            "type" : "string",
            "description" : "The date the object should transition from scheduled to published.",
            "format" : "date-time"
          }
        },
        "description" : "Request body object for scheduling the publish of content"
      },
      "BatchInputPage" : {
        "required" : [ "inputs" ],
        "type" : "object",
        "properties" : {
          "inputs" : {
            "type" : "array",
            "description" : "Pages to input.",
            "items" : {
              "$ref" : "#/components/schemas/Page"
            }
          }
        },
        "description" : "Wrapper for providing an array of pages as inputs."
      },
      "VersionContentFolder" : {
        "required" : [ "id", "object", "updatedAt", "user" ],
        "type" : "object",
        "properties" : {
          "object" : {
            "$ref" : "#/components/schemas/ContentFolder"
          },
          "user" : {
            "$ref" : "#/components/schemas/VersionUser"
          },
          "id" : {
            "type" : "string",
            "description" : "ID of this folder version."
          },
          "updatedAt" : {
            "type" : "string",
            "format" : "date-time"
          }
        },
        "description" : "Model definition for a content folder version. Contains metadata describing the version of the folder. It can be used to view edit history of a folder."
      },
      "ContentCloneRequestVNext" : {
        "required" : [ "id" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "ID of the object to be cloned."
          },
          "cloneName" : {
            "type" : "string",
            "description" : "Name of the cloned object."
          }
        },
        "description" : "Request body object for cloning content."
      },
      "NextPage" : {
        "required" : [ "after" ],
        "type" : "object",
        "properties" : {
          "after" : {
            "type" : "string"
          },
          "link" : {
            "type" : "string"
          }
        },
        "description" : "Model definition for a next page."
      },
      "Styles" : {
        "required" : [ "backgroundColor", "backgroundGradient", "backgroundImage", "flexboxPositioning", "forceFullWidthSection", "maxWidthSectionCentering", "verticalAlignment" ],
        "type" : "object",
        "properties" : {
          "verticalAlignment" : {
            "type" : "string"
          },
          "backgroundColor" : {
            "$ref" : "#/components/schemas/RGBAColor"
          },
          "backgroundImage" : {
            "$ref" : "#/components/schemas/BackgroundImage"
          },
          "backgroundGradient" : {
            "$ref" : "#/components/schemas/Gradient"
          },
          "maxWidthSectionCentering" : {
            "type" : "integer",
            "format" : "int32"
          },
          "forceFullWidthSection" : {
            "type" : "boolean"
          },
          "flexboxPositioning" : {
            "type" : "string"
          }
        }
      }
    },
    "responses" : {
      "Error" : {
        "description" : "An error occurred.",
        "content" : {
          "*/*" : {
            "schema" : {
              "$ref" : "#/components/schemas/Error"
            }
          }
        }
      }
    },
    "securitySchemes" : {
      "oauth2_legacy" : {
        "type" : "oauth2",
        "flows" : {
          "authorizationCode" : {
            "authorizationUrl" : "https://app.hubspot.com/oauth/authorize",
            "tokenUrl" : "https://api.hubapi.com/oauth/v1/token",
            "scopes" : {
              "content" : "Read from and write to my Content"
            }
          }
        }
      },
      "private_apps_legacy" : {
        "type" : "apiKey",
        "name" : "private-app-legacy",
        "in" : "header"
      }
    }
  }
}