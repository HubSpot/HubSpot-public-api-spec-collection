{
  "openapi" : "3.0.1",
  "info" : {
    "title" : "Marketing Events",
    "version" : "v3",
    "x-hubspot-product-tier-requirements" : {
      "marketing" : "FREE",
      "cms" : "STARTER"
    },
    "x-hubspot-documentation-banner" : "NONE",
    "x-hubspot-api-use-case" : "You have an external system that handles registration for your webinars and you want to ensure that attendee data and behavior is synced with your HubSpot CRM.",
    "x-hubspot-related-documentation" : [ {
      "name" : "Marketing Events Guide",
      "url" : "https://developers.hubspot.com/beta-docs/guides/api/marketing/marketing-events"
    } ],
    "x-hubspot-introduction" : "The marketing events API allows you to build a custom integration that will sync event and registration data with your HubSpot account.The marketing events API allows you to build a custom integration that will sync event and registration data with your HubSpot account."
  },
  "servers" : [ {
    "url" : "https://api.hubapi.com"
  } ],
  "tags" : [ {
    "name" : "Attendance Subscriber State Changes"
  }, {
    "name" : "Participant State"
  }, {
    "name" : "Subscriber State Changes"
  }, {
    "name" : "Basic"
  }, {
    "name" : "Settings"
  } ],
  "paths" : {
    "/marketing/v3/marketing-events/attendance/{externalEventId}/{subscriberState}/create" : {
      "post" : {
        "tags" : [ "Attendance Subscriber State Changes" ],
        "summary" : "Record a subscriber state by contact ids",
        "description" : "Record a subscriber state between multiple HubSpot contacts and a marketing event, using HubSpot contact ids.",
        "operationId" : "post-/marketing/v3/marketing-events/attendance/{externalEventId}/{subscriberState}/create_createByContactId",
        "parameters" : [ {
          "name" : "externalEventId",
          "in" : "path",
          "description" : "The id of the marketing event",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriberState",
          "in" : "path",
          "description" : "The new subscriber state for the HubSpot contacts and the specified marketing event. For example: 'register', 'attend' or 'cancel'.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "externalAccountId",
          "in" : "query",
          "description" : "The account id associated with the marketing event",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BatchInputMarketingEventSubscriber"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BatchResponseSubscriberVidResponse"
                }
              }
            }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "private_apps_legacy" : [ "crm.objects.marketing_events.write" ]
        }, {
          "oauth2_legacy" : [ "crm.objects.marketing_events.write" ]
        } ]
      }
    },
    "/marketing/v3/marketing-events/participations/{marketingEventId}/breakdown" : {
      "get" : {
        "tags" : [ "Participant State" ],
        "summary" : "Read participations breakdown by Marketing Event internal identifier",
        "description" : "Read Marketing event's participations breakdown with optional filters by internal identifier marketingEventId.",
        "operationId" : "get-/marketing/v3/marketing-events/participations/{marketingEventId}/breakdown_getParticipationsBreakdownByMarketingEventId",
        "parameters" : [ {
          "name" : "marketingEventId",
          "in" : "path",
          "description" : "The internal id of the marketing event in HubSpot.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "contactIdentifier",
          "in" : "query",
          "description" : "The identifier of the Contact. It may be email or internal id.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "state",
          "in" : "query",
          "description" : "The participation state value. It may be REGISTERED, CANCELLED, ATTENDED, NO_SHOW",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "The limit for response size. The default value is 10, the max number is 100",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 10
          }
        }, {
          "name" : "after",
          "in" : "query",
          "description" : "The cursor indicating the position of the last retrieved item.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CollectionResponseWithTotalParticipationBreakdownForwardPaging"
                }
              }
            }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "oauth2_legacy" : [ "crm.objects.marketing_events.read" ]
        }, {
          "private_apps_legacy" : [ "crm.objects.marketing_events.read" ]
        } ]
      }
    },
    "/marketing/v3/marketing-events/events/{externalEventId}/{subscriberState}/upsert" : {
      "post" : {
        "tags" : [ "Subscriber State Changes" ],
        "summary" : "Record a subscriber state by contact ID",
        "description" : "Record a subscriber state between multiple HubSpot contacts and a marketing event, using HubSpot contact IDs. Note that the contact must already exist in HubSpot; a contact will not be created.",
        "operationId" : "post-/marketing/v3/marketing-events/events/{externalEventId}/{subscriberState}/upsert_upsertByContactId",
        "parameters" : [ {
          "name" : "externalEventId",
          "in" : "path",
          "description" : "The ID of the marketing event",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriberState",
          "in" : "path",
          "description" : "The new subscriber state for the HubSpot contacts and the specified marketing event. For example: 'register', 'attend' or 'cancel'.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "externalAccountId",
          "in" : "query",
          "description" : "The account ID associated with the marketing event",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BatchInputMarketingEventSubscriber"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "private_apps_legacy" : [ "crm.objects.marketing_events.write" ]
        }, {
          "oauth2_legacy" : [ "crm.objects.marketing_events.write" ]
        } ]
      }
    },
    "/marketing/v3/marketing-events/participations/{externalAccountId}/{externalEventId}" : {
      "get" : {
        "tags" : [ "Participant State" ],
        "summary" : "Read participations counters by Marketing Event external identifier",
        "description" : "Read Marketing event's participations counters by externalAccountId and externalEventId pair.",
        "operationId" : "get-/marketing/v3/marketing-events/participations/{externalAccountId}/{externalEventId}_getParticipationsCountersByEventExternalId",
        "parameters" : [ {
          "name" : "externalAccountId",
          "in" : "path",
          "description" : "The accountId that is associated with this marketing event in the external event application.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "externalEventId",
          "in" : "path",
          "description" : "The id of the marketing event in the external event application.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AttendanceCounters"
                }
              }
            }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "oauth2_legacy" : [ "crm.objects.marketing_events.read" ]
        }, {
          "private_apps_legacy" : [ "crm.objects.marketing_events.read" ]
        } ]
      }
    },
    "/marketing/v3/marketing-events/participations/{marketingEventId}" : {
      "get" : {
        "tags" : [ "Participant State" ],
        "summary" : "Read participations counters by Marketing Event internal identifier",
        "description" : "Read Marketing event's participations counters by internal identifier marketingEventId.",
        "operationId" : "get-/marketing/v3/marketing-events/participations/{marketingEventId}_getParticipationsCountersByMarketingEventId",
        "parameters" : [ {
          "name" : "marketingEventId",
          "in" : "path",
          "description" : "The internal id of the marketing event in HubSpot.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AttendanceCounters"
                }
              }
            }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "oauth2_legacy" : [ "crm.objects.marketing_events.read" ]
        }, {
          "private_apps_legacy" : [ "crm.objects.marketing_events.read" ]
        } ]
      }
    },
    "/marketing/v3/marketing-events/events/delete" : {
      "post" : {
        "tags" : [ "Basic" ],
        "summary" : "Delete multiple marketing events",
        "description" : "Bulk delete a number of marketing events in HubSpot",
        "operationId" : "post-/marketing/v3/marketing-events/events/delete_batchArchive",
        "parameters" : [ ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BatchInputMarketingEventExternalUniqueIdentifier"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "private_apps_legacy" : [ "crm.objects.marketing_events.write" ]
        }, {
          "oauth2_legacy" : [ "crm.objects.marketing_events.write" ]
        } ]
      }
    },
    "/marketing/v3/marketing-events/events/{externalEventId}/cancel" : {
      "post" : {
        "tags" : [ "Basic" ],
        "summary" : "Mark a marketing event as cancelled",
        "description" : "Mark a marketing event as cancelled.",
        "operationId" : "post-/marketing/v3/marketing-events/events/{externalEventId}/cancel_cancel",
        "parameters" : [ {
          "name" : "externalEventId",
          "in" : "path",
          "description" : "The id of the marketing event to mark as cancelled",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "externalAccountId",
          "in" : "query",
          "description" : "The account id associated with the marketing event",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MarketingEventDefaultResponse"
                }
              }
            }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "private_apps_legacy" : [ "crm.objects.marketing_events.write" ]
        }, {
          "oauth2_legacy" : [ "crm.objects.marketing_events.write" ]
        } ]
      }
    },
    "/marketing/v3/marketing-events/events/{externalEventId}" : {
      "get" : {
        "tags" : [ "Basic" ],
        "summary" : "Get a marketing event",
        "description" : "Returns the details of the Marketing Event with the specified id, if one exists.",
        "operationId" : "get-/marketing/v3/marketing-events/events/{externalEventId}_getDetails",
        "parameters" : [ {
          "name" : "externalEventId",
          "in" : "path",
          "description" : "The id of the marketing event to return",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "externalAccountId",
          "in" : "query",
          "description" : "The account id associated with the marketing event",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MarketingEventPublicReadResponse"
                }
              }
            }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "oauth2_legacy" : [ "crm.objects.marketing_events.read" ]
        }, {
          "private_apps_legacy" : [ "crm.objects.marketing_events.read" ]
        } ]
      },
      "put" : {
        "tags" : [ "Basic" ],
        "summary" : "Create or update a marketing event",
        "description" : "Upserts a marketing event If there is an existing marketing event with the specified ID, it will be updated; otherwise a new event will be created.",
        "operationId" : "put-/marketing/v3/marketing-events/events/{externalEventId}_upsert",
        "parameters" : [ {
          "name" : "externalEventId",
          "in" : "path",
          "description" : "The ID of the marketing event to upsert",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/MarketingEventCreateRequestParams"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MarketingEventPublicDefaultResponse"
                }
              }
            }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "private_apps_legacy" : [ "crm.objects.marketing_events.write" ]
        }, {
          "oauth2_legacy" : [ "crm.objects.marketing_events.write" ]
        } ]
      },
      "delete" : {
        "tags" : [ "Basic" ],
        "summary" : "Delete a marketing event",
        "description" : "Deletes an existing Marketing Event with the specified id, if one exists.",
        "operationId" : "delete-/marketing/v3/marketing-events/events/{externalEventId}_archive",
        "parameters" : [ {
          "name" : "externalEventId",
          "in" : "path",
          "description" : "The id of the marketing event to delete",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "externalAccountId",
          "in" : "query",
          "description" : "The account id associated with the marketing event",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "No content",
            "content" : { }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "private_apps_legacy" : [ "crm.objects.marketing_events.write" ]
        }, {
          "oauth2_legacy" : [ "crm.objects.marketing_events.write" ]
        } ]
      },
      "patch" : {
        "tags" : [ "Basic" ],
        "summary" : "Update a marketing event",
        "description" : "Updates an existing Marketing Event with the specified id, if one exists.",
        "operationId" : "patch-/marketing/v3/marketing-events/events/{externalEventId}_update",
        "parameters" : [ {
          "name" : "externalEventId",
          "in" : "path",
          "description" : "The id of the marketing event to update",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "externalAccountId",
          "in" : "query",
          "description" : "The account id associated with the marketing event",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/MarketingEventUpdateRequestParams"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MarketingEventPublicDefaultResponse"
                }
              }
            }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "private_apps_legacy" : [ "crm.objects.marketing_events.write" ]
        }, {
          "oauth2_legacy" : [ "crm.objects.marketing_events.write" ]
        } ]
      }
    },
    "/marketing/v3/marketing-events/events/upsert" : {
      "post" : {
        "tags" : [ "Basic" ],
        "summary" : "Create or update multiple marketing events",
        "description" : "Upsert multiple marketing events. If there is an existing Marketing event with the specified ID, it will be updated; otherwise a new event will be created.",
        "operationId" : "post-/marketing/v3/marketing-events/events/upsert_batchUpsert",
        "parameters" : [ ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BatchInputMarketingEventCreateRequestParams"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BatchResponseMarketingEventPublicDefaultResponse"
                }
              }
            }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "private_apps_legacy" : [ "crm.objects.marketing_events.write" ]
        }, {
          "oauth2_legacy" : [ "crm.objects.marketing_events.write" ]
        } ]
      }
    },
    "/marketing/v3/marketing-events/attendance/{externalEventId}/{subscriberState}/email-create" : {
      "post" : {
        "tags" : [ "Attendance Subscriber State Changes" ],
        "summary" : "Record a subscriber state by contact email",
        "description" : "Record a subscriber state between multiple HubSpot contacts and a marketing event, using contact email addresses. If contact is not present it will be automatically created.\nThe contactProperties field is used only when creating a new contact. These properties will not update existing contacts. ",
        "operationId" : "post-/marketing/v3/marketing-events/attendance/{externalEventId}/{subscriberState}/email-create_createByContactEmail",
        "parameters" : [ {
          "name" : "externalEventId",
          "in" : "path",
          "description" : "The id of the marketing event",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriberState",
          "in" : "path",
          "description" : "The new subscriber state for the HubSpot contacts and the specified marketing event. For example: 'register', 'attend' or 'cancel'.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "externalAccountId",
          "in" : "query",
          "description" : "The account id associated with the marketing event",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BatchInputMarketingEventEmailSubscriber"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BatchResponseSubscriberEmailResponse"
                }
              }
            }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "private_apps_legacy" : [ "crm.objects.marketing_events.write" ]
        }, {
          "oauth2_legacy" : [ "crm.objects.marketing_events.write" ]
        } ]
      }
    },
    "/marketing/v3/marketing-events/events/{externalEventId}/{subscriberState}/email-upsert" : {
      "post" : {
        "tags" : [ "Subscriber State Changes" ],
        "summary" : "Record a subscriber state by contact email",
        "description" : "Record a subscriber state between multiple HubSpot contacts and a marketing event, using contact email addresses. Note that the contact must already exist in HubSpot; a contact will not be created. The contactProperties field is used only when creating a new contact. These properties will not update existing contacts. ",
        "operationId" : "post-/marketing/v3/marketing-events/events/{externalEventId}/{subscriberState}/email-upsert_upsertByContactEmail",
        "parameters" : [ {
          "name" : "externalEventId",
          "in" : "path",
          "description" : "The ID of the marketing event",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriberState",
          "in" : "path",
          "description" : "The new subscriber state for the HubSpot contacts and the specified marketing event. For example: 'register', 'attend' or 'cancel'.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "externalAccountId",
          "in" : "query",
          "description" : "The account ID associated with the marketing event",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BatchInputMarketingEventEmailSubscriber"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "private_apps_legacy" : [ "crm.objects.marketing_events.write" ]
        }, {
          "oauth2_legacy" : [ "crm.objects.marketing_events.write" ]
        } ]
      }
    },
    "/marketing/v3/marketing-events/participations/{externalAccountId}/{externalEventId}/breakdown" : {
      "get" : {
        "tags" : [ "Participant State" ],
        "summary" : "Read participations breakdown by Marketing Event external identifier",
        "description" : "Read Marketing event's participations breakdown with optional filters by externalAccountId and externalEventId pair.",
        "operationId" : "get-/marketing/v3/marketing-events/participations/{externalAccountId}/{externalEventId}/breakdown_getParticipationsBreakdownByExternalEventId",
        "parameters" : [ {
          "name" : "externalAccountId",
          "in" : "path",
          "description" : "The accountId that is associated with this marketing event in the external event application.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "externalEventId",
          "in" : "path",
          "description" : "The id of the marketing event in the external event application.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "contactIdentifier",
          "in" : "query",
          "description" : "The identifier of the Contact. It may be email or internal id.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "state",
          "in" : "query",
          "description" : "The participation state value. It may be REGISTERED, CANCELLED, ATTENDED, NO_SHOW",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "The limit for response size. The default value is 10, the max number is 100",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 10
          }
        }, {
          "name" : "after",
          "in" : "query",
          "description" : "The cursor indicating the position of the last retrieved item.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CollectionResponseWithTotalParticipationBreakdownForwardPaging"
                }
              }
            }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "oauth2_legacy" : [ "crm.objects.marketing_events.read" ]
        }, {
          "private_apps_legacy" : [ "crm.objects.marketing_events.read" ]
        } ]
      }
    },
    "/marketing/v3/marketing-events/events/{externalEventId}/complete" : {
      "post" : {
        "tags" : [ "Basic" ],
        "summary" : "Mark a marketing event as completed",
        "description" : "Mark a marketing event as completed",
        "operationId" : "post-/marketing/v3/marketing-events/events/{externalEventId}/complete_complete",
        "parameters" : [ {
          "name" : "externalEventId",
          "in" : "path",
          "description" : "The id of the marketing event in the external event application.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "externalAccountId",
          "in" : "query",
          "description" : "The accountId that is associated with this marketing event in the external event application.",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/MarketingEventCompleteRequestParams"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MarketingEventDefaultResponse"
                }
              }
            }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "private_apps_legacy" : [ "crm.objects.marketing_events.write" ]
        }, {
          "oauth2_legacy" : [ "crm.objects.marketing_events.write" ]
        } ]
      }
    },
    "/marketing/v3/marketing-events/events" : {
      "post" : {
        "tags" : [ "Basic" ],
        "summary" : "Create a marketing event",
        "description" : "Creates a new marketing event in HubSpot",
        "operationId" : "post-/marketing/v3/marketing-events/events_create",
        "parameters" : [ ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/MarketingEventCreateRequestParams"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MarketingEventDefaultResponse"
                }
              }
            }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "private_apps_legacy" : [ "crm.objects.marketing_events.write" ]
        }, {
          "oauth2_legacy" : [ "crm.objects.marketing_events.write" ]
        } ]
      }
    },
    "/marketing/v3/marketing-events/participations/contacts/{contactIdentifier}/breakdown" : {
      "get" : {
        "tags" : [ "Participant State" ],
        "summary" : "Read participations breakdown by Contact identifier",
        "description" : "Read Contact's participations by identifier - email or internal id.",
        "operationId" : "get-/marketing/v3/marketing-events/participations/contacts/{contactIdentifier}/breakdown_getParticipationsBreakdownByContactId",
        "parameters" : [ {
          "name" : "contactIdentifier",
          "in" : "path",
          "description" : "The identifier of the Contact. It may be email or internal id.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "state",
          "in" : "query",
          "description" : "The participation state value. It may be REGISTERED, CANCELLED, ATTENDED, NO_SHOW",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "The limit for response size. The default value is 10, the max number is 100",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 10
          }
        }, {
          "name" : "after",
          "in" : "query",
          "description" : "The cursor indicating the position of the last retrieved item.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CollectionResponseWithTotalParticipationBreakdownForwardPaging"
                }
              }
            }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "oauth2_legacy" : [ "crm.objects.marketing_events.read" ]
        }, {
          "private_apps_legacy" : [ "crm.objects.marketing_events.read" ]
        } ]
      }
    },
    "/marketing/v3/marketing-events/{appId}/settings" : {
      "get" : {
        "tags" : [ "Settings" ],
        "summary" : "Retrieve the application settings",
        "description" : "Retrieve the current settings for the application.",
        "operationId" : "get-/marketing/v3/marketing-events/{appId}/settings_getAll",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The id of the application to retrieve the settings for.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EventDetailSettings"
                }
              }
            }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "developer_hapikey" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "Settings" ],
        "summary" : "Update the application settings",
        "description" : "Create or update the current settings for the application.",
        "operationId" : "post-/marketing/v3/marketing-events/{appId}/settings_update",
        "parameters" : [ {
          "name" : "appId",
          "in" : "path",
          "description" : "The id of the application to update the settings for.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/EventDetailSettingsUrl"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EventDetailSettings"
                }
              }
            }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "developer_hapikey" : [ ]
        } ]
      }
    },
    "/marketing/v3/marketing-events/events/search" : {
      "get" : {
        "tags" : [ "Basic" ],
        "summary" : "Search for marketing events",
        "description" : "Search for marketing events that have an event id that starts with the query string",
        "operationId" : "get-/marketing/v3/marketing-events/events/search_doSearch",
        "parameters" : [ {
          "name" : "q",
          "in" : "query",
          "description" : "The id of the marketing event in the external event application",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CollectionResponseMarketingEventExternalUniqueIdentifierNoPaging"
                }
              }
            }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "oauth2_legacy" : [ "crm.objects.marketing_events.read" ]
        }, {
          "private_apps_legacy" : [ "crm.objects.marketing_events.read" ]
        } ]
      }
    }
  },
  "components" : {
    "schemas" : {
      "CollectionResponseMarketingEventExternalUniqueIdentifierNoPaging" : {
        "required" : [ "results" ],
        "type" : "object",
        "properties" : {
          "results" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/MarketingEventExternalUniqueIdentifier"
            }
          }
        }
      },
      "StandardError" : {
        "required" : [ "category", "context", "errors", "links", "message", "status" ],
        "type" : "object",
        "properties" : {
          "subCategory" : {
            "type" : "object",
            "properties" : { },
            "description" : ""
          },
          "context" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            },
            "description" : ""
          },
          "links" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : ""
          },
          "id" : {
            "type" : "string",
            "description" : ""
          },
          "category" : {
            "type" : "string",
            "description" : ""
          },
          "message" : {
            "type" : "string",
            "description" : ""
          },
          "errors" : {
            "type" : "array",
            "description" : "",
            "items" : {
              "$ref" : "#/components/schemas/ErrorDetail"
            }
          },
          "status" : {
            "type" : "string",
            "description" : ""
          }
        }
      },
      "MarketingEventCreateRequestParams" : {
        "required" : [ "eventName", "eventOrganizer", "externalAccountId", "externalEventId" ],
        "type" : "object",
        "properties" : {
          "startDateTime" : {
            "type" : "string",
            "description" : "The start date and time of the marketing event.",
            "format" : "date-time"
          },
          "customProperties" : {
            "type" : "array",
            "description" : "A list of PropertyValues. These can be whatever kind of property names and values you want. However, they must already exist on the HubSpot account's definition of the MarketingEvent Object. If they don't they will be filtered out and not set.\nIn order to do this you'll need to create a new PropertyGroup on the HubSpot account's MarketingEvent object for your specific app and create the Custom Property you want to track on that HubSpot account. Do not create any new default properties on the MarketingEvent object as that will apply to all HubSpot accounts.\n",
            "items" : {
              "$ref" : "#/components/schemas/PropertyValue"
            }
          },
          "externalAccountId" : {
            "type" : "string",
            "description" : "The accountId that is associated with this marketing event in the external event application."
          },
          "eventCancelled" : {
            "type" : "boolean",
            "description" : "Indicates if the marketing event has been cancelled.  Defaults to `false`"
          },
          "eventOrganizer" : {
            "type" : "string",
            "description" : "The name of the organizer of the marketing event."
          },
          "eventUrl" : {
            "type" : "string",
            "description" : "A URL in the external event application where the marketing event can be managed."
          },
          "externalEventId" : {
            "type" : "string",
            "description" : "The id of the marketing event in the external event application."
          },
          "eventDescription" : {
            "type" : "string",
            "description" : "The description of the marketing event."
          },
          "eventName" : {
            "type" : "string",
            "description" : "The name of the marketing event."
          },
          "eventType" : {
            "type" : "string",
            "description" : "Describes what type of event this is.  For example: `WEBINAR`, `CONFERENCE`, `WORKSHOP`"
          },
          "eventCompleted" : {
            "type" : "boolean"
          },
          "endDateTime" : {
            "type" : "string",
            "description" : "The end date and time of the marketing event.",
            "format" : "date-time"
          }
        }
      },
      "MarketingEventCompleteRequestParams" : {
        "required" : [ "endDateTime", "startDateTime" ],
        "type" : "object",
        "properties" : {
          "startDateTime" : {
            "type" : "string",
            "format" : "date-time"
          },
          "endDateTime" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "ParticipationProperties" : {
        "required" : [ "attendanceState", "occurredAt" ],
        "type" : "object",
        "properties" : {
          "occurredAt" : {
            "type" : "integer",
            "format" : "int64"
          },
          "attendancePercentage" : {
            "type" : "string"
          },
          "attendanceState" : {
            "type" : "string",
            "enum" : [ "REGISTERED", "ATTENDED", "CANCELLED", "EMPTY", "NO_SHOW" ]
          },
          "attendanceDurationSeconds" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "SubscriberEmailResponse" : {
        "required" : [ "email", "vid" ],
        "type" : "object",
        "properties" : {
          "vid" : {
            "type" : "integer",
            "format" : "int32"
          },
          "email" : {
            "type" : "string"
          }
        }
      },
      "EventDetailSettings" : {
        "required" : [ "appId", "eventDetailsUrl" ],
        "type" : "object",
        "properties" : {
          "appId" : {
            "type" : "integer",
            "description" : "The id of the application the settings are for",
            "format" : "int32"
          },
          "eventDetailsUrl" : {
            "type" : "string",
            "description" : "The url that will be used to fetch marketing event details by id"
          }
        }
      },
      "MarketingEventPublicReadResponse" : {
        "required" : [ "attendees", "cancellations", "createdAt", "eventName", "eventOrganizer", "externalEventId", "id", "noShows", "registrants", "updatedAt" ],
        "type" : "object",
        "properties" : {
          "registrants" : {
            "type" : "integer",
            "description" : "The number of HubSpot contacts that registered for this marketing event.",
            "format" : "int32"
          },
          "eventOrganizer" : {
            "type" : "string",
            "description" : "The name of the organizer of the marketing event."
          },
          "eventUrl" : {
            "type" : "string",
            "description" : "A URL in the external event application where the marketing event can be managed."
          },
          "attendees" : {
            "type" : "integer",
            "description" : "The number of HubSpot contacts that attended this marketing event.",
            "format" : "int32"
          },
          "eventType" : {
            "type" : "string",
            "description" : "The type of the marketing event."
          },
          "eventCompleted" : {
            "type" : "boolean"
          },
          "endDateTime" : {
            "type" : "string",
            "description" : "The end date and time of the marketing event.",
            "format" : "date-time"
          },
          "noShows" : {
            "type" : "integer",
            "description" : "The number of HubSpot contacts that registered for this marketing event, but did not attend. This field only had a value when the event is over.",
            "format" : "int32"
          },
          "cancellations" : {
            "type" : "integer",
            "description" : "The number of HubSpot contacts that registered for this marketing event, but later cancelled their registration.",
            "format" : "int32"
          },
          "createdAt" : {
            "type" : "string",
            "description" : "",
            "format" : "date-time"
          },
          "startDateTime" : {
            "type" : "string",
            "description" : "The start date and time of the marketing event.",
            "format" : "date-time"
          },
          "customProperties" : {
            "type" : "array",
            "description" : "A list of PropertyValues. These can be whatever kind of property names and values you want. However, they must already exist on the HubSpot account's definition of the MarketingEvent Object. If they don't they will be filtered out and not set.\nIn order to do this you'll need to create a new PropertyGroup on the HubSpot account's MarketingEvent object for your specific app and create the Custom Property you want to track on that HubSpot account. Do not create any new default properties on the MarketingEvent object as that will apply to all HubSpot accounts.\n",
            "items" : {
              "$ref" : "#/components/schemas/PropertyValue"
            }
          },
          "eventCancelled" : {
            "type" : "boolean",
            "description" : "Indicates if the marketing event has been cancelled."
          },
          "externalEventId" : {
            "type" : "string",
            "description" : "The id of the marketing event in the external event application."
          },
          "eventDescription" : {
            "type" : "string",
            "description" : "The description of the marketing event."
          },
          "eventName" : {
            "type" : "string",
            "description" : "The name of the marketing event."
          },
          "id" : {
            "type" : "string",
            "description" : ""
          },
          "updatedAt" : {
            "type" : "string",
            "description" : "",
            "format" : "date-time"
          }
        }
      },
      "MarketingEventAssociation" : {
        "required" : [ "marketingEventId", "name" ],
        "type" : "object",
        "properties" : {
          "externalAccountId" : {
            "type" : "string"
          },
          "marketingEventId" : {
            "type" : "string"
          },
          "externalEventId" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          }
        }
      },
      "MarketingEventSubscriber" : {
        "required" : [ "interactionDateTime" ],
        "type" : "object",
        "properties" : {
          "vid" : {
            "type" : "integer",
            "format" : "int32"
          },
          "properties" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "interactionDateTime" : {
            "type" : "integer",
            "description" : "The date and time at which the contact subscribed to the event.",
            "format" : "int64"
          }
        }
      },
      "ErrorDetail" : {
        "required" : [ "message" ],
        "type" : "object",
        "properties" : {
          "subCategory" : {
            "type" : "string",
            "description" : "A specific category that contains more specific detail about the error"
          },
          "code" : {
            "type" : "string",
            "description" : "The status code associated with the error detail"
          },
          "in" : {
            "type" : "string",
            "description" : "The name of the field or parameter in which the error was found."
          },
          "context" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            },
            "description" : "Context about the error condition",
            "example" : {
              "missingScopes" : [ "scope1", "scope2" ]
            }
          },
          "message" : {
            "type" : "string",
            "description" : "A human readable message describing the error along with remediation steps where appropriate"
          }
        }
      },
      "MarketingEventEmailSubscriber" : {
        "required" : [ "email", "interactionDateTime" ],
        "type" : "object",
        "properties" : {
          "contactProperties" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "properties" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "email" : {
            "type" : "string",
            "description" : "The email address of the contact in HubSpot to associate with the event."
          },
          "interactionDateTime" : {
            "type" : "integer",
            "description" : "The date and time at which the contact subscribed to the event.",
            "format" : "int64"
          }
        }
      },
      "ForwardPaging" : {
        "type" : "object",
        "properties" : {
          "next" : {
            "$ref" : "#/components/schemas/NextPage"
          }
        }
      },
      "EventDetailSettingsUrl" : {
        "required" : [ "eventDetailsUrl" ],
        "type" : "object",
        "properties" : {
          "eventDetailsUrl" : {
            "type" : "string",
            "description" : "The url that will be used to fetch marketing event details by id. Must contain a `%s` character sequence that will be substituted with the event id. For example: `https://my.event.app/events/%s`"
          }
        }
      },
      "BatchInputMarketingEventEmailSubscriber" : {
        "required" : [ "inputs" ],
        "type" : "object",
        "properties" : {
          "inputs" : {
            "type" : "array",
            "description" : "List of marketing event details to create or update",
            "items" : {
              "$ref" : "#/components/schemas/MarketingEventEmailSubscriber"
            }
          }
        }
      },
      "MarketingEventExternalUniqueIdentifier" : {
        "required" : [ "appId", "externalAccountId", "externalEventId" ],
        "type" : "object",
        "properties" : {
          "externalAccountId" : {
            "type" : "string",
            "description" : "The accountId that is associated with this marketing event in the external event application."
          },
          "externalEventId" : {
            "type" : "string",
            "description" : "The id of the marketing event in the external event application."
          },
          "appId" : {
            "type" : "integer",
            "description" : "The id of the application that created the marketing event in HubSpot.",
            "format" : "int32"
          }
        }
      },
      "SubscriberVidResponse" : {
        "required" : [ "vid" ],
        "type" : "object",
        "properties" : {
          "vid" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "BatchInputMarketingEventCreateRequestParams" : {
        "required" : [ "inputs" ],
        "type" : "object",
        "properties" : {
          "inputs" : {
            "type" : "array",
            "description" : "",
            "items" : {
              "$ref" : "#/components/schemas/MarketingEventCreateRequestParams"
            }
          }
        }
      },
      "Error" : {
        "required" : [ "category", "correlationId", "message" ],
        "type" : "object",
        "properties" : {
          "subCategory" : {
            "type" : "string",
            "description" : "A specific category that contains more specific detail about the error"
          },
          "context" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            },
            "description" : "Context about the error condition",
            "example" : {
              "missingScopes" : [ "scope1", "scope2" ],
              "invalidPropertyName" : [ "propertyValue" ]
            }
          },
          "correlationId" : {
            "type" : "string",
            "description" : "A unique identifier for the request. Include this value with any error reports or support tickets",
            "format" : "uuid",
            "example" : "aeb5f871-7f07-4993-9211-075dc63e7cbf"
          },
          "links" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "A map of link names to associated URIs containing documentation about the error or recommended remediation steps",
            "example" : {
              "knowledge-base" : "https://www.hubspot.com/products/service/knowledge-base"
            }
          },
          "message" : {
            "type" : "string",
            "description" : "A human readable message describing the error along with remediation steps where appropriate",
            "example" : "Invalid input (details will vary based on the error)"
          },
          "category" : {
            "type" : "string",
            "description" : "The error category",
            "example" : "VALIDATION_ERROR"
          },
          "errors" : {
            "type" : "array",
            "description" : "further information about the error",
            "items" : {
              "$ref" : "#/components/schemas/ErrorDetail"
            }
          }
        },
        "example" : {
          "message" : "Invalid input (details will vary based on the error)",
          "correlationId" : "aeb5f871-7f07-4993-9211-075dc63e7cbf",
          "category" : "VALIDATION_ERROR",
          "links" : {
            "knowledge-base" : "https://www.hubspot.com/products/service/knowledge-base"
          }
        }
      },
      "PropertyValue" : {
        "required" : [ "dataSensitivity", "isEncrypted", "name", "requestId", "selectedByUser", "selectedByUserTimestamp", "source", "sourceId", "sourceLabel", "sourceMetadata", "sourceVid", "timestamp", "unit", "value" ],
        "type" : "object",
        "properties" : {
          "sourceId" : {
            "type" : "string",
            "description" : ""
          },
          "selectedByUser" : {
            "type" : "boolean",
            "description" : ""
          },
          "sourceLabel" : {
            "type" : "string",
            "description" : ""
          },
          "source" : {
            "type" : "string",
            "description" : "",
            "enum" : [ "UNKNOWN", "IMPORT", "API", "FORM", "ANALYTICS", "MIGRATION", "SALESFORCE", "INTEGRATION", "CONTACTS_WEB", "WAL_INCREMENTAL", "TASK", "EMAIL", "WORKFLOWS", "CALCULATED", "SOCIAL", "BATCH_UPDATE", "SIGNALS", "BIDEN", "DEFAULT", "COMPANIES", "DEALS", "ASSISTS", "PRESENTATIONS", "TALLY", "SIDEKICK", "CRM_UI", "MERGE_CONTACTS", "PORTAL_USER_ASSOCIATOR", "INTEGRATIONS_PLATFORM", "BCC_TO_CRM", "FORWARD_TO_CRM", "ENGAGEMENTS", "SALES", "HEISENBERG", "LEADIN", "GMAIL_INTEGRATION", "ACADEMY", "SALES_MESSAGES", "AVATARS_SERVICE", "MERGE_COMPANIES", "SEQUENCES", "COMPANY_FAMILIES", "MOBILE_IOS", "MOBILE_ANDROID", "CONTACTS", "ASSOCIATIONS", "EXTENSION", "SUCCESS", "BOT", "INTEGRATIONS_SYNC", "AUTOMATION_PLATFORM", "CONVERSATIONS", "EMAIL_INTEGRATION", "CONTENT_MEMBERSHIP", "QUOTES", "BET_ASSIGNMENT", "QUOTAS", "BET_CRM_CONNECTOR", "MEETINGS", "MERGE_OBJECTS", "RECYCLING_BIN", "ADS", "AI_GROUP", "COMMUNICATOR", "SETTINGS", "PROPERTY_SETTINGS", "PIPELINE_SETTINGS", "COMPANY_INSIGHTS", "BEHAVIORAL_EVENTS", "PAYMENTS", "GOALS", "PORTAL_OBJECT_SYNC", "APPROVALS", "FILE_MANAGER", "MARKETPLACE", "INTERNAL_PROCESSING", "FORECASTING", "SLACK_INTEGRATION", "CRM_UI_BULK_ACTION", "WORKFLOW_CONTACT_DELETE_ACTION", "ACCEPTANCE_TEST", "PLAYBOOKS", "CHATSPOT", "FLYWHEEL_PRODUCT_DATA_SYNC", "HELP_DESK", "BILLING", "DATA_ENRICHMENT", "AUTOMATION_JOURNEY", "MICROAPPS", "INTENT", "PROSPECTING_AGENT" ]
          },
          "updatedByUserId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "persistenceTimestamp" : {
            "type" : "integer",
            "format" : "int64"
          },
          "sourceMetadata" : {
            "type" : "string",
            "description" : "Source metadata encoded as a base64 string. For example: `ZXhhbXBsZSBzdHJpbmc=`"
          },
          "dataSensitivity" : {
            "type" : "string",
            "enum" : [ "none", "standard", "high" ]
          },
          "sourceVid" : {
            "type" : "array",
            "description" : "",
            "items" : {
              "type" : "integer",
              "format" : "int64"
            }
          },
          "unit" : {
            "type" : "string"
          },
          "requestId" : {
            "type" : "string",
            "description" : ""
          },
          "isEncrypted" : {
            "type" : "boolean"
          },
          "name" : {
            "type" : "string",
            "description" : ""
          },
          "useTimestampAsPersistenceTimestamp" : {
            "type" : "boolean"
          },
          "value" : {
            "type" : "string",
            "description" : ""
          },
          "selectedByUserTimestamp" : {
            "type" : "integer",
            "description" : "",
            "format" : "int64"
          },
          "timestamp" : {
            "type" : "integer",
            "description" : "",
            "format" : "int64"
          },
          "isLargeValue" : {
            "type" : "boolean"
          }
        }
      },
      "BatchInputMarketingEventExternalUniqueIdentifier" : {
        "required" : [ "inputs" ],
        "type" : "object",
        "properties" : {
          "inputs" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/MarketingEventExternalUniqueIdentifier"
            }
          }
        }
      },
      "MarketingEventUpdateRequestParams" : {
        "type" : "object",
        "properties" : {
          "importStatus" : {
            "type" : "string"
          },
          "startDateTime" : {
            "type" : "string",
            "description" : "The start date and time of the marketing event.",
            "format" : "date-time"
          },
          "customProperties" : {
            "type" : "array",
            "description" : "A list of PropertyValues. These can be whatever kind of property names and values you want. However, they must already exist on the HubSpot account's definition of the MarketingEvent Object. If they don't they will be filtered out and not set.\nIn order to do this you'll need to create a new PropertyGroup on the HubSpot account's MarketingEvent object for your specific app and create the Custom Property you want to track on that HubSpot account. Do not create any new default properties on the MarketingEvent object as that will apply to all HubSpot accounts.\n",
            "items" : {
              "$ref" : "#/components/schemas/PropertyValue"
            }
          },
          "eventCancelled" : {
            "type" : "boolean",
            "description" : "Indicates if the marketing event has been cancelled. Defaults to `false`"
          },
          "eventOrganizer" : {
            "type" : "string",
            "description" : "The name of the organizer of the marketing event."
          },
          "eventUrl" : {
            "type" : "string",
            "description" : "A URL in the external event application where the marketing event can be managed."
          },
          "eventDescription" : {
            "type" : "string",
            "description" : "The description of the marketing event."
          },
          "eventName" : {
            "type" : "string",
            "description" : "The name of the marketing event."
          },
          "eventType" : {
            "type" : "string",
            "description" : "Describes what type of event this is.  For example: `WEBINAR`, `CONFERENCE`, `WORKSHOP`"
          },
          "eventCompleted" : {
            "type" : "boolean"
          },
          "endDateTime" : {
            "type" : "string",
            "description" : "The end date and time of the marketing event.",
            "format" : "date-time"
          },
          "attendanceStateCalculationTimestamp" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "AttendanceCounters" : {
        "required" : [ "attended", "cancelled", "noShows", "registered" ],
        "type" : "object",
        "properties" : {
          "attended" : {
            "type" : "integer",
            "format" : "int32"
          },
          "registered" : {
            "type" : "integer",
            "format" : "int32"
          },
          "cancelled" : {
            "type" : "integer",
            "format" : "int32"
          },
          "noShows" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "BatchResponseSubscriberEmailResponse" : {
        "required" : [ "completedAt", "results", "startedAt", "status" ],
        "type" : "object",
        "properties" : {
          "completedAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "numErrors" : {
            "type" : "integer",
            "format" : "int32"
          },
          "requestedAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "startedAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "links" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "results" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SubscriberEmailResponse"
            }
          },
          "errors" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/StandardError"
            }
          },
          "status" : {
            "type" : "string",
            "enum" : [ "PENDING", "PROCESSING", "CANCELED", "COMPLETE" ]
          }
        }
      },
      "ContactAssociation" : {
        "required" : [ "contactId", "email" ],
        "type" : "object",
        "properties" : {
          "firstname" : {
            "type" : "string"
          },
          "contactId" : {
            "type" : "string"
          },
          "email" : {
            "type" : "string"
          },
          "lastname" : {
            "type" : "string"
          }
        }
      },
      "ParticipationBreakdown" : {
        "required" : [ "associations", "createdAt", "id", "properties" ],
        "type" : "object",
        "properties" : {
          "associations" : {
            "$ref" : "#/components/schemas/ParticipationAssociations"
          },
          "createdAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "id" : {
            "type" : "string"
          },
          "properties" : {
            "$ref" : "#/components/schemas/ParticipationProperties"
          }
        }
      },
      "CollectionResponseWithTotalParticipationBreakdownForwardPaging" : {
        "required" : [ "results", "total" ],
        "type" : "object",
        "properties" : {
          "total" : {
            "type" : "integer",
            "format" : "int32"
          },
          "paging" : {
            "$ref" : "#/components/schemas/ForwardPaging"
          },
          "results" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ParticipationBreakdown"
            }
          }
        }
      },
      "MarketingEventPublicDefaultResponse" : {
        "required" : [ "createdAt", "eventName", "eventOrganizer", "id", "updatedAt" ],
        "type" : "object",
        "properties" : {
          "eventOrganizer" : {
            "type" : "string",
            "description" : "The name of the organizer of the marketing event."
          },
          "eventUrl" : {
            "type" : "string",
            "description" : "A URL in the external event application where the marketing event can be managed."
          },
          "eventType" : {
            "type" : "string",
            "description" : "The type of the marketing event."
          },
          "eventCompleted" : {
            "type" : "boolean"
          },
          "endDateTime" : {
            "type" : "string",
            "description" : "The end date and time of the marketing event.",
            "format" : "date-time"
          },
          "createdAt" : {
            "type" : "string",
            "description" : "",
            "format" : "date-time"
          },
          "startDateTime" : {
            "type" : "string",
            "description" : "The start date and time of the marketing event.",
            "format" : "date-time"
          },
          "customProperties" : {
            "type" : "array",
            "description" : "A list of PropertyValues. These can be whatever kind of property names and values you want. However, they must already exist on the HubSpot account's definition of the MarketingEvent Object. If they don't they will be filtered out and not set.\nIn order to do this you'll need to create a new PropertyGroup on the HubSpot account's MarketingEvent object for your specific app and create the Custom Property you want to track on that HubSpot account. Do not create any new default properties on the MarketingEvent object as that will apply to all HubSpot accounts.\n",
            "items" : {
              "$ref" : "#/components/schemas/PropertyValue"
            }
          },
          "eventCancelled" : {
            "type" : "boolean",
            "description" : "Indicates if the marketing event has been cancelled."
          },
          "eventDescription" : {
            "type" : "string",
            "description" : "The description of the marketing event."
          },
          "eventName" : {
            "type" : "string",
            "description" : "The name of the marketing event."
          },
          "id" : {
            "type" : "string",
            "description" : ""
          },
          "updatedAt" : {
            "type" : "string",
            "description" : "",
            "format" : "date-time"
          }
        }
      },
      "BatchResponseSubscriberVidResponse" : {
        "required" : [ "completedAt", "results", "startedAt", "status" ],
        "type" : "object",
        "properties" : {
          "completedAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "numErrors" : {
            "type" : "integer",
            "format" : "int32"
          },
          "requestedAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "startedAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "links" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "results" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SubscriberVidResponse"
            }
          },
          "errors" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/StandardError"
            }
          },
          "status" : {
            "type" : "string",
            "enum" : [ "PENDING", "PROCESSING", "CANCELED", "COMPLETE" ]
          }
        }
      },
      "MarketingEventDefaultResponse" : {
        "required" : [ "eventName", "eventOrganizer" ],
        "type" : "object",
        "properties" : {
          "startDateTime" : {
            "type" : "string",
            "description" : "The start date and time of the marketing event.",
            "format" : "date-time"
          },
          "customProperties" : {
            "type" : "array",
            "description" : "A list of PropertyValues. These can be whatever kind of property names and values you want. However, they must already exist on the HubSpot account's definition of the MarketingEvent Object. If they don't they will be filtered out and not set.\nIn order to do this you'll need to create a new PropertyGroup on the HubSpot account's MarketingEvent object for your specific app and create the Custom Property you want to track on that HubSpot account. Do not create any new default properties on the MarketingEvent object as that will apply to all HubSpot accounts.\n",
            "items" : {
              "$ref" : "#/components/schemas/PropertyValue"
            }
          },
          "eventCancelled" : {
            "type" : "boolean",
            "description" : "Indicates if the marketing event has been cancelled."
          },
          "eventOrganizer" : {
            "type" : "string",
            "description" : "The name of the organizer of the marketing event."
          },
          "eventUrl" : {
            "type" : "string",
            "description" : "The URL in the external event application where the marketing event can be managed."
          },
          "eventDescription" : {
            "type" : "string",
            "description" : "The description of the marketing event."
          },
          "eventName" : {
            "type" : "string",
            "description" : "The name of the marketing event."
          },
          "eventType" : {
            "type" : "string",
            "description" : "The type of the marketing event."
          },
          "eventCompleted" : {
            "type" : "boolean"
          },
          "endDateTime" : {
            "type" : "string",
            "description" : "The end date and time of the marketing event.",
            "format" : "date-time"
          }
        }
      },
      "ParticipationAssociations" : {
        "required" : [ "contact", "marketingEvent" ],
        "type" : "object",
        "properties" : {
          "marketingEvent" : {
            "$ref" : "#/components/schemas/MarketingEventAssociation"
          },
          "contact" : {
            "$ref" : "#/components/schemas/ContactAssociation"
          }
        }
      },
      "BatchInputMarketingEventSubscriber" : {
        "required" : [ "inputs" ],
        "type" : "object",
        "properties" : {
          "inputs" : {
            "type" : "array",
            "description" : "List of HubSpot contacts to subscribe to the marketing event",
            "items" : {
              "$ref" : "#/components/schemas/MarketingEventSubscriber"
            }
          }
        }
      },
      "NextPage" : {
        "required" : [ "after" ],
        "type" : "object",
        "properties" : {
          "link" : {
            "type" : "string"
          },
          "after" : {
            "type" : "string"
          }
        }
      },
      "BatchResponseMarketingEventPublicDefaultResponse" : {
        "required" : [ "completedAt", "results", "startedAt", "status" ],
        "type" : "object",
        "properties" : {
          "completedAt" : {
            "type" : "string",
            "description" : "",
            "format" : "date-time"
          },
          "numErrors" : {
            "type" : "integer",
            "description" : "",
            "format" : "int32"
          },
          "requestedAt" : {
            "type" : "string",
            "description" : "",
            "format" : "date-time"
          },
          "startedAt" : {
            "type" : "string",
            "description" : "",
            "format" : "date-time"
          },
          "links" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : ""
          },
          "results" : {
            "type" : "array",
            "description" : "",
            "items" : {
              "$ref" : "#/components/schemas/MarketingEventPublicDefaultResponse"
            }
          },
          "errors" : {
            "type" : "array",
            "description" : "",
            "items" : {
              "$ref" : "#/components/schemas/StandardError"
            }
          },
          "status" : {
            "type" : "string",
            "description" : "",
            "enum" : [ "PENDING", "PROCESSING", "CANCELED", "COMPLETE" ]
          }
        }
      }
    },
    "responses" : {
      "Error" : {
        "description" : "An error occurred.",
        "content" : {
          "*/*" : {
            "schema" : {
              "$ref" : "#/components/schemas/Error"
            }
          }
        }
      }
    },
    "securitySchemes" : {
      "oauth2_legacy" : {
        "type" : "oauth2",
        "flows" : {
          "authorizationCode" : {
            "authorizationUrl" : "https://app.hubspot.com/oauth/authorize",
            "tokenUrl" : "https://api.hubapi.com/oauth/v1/token",
            "scopes" : {
              "crm.objects.marketing_events.write" : "Write marketing events",
              "crm.objects.marketing_events.read" : "Read marketing events"
            }
          }
        }
      },
      "developer_hapikey" : {
        "type" : "apiKey",
        "name" : "hapikey",
        "in" : "query"
      },
      "private_apps_legacy" : {
        "type" : "apiKey",
        "name" : "private-app-legacy",
        "in" : "header"
      }
    }
  },
  "x-hubspot-available-client-libraries" : [ "PHP", "Node", "Ruby", "Python" ],
  "x-hubspot-product-tier-requirements" : {
    "marketing" : "FREE",
    "cms" : "STARTER"
  },
  "x-hubspot-documentation-banner" : "NONE"
}