{
  "openapi" : "3.0.1",
  "info" : {
    "title" : "Marketing Campaigns Public Api",
    "description" : "Basepom for all HubSpot Projects",
    "version" : "v3",
    "x-hubspot-product-tier-requirements" : {
      "marketing" : "PROFESSIONAL"
    },
    "x-hubspot-related-documentation" : [ {
      "name" : "Campaigns",
      "url" : "https://developers.hubspot.com/docs/guides/api/marketing/campaigns"
    } ],
    "x-hubspot-introduction" : "You can use campaign endpoints to create, read, update, and delete marketing campaign data. For example, you can use these endpoints to create and manage HubSpot campaigns from your external applications. You can also transfer campaign data to external data warehouses for analytics."
  },
  "servers" : [ {
    "url" : "https://api.hubapi.com"
  } ],
  "tags" : [ {
    "name" : "Campaign Spend"
  }, {
    "name" : "Batch"
  }, {
    "name" : "Campaign Budget"
  }, {
    "name" : "Campaign Asset"
  }, {
    "name" : "Campaign"
  }, {
    "name" : "Campaign Reporting"
  }, {
    "name" : "Basic"
  } ],
  "paths" : {
    "/marketing/v3/campaigns/{campaignGuid}/spend/{spendId}" : {
      "get" : {
        "tags" : [ "Campaign Spend" ],
        "summary" : "Read campaign spend item",
        "description" : "Read a campaign spend item by its spendId",
        "operationId" : "get-/marketing/v3/campaigns/{campaignGuid}/spend/{spendId}",
        "parameters" : [ {
          "name" : "campaignGuid",
          "in" : "path",
          "description" : "Unique identifier for the campaign.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "spendId",
          "in" : "path",
          "description" : "Unique identifier for the spend item.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PublicSpendItem"
                }
              }
            }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "oauth2" : [ "marketing.campaigns.read" ]
        }, {
          "private_apps" : [ "marketing.campaigns.read" ]
        } ]
      },
      "put" : {
        "tags" : [ "Campaign Spend" ],
        "summary" : "Update campaign spend item",
        "description" : "Update a specific campaign spend item by ID",
        "operationId" : "put-/marketing/v3/campaigns/{campaignGuid}/spend/{spendId}",
        "parameters" : [ {
          "name" : "campaignGuid",
          "in" : "path",
          "description" : "Unique identifier for the campaign.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "spendId",
          "in" : "path",
          "description" : "Unique identifier for the spend item.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PublicSpendItemInput"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PublicSpendItem"
                }
              }
            }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "private_apps" : [ "marketing.campaigns.write" ]
        }, {
          "oauth2" : [ "marketing.campaigns.write" ]
        } ]
      },
      "delete" : {
        "tags" : [ "Campaign Spend" ],
        "summary" : "Delete campaign spend item",
        "description" : "Delete a specific campaign spend item by ID",
        "operationId" : "delete-/marketing/v3/campaigns/{campaignGuid}/spend/{spendId}",
        "parameters" : [ {
          "name" : "campaignGuid",
          "in" : "path",
          "description" : "Unique identifier for the campaign.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "spendId",
          "in" : "path",
          "description" : "Unique identifier for the spend item.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "No content",
            "content" : { }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "private_apps" : [ "marketing.campaigns.write" ]
        }, {
          "oauth2" : [ "marketing.campaigns.write" ]
        } ]
      }
    },
    "/marketing/v3/campaigns/batch/update" : {
      "post" : {
        "tags" : [ "Batch" ],
        "summary" : "Update a batch of campaigns",
        "description" : "This endpoint updates a batch of campaigns based on the provided input data.\nThe maximum number of items in a batch request is 50.\nIf an empty string (\"\") is passed for any property in the Batch Update, it will reset that property's value.",
        "operationId" : "post-/marketing/v3/campaigns/batch/update",
        "parameters" : [ ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BatchInputPublicCampaignBatchUpdateItem"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BatchResponsePublicCampaign"
                }
              }
            }
          },
          "207" : {
            "description" : "multiple statuses",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BatchResponsePublicCampaignWithErrors"
                }
              }
            }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "private_apps" : [ "marketing.campaigns.write" ]
        }, {
          "oauth2" : [ "marketing.campaigns.write" ]
        } ]
      }
    },
    "/marketing/v3/campaigns/{campaignGuid}/budget/{budgetId}" : {
      "get" : {
        "tags" : [ "Campaign Budget" ],
        "summary" : "Get budget item",
        "description" : "Get a specific budget item by ID",
        "operationId" : "get-/marketing/v3/campaigns/{campaignGuid}/budget/{budgetId}",
        "parameters" : [ {
          "name" : "campaignGuid",
          "in" : "path",
          "description" : "Unique identifier for the campaign.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "budgetId",
          "in" : "path",
          "description" : "Unique identifier for the budget item.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PublicBudgetItem"
                }
              }
            }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "oauth2" : [ "marketing.campaigns.read" ]
        }, {
          "private_apps" : [ "marketing.campaigns.read" ]
        } ]
      },
      "put" : {
        "tags" : [ "Campaign Budget" ],
        "summary" : "Update budget item",
        "description" : "Update a specific budget item by ID",
        "operationId" : "put-/marketing/v3/campaigns/{campaignGuid}/budget/{budgetId}",
        "parameters" : [ {
          "name" : "campaignGuid",
          "in" : "path",
          "description" : "Unique identifier for the campaign.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "budgetId",
          "in" : "path",
          "description" : "Unique identifier for the budget item.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PublicBudgetItemInput"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PublicBudgetItem"
                }
              }
            }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "private_apps" : [ "marketing.campaigns.write" ]
        }, {
          "oauth2" : [ "marketing.campaigns.write" ]
        } ]
      },
      "delete" : {
        "tags" : [ "Campaign Budget" ],
        "summary" : "Delete budget item",
        "description" : "Delete a specific budget item by ID",
        "operationId" : "delete-/marketing/v3/campaigns/{campaignGuid}/budget/{budgetId}",
        "parameters" : [ {
          "name" : "campaignGuid",
          "in" : "path",
          "description" : "Unique identifier for the campaign.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "budgetId",
          "in" : "path",
          "description" : "Unique identifier for the budget item.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "No content",
            "content" : { }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "private_apps" : [ "marketing.campaigns.write" ]
        }, {
          "oauth2" : [ "marketing.campaigns.write" ]
        } ]
      }
    },
    "/marketing/v3/campaigns/{campaignGuid}/assets/{assetType}/{assetId}" : {
      "put" : {
        "tags" : [ "Campaign Asset" ],
        "summary" : "Add asset association",
        "description" : "Associate a specified asset with a campaign.\nImportant: Currently, only the following asset types can be associated and disassociated via the API: Forms, Static lists, External website pages",
        "operationId" : "put-/marketing/v3/campaigns/{campaignGuid}/assets/{assetType}/{assetId}",
        "parameters" : [ {
          "name" : "campaignGuid",
          "in" : "path",
          "description" : "Unique identifier for the campaign, formatted as a UUID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "assetType",
          "in" : "path",
          "description" : "The type of asset\nImportant: Currently, only the following asset types are available for association via the API: FORM, OBJECT_LIST, EXTERNAL_WEB_URL",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "assetId",
          "in" : "path",
          "description" : "Id of the asset",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "No content",
            "content" : { }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "private_apps" : [ "marketing.campaigns.write" ]
        }, {
          "oauth2" : [ "marketing.campaigns.write" ]
        } ]
      },
      "delete" : {
        "tags" : [ "Campaign Asset" ],
        "summary" : "Remove asset association",
        "description" : "Disassociate a specified asset from a campaign.\nImportant: Currently, only the following asset types can be associated and disassociated via the API: Forms, Static lists, External website pages",
        "operationId" : "delete-/marketing/v3/campaigns/{campaignGuid}/assets/{assetType}/{assetId}",
        "parameters" : [ {
          "name" : "campaignGuid",
          "in" : "path",
          "description" : "Unique identifier for the campaign, formatted as a UUID.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "assetType",
          "in" : "path",
          "description" : "The type of asset\nImportant: Currently, only the following asset types are available for disassociation via the API: FORM, OBJECT_LIST, EXTERNAL_WEB_URL",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "assetId",
          "in" : "path",
          "description" : "Id of the asset",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "No content",
            "content" : { }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "private_apps" : [ "marketing.campaigns.write" ]
        }, {
          "oauth2" : [ "marketing.campaigns.write" ]
        } ]
      }
    },
    "/marketing/v3/campaigns/{campaignGuid}/budget/totals" : {
      "get" : {
        "tags" : [ "Campaign Budget" ],
        "summary" : "Read budget",
        "description" : "Retrieve detailed information about the budget and spend items for a specified campaign, including the total budget, total spend, and remaining budget.\nBudget and Spend items may be returned in any order, but the order field specifies their sequence based on the creation date. The item with order 0 is the oldest, and items with higher order values are newer",
        "operationId" : "get-/marketing/v3/campaigns/{campaignGuid}/budget/totals",
        "parameters" : [ {
          "name" : "campaignGuid",
          "in" : "path",
          "description" : "Unique identifier for the campaign, formatted as a UUID.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PublicBudgetTotals"
                }
              }
            }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "oauth2" : [ "marketing.campaigns.read" ]
        }, {
          "private_apps" : [ "marketing.campaigns.read" ]
        } ]
      }
    },
    "/marketing/v3/campaigns/" : {
      "get" : {
        "tags" : [ "Campaign" ],
        "summary" : "Campaign search",
        "description" : "This endpoint allows users to search for and return a page of campaigns based on various query parameters. Users can filter by name, sort, and paginate through the campaigns, as well as control which properties are returned in the response.",
        "operationId" : "get-/marketing/v3/campaigns/",
        "parameters" : [ {
          "name" : "sort",
          "in" : "query",
          "description" : "The field by which to sort the results. Allowed values are hs_name, createdAt, updatedAt. An optional '-' before the property name can denote descending order\nDefault: hs_name",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "after",
          "in" : "query",
          "description" : "A cursor for pagination. If provided, the results will start after the given cursor.\nExample: NTI1Cg%3D%3D",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "The maximum number of results to return. Allowed values range from 1 to 100\nDefault: 50",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "name",
          "in" : "query",
          "description" : "A filter to return campaigns whose names contain the specified substring. This allows partial matching of campaign names, returning all campaigns that include the given substring in their name. If this parameter is not provided, the search will return all campaigns",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "properties",
          "in" : "query",
          "description" : "A comma-separated list of the properties to be returned in the response. If any of the specified properties has empty value on the requested object(s), they will be ignored and not returned in response. If this parameter is empty, the response will include an empty properties map",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CollectionResponseWithTotalPublicCampaignForwardPaging"
                }
              }
            }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "oauth2" : [ "marketing.campaigns.read" ]
        }, {
          "private_apps" : [ "marketing.campaigns.read" ]
        } ]
      },
      "post" : {
        "tags" : [ "Campaign" ],
        "summary" : "Create a campaign",
        "description" : "Create a campaign with the given properties and return the campaign object, including the campaignGuid and created properties. ",
        "operationId" : "post-/marketing/v3/campaigns/",
        "parameters" : [ ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PublicCampaignInput"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PublicCampaign"
                }
              }
            }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "private_apps" : [ "marketing.campaigns.write" ]
        }, {
          "oauth2" : [ "marketing.campaigns.write" ]
        } ]
      }
    },
    "/marketing/v3/campaigns/batch/read" : {
      "post" : {
        "tags" : [ "Batch" ],
        "summary" : "Read a batch of campaigns",
        "description" : "This endpoint reads a batch of campaigns based on the provided input data and returns the campaigns along with their associated assets. \nThe maximum number of items in a batch request is 50.\nThe campaigns in the response are not guaranteed to be in the same order as they were provided in the request.\nIf duplicate campaign IDs are provided in the request, duplicates will be ignored. The response will include only unique IDs and will be returned without duplicates.\n",
        "operationId" : "post-/marketing/v3/campaigns/batch/read",
        "parameters" : [ {
          "name" : "startDate",
          "in" : "query",
          "description" : "Start date to fetch asset metrics, formatted as YYYY-MM-DD. This date is used to fetch the metrics associated with the assets for a specified period. If not provided, no asset metrics will be fetched.\n",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "endDate",
          "in" : "query",
          "description" : "End date to fetch asset metrics, formatted as YYYY-MM-DD. This date is used to fetch the metrics associated with the assets for a specified period. If not provided, no asset metrics will be fetched.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "properties",
          "in" : "query",
          "description" : "A comma-separated list of the properties to be returned in the response. If any of the specified properties has empty value on the requested object(s), they will be ignored and not returned in response. If this parameter is empty, the response will include an empty properties map.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BatchInputPublicCampaignReadInput"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BatchResponsePublicCampaignWithAssets"
                }
              }
            }
          },
          "207" : {
            "description" : "multiple statuses",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BatchResponsePublicCampaignWithAssetsWithErrors"
                }
              }
            }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "oauth2" : [ "marketing.campaigns.read" ]
        }, {
          "private_apps" : [ "marketing.campaigns.read" ]
        } ]
      }
    },
    "/marketing/v3/campaigns/{campaignGuid}/reports/metrics" : {
      "get" : {
        "tags" : [ "Campaign Reporting" ],
        "summary" : "Get Campaign Metrics\n",
        "description" : "This endpoint retrieves key attribution metrics for a specified campaign, such as sessions, new contacts, and influenced contacts.",
        "operationId" : "get-/marketing/v3/campaigns/{campaignGuid}/reports/metrics",
        "parameters" : [ {
          "name" : "campaignGuid",
          "in" : "path",
          "description" : "Unique identifier for the campaign, formatted as a UUID.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "startDate",
          "in" : "query",
          "description" : "The start date for the report data, formatted as YYYY-MM-DD.\nDefault value: 2006-01-01",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "endDate",
          "in" : "query",
          "description" : "End date for the report data, formatted as YYYY-MM-DD.\nDefault value: Current date",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetricsCounters"
                }
              }
            }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "oauth2" : [ "marketing.campaigns.read" ]
        }, {
          "private_apps" : [ "marketing.campaigns.read" ]
        } ]
      }
    },
    "/marketing/v3/campaigns/{campaignGuid}/assets/{assetType}" : {
      "get" : {
        "tags" : [ "Campaign Asset" ],
        "summary" : "List assets",
        "description" : "This endpoint lists all assets of the campaign by asset type. The assetType parameter is required, and each request can only fetch assets of a single type.\nAsset metrics can also be fetched along with the assets; they are available only if start and end dates are provided.",
        "operationId" : "get-/marketing/v3/campaigns/{campaignGuid}/assets/{assetType}",
        "parameters" : [ {
          "name" : "campaignGuid",
          "in" : "path",
          "description" : "Unique identifier for the campaign, formatted as a UUID.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "assetType",
          "in" : "path",
          "description" : "The type of asset to fetch.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "after",
          "in" : "query",
          "description" : "A cursor for pagination. If provided, the results will start after the given cursor.\nExample: NTI1Cg%3D%3D",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "The maximum number of results to return.\nDefault: 10",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "startDate",
          "in" : "query",
          "description" : "Start date to fetch asset metrics, formatted as YYYY-MM-DD. This date is used to fetch the metrics associated with the assets for a specified period.\nIf not provided, no asset metrics will be fetched.\n",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "endDate",
          "in" : "query",
          "description" : "End date to fetch asset metrics, formatted as YYYY-MM-DD. This date is used to fetch the metrics associated with the assets for a specified period.\nIf not provided, no asset metrics will be fetched.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CollectionResponsePublicCampaignAssetForwardPaging"
                }
              }
            }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "oauth2" : [ "marketing.campaigns.read" ]
        }, {
          "private_apps" : [ "marketing.campaigns.read" ]
        } ]
      }
    },
    "/marketing/v3/campaigns/batch/archive" : {
      "post" : {
        "tags" : [ "Batch" ],
        "summary" : "Delete a batch of campaigns",
        "description" : "This endpoint deletes a batch of campaigns. \nThe maximum number of items in a batch request is 50.\nThe response will always be 204 No Content, regardless of whether the campaigns exist or not, whether they were successfully deleted or not, or if only some of the campaigns in the batch were deleted.",
        "operationId" : "post-/marketing/v3/campaigns/batch/archive",
        "parameters" : [ ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BatchInputPublicCampaignDeleteInput"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "204" : {
            "description" : "No content",
            "content" : { }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "private_apps" : [ "marketing.campaigns.write" ]
        }, {
          "oauth2" : [ "marketing.campaigns.write" ]
        } ]
      }
    },
    "/marketing/v3/campaigns/{campaignGuid}/reports/revenue" : {
      "get" : {
        "tags" : [ "Campaign Reporting" ],
        "summary" : "Fetch revenue",
        "description" : "Fetch revenue attribution report data for a specified campaign\n",
        "operationId" : "get-/marketing/v3/campaigns/{campaignGuid}/reports/revenue",
        "parameters" : [ {
          "name" : "campaignGuid",
          "in" : "path",
          "description" : "Unique identifier for the campaign, formatted as a UUID.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "attributionModel",
          "in" : "query",
          "description" : "Allowed values: LINEAR, FIRST_INTERACTION, LAST_INTERACTION, FULL_PATH, U_SHAPED, W_SHAPED, TIME_DECAY, J_SHAPED, INVERSE_J_SHAPED\nDefault value: LINEAR",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "startDate",
          "in" : "query",
          "description" : "The start date for the report data, formatted as YYYY-MM-DD.\nDefault value: 2006-01-01",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "endDate",
          "in" : "query",
          "description" : "End date for the report data, formatted as YYYY-MM-DD.\nDefault value: Current date",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RevenueAttributionAggregate"
                }
              }
            }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "private_apps" : [ "marketing.campaigns.revenue.read" ]
        }, {
          "oauth2" : [ "marketing.campaigns.revenue.read" ]
        } ]
      }
    },
    "/marketing/v3/campaigns/batch/create" : {
      "post" : {
        "tags" : [ "Batch" ],
        "summary" : "Create a batch of campaigns",
        "description" : "This endpoint creates a batch of campaigns. The maximum number of items in a batch request is 50.\nThe campaigns in the response are not guaranteed to be in the same order as they were provided in the request.",
        "operationId" : "post-/marketing/v3/campaigns/batch/create",
        "parameters" : [ ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BatchInputPublicCampaignInput"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BatchResponsePublicCampaign"
                }
              }
            }
          },
          "207" : {
            "description" : "multiple statuses",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BatchResponsePublicCampaignWithErrors"
                }
              }
            }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "private_apps" : [ "marketing.campaigns.write" ]
        }, {
          "oauth2" : [ "marketing.campaigns.write" ]
        } ]
      }
    },
    "/marketing/v3/campaigns/{campaignGuid}" : {
      "get" : {
        "tags" : [ "Campaign" ],
        "summary" : "Read a campaign",
        "description" : "Get a campaign identified by a specific campaignGuid with the given properties. Along with the campaign information, it also returns information about assets. Depending on the query parameters used, this can also be used to return information about the corresponding assets' metrics. Metrics are available only if startDate and endDate are provided.",
        "operationId" : "get-/marketing/v3/campaigns/{campaignGuid}",
        "parameters" : [ {
          "name" : "campaignGuid",
          "in" : "path",
          "description" : "Unique identifier for the campaign, formatted as a UUID.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "startDate",
          "in" : "query",
          "description" : "Start date to fetch asset metrics, formatted as YYYY-MM-DD. This date is used to fetch the metrics associated with the assets for a specified period.\nIf not provided, no asset metrics will be fetched.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "endDate",
          "in" : "query",
          "description" : " End date to fetch asset metrics, formatted as YYYY-MM-DD. This date is used to fetch the metrics associated with the assets for a specified period.\nIf not provided, no asset metrics will be fetched.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "properties",
          "in" : "query",
          "description" : "A comma-separated list of the properties to be returned in the response. If any of the specified properties has empty value on the requested object, they will be ignored and not returned in response. If this parameter is empty, the response will include an empty properties map.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PublicCampaignWithAssets"
                }
              }
            }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "oauth2" : [ "marketing.campaigns.read" ]
        }, {
          "private_apps" : [ "marketing.campaigns.read" ]
        } ]
      },
      "delete" : {
        "tags" : [ "Campaign" ],
        "summary" : "Delete campaign ",
        "description" : "Delete a specified campaign from the system.\nThis call will return a 204 No Content response regardless of whether the campaignGuid provided corresponds to an existing campaign or not.",
        "operationId" : "delete-/marketing/v3/campaigns/{campaignGuid}",
        "parameters" : [ {
          "name" : "campaignGuid",
          "in" : "path",
          "description" : "Unique identifier for the campaign, formatted as a UUID.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "No content",
            "content" : { }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "private_apps" : [ "marketing.campaigns.write" ]
        }, {
          "oauth2" : [ "marketing.campaigns.write" ]
        } ]
      },
      "patch" : {
        "tags" : [ "Basic" ],
        "summary" : "Update campaign",
        "description" : "Perform a partial update of a campaign identified by the specified campaignGuid. Provided property values will be overwritten. Read-only and non-existent properties will cause 400 error.\nIf an empty string is passed for any property in the Batch Update, it will reset that property's value.\n",
        "operationId" : "patch-/marketing/v3/campaigns/{campaignGuid}",
        "parameters" : [ {
          "name" : "campaignGuid",
          "in" : "path",
          "description" : "Unique identifier for the campaign, formatted as a UUID.\n",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PublicCampaignInput"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PublicCampaign"
                }
              }
            }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "private_apps" : [ "marketing.campaigns.write" ]
        }, {
          "oauth2" : [ "marketing.campaigns.write" ]
        } ]
      }
    },
    "/marketing/v3/campaigns/{campaignGuid}/budget" : {
      "post" : {
        "tags" : [ "Campaign Budget" ],
        "summary" : "Add budget item",
        "description" : "Add a new budget item to the campaign",
        "operationId" : "post-/marketing/v3/campaigns/{campaignGuid}/budget",
        "parameters" : [ {
          "name" : "campaignGuid",
          "in" : "path",
          "description" : "Unique identifier for the campaign.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PublicBudgetItemInput"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PublicBudgetItem"
                }
              }
            }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "private_apps" : [ "marketing.campaigns.write" ]
        }, {
          "oauth2" : [ "marketing.campaigns.write" ]
        } ]
      }
    },
    "/marketing/v3/campaigns/{campaignGuid}/reports/contacts/{contactType}" : {
      "get" : {
        "tags" : [ "Campaign Reporting" ],
        "summary" : "Fetch contact IDs",
        "description" : "Fetch the list of contact IDs for the specified campaign and contact type",
        "operationId" : "get-/marketing/v3/campaigns/{campaignGuid}/reports/contacts/{contactType}",
        "parameters" : [ {
          "name" : "campaignGuid",
          "in" : "path",
          "description" : "Unique identifier for the campaign, formatted as a UUID.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "contactType",
          "in" : "path",
          "description" : "The type of metric to filter the influenced contacts. Allowed values: contactFirstTouch, contactLastTouch, influencedContacts",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "startDate",
          "in" : "query",
          "description" : "The start date for the report data, formatted as YYYY-MM-DD.\nDefault value: 2006-01-01",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "endDate",
          "in" : "query",
          "description" : "End date for the report data, formatted as YYYY-MM-DD.\nDefault value: Current date",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Limit for the number of contacts to fetch\nDefault: 100",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "after",
          "in" : "query",
          "description" : "A cursor for pagination. If provided, the results will start after the given cursor.\nExample: NTI1Cg%3D%3D",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CollectionResponseContactReferenceForwardPaging"
                }
              }
            }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "oauth2" : [ "marketing.campaigns.read" ]
        }, {
          "private_apps" : [ "marketing.campaigns.read" ]
        } ]
      }
    },
    "/marketing/v3/campaigns/{campaignGuid}/spend" : {
      "post" : {
        "tags" : [ "Campaign Spend" ],
        "summary" : "Create campaign spend item",
        "description" : "Create a new campaign spend item",
        "operationId" : "post-/marketing/v3/campaigns/{campaignGuid}/spend",
        "parameters" : [ {
          "name" : "campaignGuid",
          "in" : "path",
          "description" : "Unique identifier for the campaign.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PublicSpendItemInput"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PublicSpendItem"
                }
              }
            }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "private_apps" : [ "marketing.campaigns.write" ]
        }, {
          "oauth2" : [ "marketing.campaigns.write" ]
        } ]
      }
    }
  },
  "components" : {
    "schemas" : {
      "StandardError" : {
        "required" : [ "category", "context", "errors", "links", "message", "status" ],
        "type" : "object",
        "properties" : {
          "subCategory" : {
            "type" : "object",
            "properties" : { }
          },
          "context" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            }
          },
          "links" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "id" : {
            "type" : "string"
          },
          "category" : {
            "type" : "string"
          },
          "message" : {
            "type" : "string"
          },
          "errors" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ErrorDetail"
            }
          },
          "status" : {
            "type" : "string"
          }
        }
      },
      "PublicCampaignBatchUpdateItem" : {
        "required" : [ "id", "properties" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "properties" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          }
        }
      },
      "CollectionResponsePublicCampaignAssetForwardPaging" : {
        "required" : [ "results" ],
        "type" : "object",
        "properties" : {
          "paging" : {
            "$ref" : "#/components/schemas/ForwardPaging"
          },
          "results" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PublicCampaignAsset"
            }
          }
        }
      },
      "PublicCampaignReadInput" : {
        "required" : [ "id" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          }
        }
      },
      "BatchResponsePublicCampaignWithAssetsWithErrors" : {
        "required" : [ "completedAt", "results", "startedAt", "status" ],
        "type" : "object",
        "properties" : {
          "completedAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "numErrors" : {
            "type" : "integer",
            "format" : "int32"
          },
          "requestedAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "startedAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "links" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "results" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PublicCampaignWithAssets"
            }
          },
          "errors" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/StandardError"
            }
          },
          "status" : {
            "type" : "string",
            "enum" : [ "PENDING", "PROCESSING", "CANCELED", "COMPLETE" ]
          }
        }
      },
      "BatchInputPublicCampaignReadInput" : {
        "required" : [ "inputs" ],
        "type" : "object",
        "properties" : {
          "inputs" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PublicCampaignReadInput"
            }
          }
        }
      },
      "BatchResponsePublicCampaignWithAssets" : {
        "required" : [ "completedAt", "results", "startedAt", "status" ],
        "type" : "object",
        "properties" : {
          "completedAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "requestedAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "startedAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "links" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "results" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PublicCampaignWithAssets"
            }
          },
          "status" : {
            "type" : "string",
            "enum" : [ "PENDING", "PROCESSING", "CANCELED", "COMPLETE" ]
          }
        }
      },
      "BatchResponsePublicCampaignWithErrors" : {
        "required" : [ "completedAt", "results", "startedAt", "status" ],
        "type" : "object",
        "properties" : {
          "completedAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "numErrors" : {
            "type" : "integer",
            "format" : "int32"
          },
          "requestedAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "startedAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "links" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "results" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PublicCampaign"
            }
          },
          "errors" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/StandardError"
            }
          },
          "status" : {
            "type" : "string",
            "enum" : [ "PENDING", "PROCESSING", "CANCELED", "COMPLETE" ]
          }
        }
      },
      "ErrorDetail" : {
        "required" : [ "message" ],
        "type" : "object",
        "properties" : {
          "subCategory" : {
            "type" : "string",
            "description" : "A specific category that contains more specific detail about the error"
          },
          "code" : {
            "type" : "string",
            "description" : "The status code associated with the error detail"
          },
          "in" : {
            "type" : "string",
            "description" : "The name of the field or parameter in which the error was found."
          },
          "context" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            },
            "description" : "Context about the error condition",
            "example" : {
              "missingScopes" : [ "scope1", "scope2" ]
            }
          },
          "message" : {
            "type" : "string",
            "description" : "A human readable message describing the error along with remediation steps where appropriate"
          }
        }
      },
      "ForwardPaging" : {
        "type" : "object",
        "properties" : {
          "next" : {
            "$ref" : "#/components/schemas/NextPage"
          }
        }
      },
      "PublicSpendItem" : {
        "required" : [ "amount", "createdAt", "id", "name", "order", "updatedAt" ],
        "type" : "object",
        "properties" : {
          "createdAt" : {
            "type" : "integer",
            "format" : "int64"
          },
          "amount" : {
            "type" : "number"
          },
          "name" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "id" : {
            "type" : "string"
          },
          "order" : {
            "type" : "integer",
            "format" : "int32"
          },
          "updatedAt" : {
            "type" : "integer",
            "format" : "int64"
          }
        }
      },
      "BatchResponsePublicCampaign" : {
        "required" : [ "completedAt", "results", "startedAt", "status" ],
        "type" : "object",
        "properties" : {
          "completedAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "requestedAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "startedAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "links" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "results" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PublicCampaign"
            }
          },
          "status" : {
            "type" : "string",
            "enum" : [ "PENDING", "PROCESSING", "CANCELED", "COMPLETE" ]
          }
        }
      },
      "PublicCampaignWithAssets" : {
        "required" : [ "assets", "businessUnits", "createdAt", "id", "properties", "updatedAt" ],
        "type" : "object",
        "properties" : {
          "createdAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "businessUnits" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PublicBusinessUnit"
            }
          },
          "assets" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/CollectionResponsePublicCampaignAsset"
            }
          },
          "id" : {
            "type" : "string"
          },
          "properties" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "updatedAt" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "PublicBudgetTotals" : {
        "required" : [ "budgetItems", "currencyCode", "spendItems" ],
        "type" : "object",
        "properties" : {
          "spendItems" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PublicSpendItem"
            }
          },
          "budgetTotal" : {
            "type" : "number"
          },
          "remainingBudget" : {
            "type" : "number"
          },
          "spendTotal" : {
            "type" : "number"
          },
          "currencyCode" : {
            "type" : "string",
            "enum" : [ "AED", "AFN", "ALL", "AMD", "ANG", "AOA", "ARS", "AUD", "AWG", "AZN", "BAM", "BBD", "BDT", "BGN", "BHD", "BIF", "BMD", "BND", "BOB", "BOV", "BRL", "BSD", "BTN", "BWP", "BYN", "BZD", "CAD", "CDF", "CHE", "CHF", "CHW", "CLF", "CLP", "CNY", "COP", "COU", "CRC", "CUC", "CUP", "CVE", "CZK", "DJF", "DKK", "DOP", "DZD", "EGP", "ERN", "ETB", "EUR", "FJD", "FKP", "GBP", "GEL", "GHS", "GIP", "GMD", "GNF", "GTQ", "GYD", "HKD", "HNL", "HRK", "HTG", "HUF", "IDR", "ILS", "INR", "IQD", "IRR", "ISK", "JMD", "JOD", "JPY", "KES", "KGS", "KHR", "KMF", "KPW", "KRW", "KWD", "KYD", "KZT", "LAK", "LBP", "LKR", "LRD", "LSL", "LYD", "MAD", "MDL", "MGA", "MKD", "MMK", "MNT", "MOP", "MRU", "MUR", "MVR", "MWK", "MXN", "MXV", "MYR", "MZN", "NAD", "NGN", "NIO", "NOK", "NPR", "NZD", "OMR", "PAB", "PEN", "PGK", "PHP", "PKR", "PLN", "PYG", "QAR", "RON", "RSD", "RUB", "RWF", "SAR", "SBD", "SCR", "SDG", "SEK", "SGD", "SHP", "SLL", "SOS", "SRD", "SSP", "STN", "SVC", "SYP", "SZL", "THB", "TJS", "TMT", "TND", "TOP", "TRY", "TTD", "TWD", "TZS", "UAH", "UGX", "USD", "USN", "UYI", "UYU", "UZS", "VEF", "VND", "VUV", "WST", "XAF", "XAG", "XAU", "XBA", "XBB", "XBC", "XBD", "XCD", "XDR", "XOF", "XPD", "XPF", "XPT", "XSU", "XUA", "YER", "ZAR", "ZMW", "ZWL" ]
          },
          "budgetItems" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PublicBudgetItem"
            }
          }
        }
      },
      "BatchInputPublicCampaignDeleteInput" : {
        "required" : [ "inputs" ],
        "type" : "object",
        "properties" : {
          "inputs" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PublicCampaignDeleteInput"
            }
          }
        }
      },
      "CollectionResponsePublicCampaignAsset" : {
        "required" : [ "results" ],
        "type" : "object",
        "properties" : {
          "paging" : {
            "$ref" : "#/components/schemas/Paging"
          },
          "results" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PublicCampaignAsset"
            }
          }
        }
      },
      "PublicCampaignDeleteInput" : {
        "required" : [ "id" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          }
        }
      },
      "PublicSpendItemInput" : {
        "required" : [ "amount", "name", "order" ],
        "type" : "object",
        "properties" : {
          "amount" : {
            "type" : "number"
          },
          "name" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "order" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "PublicCampaignInput" : {
        "required" : [ "properties" ],
        "type" : "object",
        "properties" : {
          "properties" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          }
        }
      },
      "MetricsCounters" : {
        "required" : [ "influencedContacts", "newContactsFirstTouch", "newContactsLastTouch", "sessions" ],
        "type" : "object",
        "properties" : {
          "sessions" : {
            "type" : "integer",
            "format" : "int32"
          },
          "newContactsFirstTouch" : {
            "type" : "integer",
            "format" : "int32"
          },
          "influencedContacts" : {
            "type" : "integer",
            "format" : "int32"
          },
          "newContactsLastTouch" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "PublicBudgetItem" : {
        "required" : [ "amount", "createdAt", "id", "name", "order", "updatedAt" ],
        "type" : "object",
        "properties" : {
          "createdAt" : {
            "type" : "integer",
            "format" : "int64"
          },
          "amount" : {
            "type" : "number"
          },
          "name" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "id" : {
            "type" : "string"
          },
          "order" : {
            "type" : "integer",
            "format" : "int32"
          },
          "updatedAt" : {
            "type" : "integer",
            "format" : "int64"
          }
        }
      },
      "BatchInputPublicCampaignInput" : {
        "required" : [ "inputs" ],
        "type" : "object",
        "properties" : {
          "inputs" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PublicCampaignInput"
            }
          }
        }
      },
      "CollectionResponseWithTotalPublicCampaignForwardPaging" : {
        "required" : [ "results", "total" ],
        "type" : "object",
        "properties" : {
          "total" : {
            "type" : "integer",
            "format" : "int32"
          },
          "paging" : {
            "$ref" : "#/components/schemas/ForwardPaging"
          },
          "results" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PublicCampaign"
            }
          }
        }
      },
      "PublicBudgetItemInput" : {
        "required" : [ "amount", "name", "order" ],
        "type" : "object",
        "properties" : {
          "amount" : {
            "type" : "number"
          },
          "name" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "order" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "Paging" : {
        "type" : "object",
        "properties" : {
          "next" : {
            "$ref" : "#/components/schemas/NextPage"
          },
          "prev" : {
            "$ref" : "#/components/schemas/PreviousPage"
          }
        }
      },
      "Error" : {
        "required" : [ "category", "correlationId", "message" ],
        "type" : "object",
        "properties" : {
          "subCategory" : {
            "type" : "string",
            "description" : "A specific category that contains more specific detail about the error"
          },
          "context" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            },
            "description" : "Context about the error condition",
            "example" : {
              "missingScopes" : [ "scope1", "scope2" ],
              "invalidPropertyName" : [ "propertyValue" ]
            }
          },
          "correlationId" : {
            "type" : "string",
            "description" : "A unique identifier for the request. Include this value with any error reports or support tickets",
            "format" : "uuid",
            "example" : "aeb5f871-7f07-4993-9211-075dc63e7cbf"
          },
          "links" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "A map of link names to associated URIs containing documentation about the error or recommended remediation steps"
          },
          "message" : {
            "type" : "string",
            "description" : "A human readable message describing the error along with remediation steps where appropriate",
            "example" : "An error occurred"
          },
          "category" : {
            "type" : "string",
            "description" : "The error category"
          },
          "errors" : {
            "type" : "array",
            "description" : "further information about the error",
            "items" : {
              "$ref" : "#/components/schemas/ErrorDetail"
            }
          }
        },
        "example" : {
          "message" : "Invalid input (details will vary based on the error)",
          "correlationId" : "aeb5f871-7f07-4993-9211-075dc63e7cbf",
          "category" : "VALIDATION_ERROR",
          "links" : {
            "knowledge-base" : "https://www.hubspot.com/products/service/knowledge-base"
          }
        }
      },
      "CollectionResponseContactReferenceForwardPaging" : {
        "required" : [ "results" ],
        "type" : "object",
        "properties" : {
          "paging" : {
            "$ref" : "#/components/schemas/ForwardPaging"
          },
          "results" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ContactReference"
            }
          }
        }
      },
      "PublicCampaignAsset" : {
        "required" : [ "id", "metrics" ],
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "id" : {
            "type" : "string"
          },
          "metrics" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "number"
            }
          }
        }
      },
      "RevenueAttributionAggregate" : {
        "type" : "object",
        "properties" : {
          "contactsNumber" : {
            "type" : "integer",
            "format" : "int32"
          },
          "dealAmount" : {
            "type" : "number"
          },
          "dealsNumber" : {
            "type" : "integer",
            "format" : "int32"
          },
          "revenueAmount" : {
            "type" : "number"
          },
          "currencyCode" : {
            "type" : "string",
            "enum" : [ "AED", "AFN", "ALL", "AMD", "ANG", "AOA", "ARS", "AUD", "AWG", "AZN", "BAM", "BBD", "BDT", "BGN", "BHD", "BIF", "BMD", "BND", "BOB", "BOV", "BRL", "BSD", "BTN", "BWP", "BYN", "BZD", "CAD", "CDF", "CHE", "CHF", "CHW", "CLF", "CLP", "CNY", "COP", "COU", "CRC", "CUC", "CUP", "CVE", "CZK", "DJF", "DKK", "DOP", "DZD", "EGP", "ERN", "ETB", "EUR", "FJD", "FKP", "GBP", "GEL", "GHS", "GIP", "GMD", "GNF", "GTQ", "GYD", "HKD", "HNL", "HRK", "HTG", "HUF", "IDR", "ILS", "INR", "IQD", "IRR", "ISK", "JMD", "JOD", "JPY", "KES", "KGS", "KHR", "KMF", "KPW", "KRW", "KWD", "KYD", "KZT", "LAK", "LBP", "LKR", "LRD", "LSL", "LYD", "MAD", "MDL", "MGA", "MKD", "MMK", "MNT", "MOP", "MRU", "MUR", "MVR", "MWK", "MXN", "MXV", "MYR", "MZN", "NAD", "NGN", "NIO", "NOK", "NPR", "NZD", "OMR", "PAB", "PEN", "PGK", "PHP", "PKR", "PLN", "PYG", "QAR", "RON", "RSD", "RUB", "RWF", "SAR", "SBD", "SCR", "SDG", "SEK", "SGD", "SHP", "SLL", "SOS", "SRD", "SSP", "STN", "SVC", "SYP", "SZL", "THB", "TJS", "TMT", "TND", "TOP", "TRY", "TTD", "TWD", "TZS", "UAH", "UGX", "USD", "USN", "UYI", "UYU", "UZS", "VEF", "VND", "VUV", "WST", "XAF", "XAG", "XAU", "XBA", "XBB", "XBC", "XBD", "XCD", "XDR", "XOF", "XPD", "XPF", "XPT", "XSU", "XUA", "YER", "ZAR", "ZMW", "ZWL" ]
          }
        }
      },
      "BatchInputPublicCampaignBatchUpdateItem" : {
        "required" : [ "inputs" ],
        "type" : "object",
        "properties" : {
          "inputs" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PublicCampaignBatchUpdateItem"
            }
          }
        }
      },
      "PreviousPage" : {
        "required" : [ "before" ],
        "type" : "object",
        "properties" : {
          "before" : {
            "type" : "string"
          },
          "link" : {
            "type" : "string"
          }
        }
      },
      "ContactReference" : {
        "required" : [ "id" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          }
        }
      },
      "PublicBusinessUnit" : {
        "required" : [ "id" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "NextPage" : {
        "required" : [ "after" ],
        "type" : "object",
        "properties" : {
          "link" : {
            "type" : "string"
          },
          "after" : {
            "type" : "string"
          }
        }
      },
      "PublicCampaign" : {
        "required" : [ "businessUnits", "createdAt", "id", "properties", "updatedAt" ],
        "type" : "object",
        "properties" : {
          "createdAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "businessUnits" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PublicBusinessUnit"
            }
          },
          "id" : {
            "type" : "string"
          },
          "properties" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "updatedAt" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      }
    },
    "responses" : {
      "Error" : {
        "description" : "An error occurred.",
        "content" : {
          "*/*" : {
            "schema" : {
              "$ref" : "#/components/schemas/Error"
            }
          }
        }
      }
    },
    "securitySchemes" : {
      "oauth2" : {
        "type" : "oauth2",
        "flows" : {
          "authorizationCode" : {
            "authorizationUrl" : "https://app.hubspot.com/oauth/authorize",
            "tokenUrl" : "https://api.hubapi.com/oauth/v1/token",
            "scopes" : {
              "marketing.campaigns.read" : "Read marketing campaigns",
              "marketing.campaigns.write" : "Write marketing campaigns",
              "marketing.campaigns.revenue.read" : "Read campaigns attribution revenue"
            }
          }
        }
      },
      "private_apps" : {
        "type" : "apiKey",
        "name" : "private-app",
        "in" : "header"
      }
    }
  }
}