{
  "openapi" : "3.0.1",
  "info" : {
    "title" : "User Provisioning",
    "description" : "Add, manage, and remove users from your account",
    "version" : "v3",
    "x-hubspot-product-tier-requirements" : {
      "marketing" : "FREE",
      "sales" : "FREE",
      "service" : "FREE",
      "cms" : "FREE"
    },
    "x-hubspot-documentation-banner" : "NONE",
    "x-hubspot-api-use-case" : "You manage employee access data in a system outside of HubSpot, and you want to ensure that specific users are dynamically allocated to the right teams in your HubSpot account.",
    "x-hubspot-related-documentation" : [ {
      "name" : "User Provisioning Guide",
      "url" : "https://developers.hubspot.com/docs/guides/api/settings/users/user-provisioning"
    } ],
    "x-hubspot-introduction" : "Use the user provisioning API to create and manage users in your HubSpot account, along with their associated teams and roles."
  },
  "servers" : [ {
    "url" : "https://api.hubapi.com"
  } ],
  "tags" : [ {
    "name" : "Teams"
  }, {
    "name" : "Roles"
  }, {
    "name" : "Users"
  } ],
  "paths" : {
    "/settings/v3/users/teams" : {
      "get" : {
        "tags" : [ "Teams" ],
        "summary" : "See details about this account's teams",
        "description" : "View teams for this account",
        "operationId" : "get-/settings/v3/users/teams_getAll",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CollectionResponsePublicTeamNoPaging"
                }
              }
            }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "oauth2_legacy" : [ "settings.users.teams.read" ]
        }, {
          "private_apps_legacy" : [ "settings.users.teams.read" ]
        } ]
      }
    },
    "/settings/v3/users/roles" : {
      "get" : {
        "tags" : [ "Roles" ],
        "summary" : "Retrieves the roles on an account",
        "description" : "Retrieves the roles on an account",
        "operationId" : "get-/settings/v3/users/roles_getAll",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CollectionResponsePublicPermissionSetNoPaging"
                }
              }
            }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "private_apps" : [ "crm.objects.users.read" ]
        }, {
          "oauth2" : [ "crm.objects.users.read" ]
        }, {
          "private_apps_legacy" : [ "settings.users.read" ]
        }, {
          "oauth2_legacy" : [ "settings.users.read" ]
        } ]
      }
    },
    "/settings/v3/users/" : {
      "get" : {
        "tags" : [ "Users" ],
        "summary" : "Retrieves a list of users from an account",
        "description" : "Retrieves a list of users from an account",
        "operationId" : "get-/settings/v3/users/_getPage",
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "description" : "The number of users to retrieve",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "after",
          "in" : "query",
          "description" : "Results will display maximum 100 users per page. Additional results will be on the next page.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CollectionResponsePublicUserForwardPaging"
                }
              }
            }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "private_apps" : [ "crm.objects.users.read" ]
        }, {
          "oauth2" : [ "crm.objects.users.read" ]
        }, {
          "private_apps_legacy" : [ "settings.users.read" ]
        }, {
          "oauth2_legacy" : [ "settings.users.read" ]
        } ]
      },
      "post" : {
        "tags" : [ "Users" ],
        "summary" : "Adds a user",
        "description" : "New users will only have minimal permissions, which is contacts-base. A welcome email will prompt them to set a password and log in to HubSpot.",
        "operationId" : "post-/settings/v3/users/_create",
        "parameters" : [ ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UserProvisionRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PublicUser"
                }
              }
            }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "private_apps_legacy" : [ "settings.users.write" ]
        }, {
          "oauth2_legacy" : [ "settings.users.write" ]
        }, {
          "oauth2" : [ "crm.objects.users.write" ]
        }, {
          "private_apps" : [ "crm.objects.users.write" ]
        } ]
      }
    },
    "/settings/v3/users/{userId}" : {
      "get" : {
        "tags" : [ "Users" ],
        "summary" : "Retrieves a user",
        "description" : "Retrieves a user identified by `userId`. `userId` refers to the user's ID by default, or optionally email as specified by the `IdProperty` query param.",
        "operationId" : "get-/settings/v3/users/{userId}_getById",
        "parameters" : [ {
          "name" : "userId",
          "in" : "path",
          "description" : "Identifier of user to retrieve",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "idProperty",
          "in" : "query",
          "description" : "The name of a property with unique user values. Valid values are `USER_ID`(default) or `EMAIL`",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "USER_ID", "EMAIL" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PublicUser"
                }
              }
            }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "private_apps" : [ "crm.objects.users.read" ]
        }, {
          "oauth2" : [ "crm.objects.users.read" ]
        }, {
          "private_apps_legacy" : [ "settings.users.read" ]
        }, {
          "oauth2_legacy" : [ "settings.users.read" ]
        } ]
      },
      "put" : {
        "tags" : [ "Users" ],
        "summary" : "Modifies a user",
        "description" : "Modifies a user identified by `userId`. `userId` refers to the user's ID by default, or optionally email as specified by the `IdProperty` query param.",
        "operationId" : "put-/settings/v3/users/{userId}_replace",
        "parameters" : [ {
          "name" : "idProperty",
          "in" : "query",
          "description" : "The name of a property with unique user values. Valid values are `USER_ID`(default) or `EMAIL`",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "USER_ID", "EMAIL" ]
          }
        }, {
          "name" : "userId",
          "in" : "path",
          "description" : "Identifier of user to retrieve",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PublicUserUpdate"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PublicUser"
                }
              }
            }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "private_apps_legacy" : [ "settings.users.write" ]
        }, {
          "oauth2_legacy" : [ "settings.users.write" ]
        }, {
          "oauth2" : [ "crm.objects.users.write" ]
        }, {
          "private_apps" : [ "crm.objects.users.write" ]
        } ]
      },
      "delete" : {
        "tags" : [ "Users" ],
        "summary" : "Removes a user",
        "description" : "Removes a user identified by `userId`. `userId` refers to the user's ID by default, or optionally email as specified by the `IdProperty` query param.",
        "operationId" : "delete-/settings/v3/users/{userId}_archive",
        "parameters" : [ {
          "name" : "userId",
          "in" : "path",
          "description" : "Identifier of user to delete",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "idProperty",
          "in" : "query",
          "description" : "The name of a property with unique user values. Valid values are `USER_ID`(default) or `EMAIL`",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "USER_ID", "EMAIL" ]
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "No content",
            "content" : { }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "private_apps_legacy" : [ "settings.users.write" ]
        }, {
          "oauth2_legacy" : [ "settings.users.write" ]
        }, {
          "oauth2" : [ "crm.objects.users.write" ]
        }, {
          "private_apps" : [ "crm.objects.users.write" ]
        } ]
      }
    }
  },
  "components" : {
    "schemas" : {
      "ErrorDetail" : {
        "required" : [ "message" ],
        "type" : "object",
        "properties" : {
          "subCategory" : {
            "type" : "string",
            "description" : "A specific category that contains more specific detail about the error"
          },
          "code" : {
            "type" : "string",
            "description" : "The status code associated with the error detail"
          },
          "in" : {
            "type" : "string",
            "description" : "The name of the field or parameter in which the error was found."
          },
          "context" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            },
            "description" : "Context about the error condition",
            "example" : {
              "missingScopes" : [ "scope1", "scope2" ]
            }
          },
          "message" : {
            "type" : "string",
            "description" : "A human readable message describing the error along with remediation steps where appropriate"
          }
        }
      },
      "ForwardPaging" : {
        "type" : "object",
        "properties" : {
          "next" : {
            "$ref" : "#/components/schemas/NextPage"
          }
        }
      },
      "PublicUser" : {
        "required" : [ "email", "id" ],
        "type" : "object",
        "properties" : {
          "firstName" : {
            "type" : "string"
          },
          "lastName" : {
            "type" : "string"
          },
          "primaryTeamId" : {
            "type" : "string",
            "description" : "The user's primary team",
            "example" : "101"
          },
          "roleIds" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "sendWelcomeEmail" : {
            "type" : "boolean"
          },
          "roleId" : {
            "type" : "string",
            "description" : "The user's role",
            "example" : "100"
          },
          "secondaryTeamIds" : {
            "type" : "array",
            "description" : "The user's additional teams",
            "example" : [ "102" ],
            "items" : {
              "type" : "string"
            }
          },
          "id" : {
            "type" : "string",
            "description" : "The user's unique ID",
            "example" : "123"
          },
          "superAdmin" : {
            "type" : "boolean",
            "example" : false
          },
          "email" : {
            "type" : "string",
            "description" : "The user's email",
            "example" : "newUser@email.com"
          }
        },
        "description" : "A user",
        "example" : {
          "id" : "123",
          "email" : "newUser@email.com",
          "roleId" : "100",
          "primaryTeamId" : "101",
          "secondaryTeamIds" : [ "102" ],
          "superAdmin" : "false"
        }
      },
      "CollectionResponsePublicPermissionSetNoPaging" : {
        "required" : [ "results" ],
        "type" : "object",
        "properties" : {
          "results" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PublicPermissionSet"
            }
          }
        }
      },
      "PublicTeam" : {
        "required" : [ "id", "name", "secondaryUserIds", "userIds" ],
        "type" : "object",
        "properties" : {
          "userIds" : {
            "type" : "array",
            "description" : "Primary members of this team",
            "example" : [ "123" ],
            "items" : {
              "type" : "string"
            }
          },
          "name" : {
            "type" : "string",
            "description" : "The team's name",
            "example" : "Test Team"
          },
          "id" : {
            "type" : "string",
            "description" : "The team's unique ID",
            "example" : "100"
          },
          "secondaryUserIds" : {
            "type" : "array",
            "description" : "Secondary or additional members of this team",
            "example" : [ "124" ],
            "items" : {
              "type" : "string"
            }
          }
        },
        "description" : "A team that can be assigned to a user",
        "example" : {
          "id" : "100",
          "name" : "Test Team",
          "userIds" : [ "123" ],
          "secondaryUserIds" : [ "124" ]
        }
      },
      "CollectionResponsePublicTeamNoPaging" : {
        "required" : [ "results" ],
        "type" : "object",
        "properties" : {
          "results" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PublicTeam"
            }
          }
        }
      },
      "CollectionResponsePublicUserForwardPaging" : {
        "required" : [ "results" ],
        "type" : "object",
        "properties" : {
          "paging" : {
            "$ref" : "#/components/schemas/ForwardPaging"
          },
          "results" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PublicUser"
            }
          }
        }
      },
      "UserProvisionRequest" : {
        "required" : [ "email" ],
        "type" : "object",
        "properties" : {
          "firstName" : {
            "type" : "string"
          },
          "lastName" : {
            "type" : "string"
          },
          "primaryTeamId" : {
            "type" : "string",
            "description" : "The user's primary team",
            "example" : "101"
          },
          "sendWelcomeEmail" : {
            "type" : "boolean",
            "description" : "Whether to send a welcome email",
            "example" : true
          },
          "roleId" : {
            "type" : "string",
            "description" : "The user's role",
            "example" : "100"
          },
          "secondaryTeamIds" : {
            "type" : "array",
            "description" : "The user's additional teams",
            "example" : [ "102" ],
            "items" : {
              "type" : "string"
            }
          },
          "email" : {
            "type" : "string",
            "description" : "The created user's email",
            "example" : "newUser@email.com"
          }
        },
        "description" : "A user creation request",
        "example" : {
          "email" : "newUser@email.com",
          "roleId" : "100",
          "primaryTeamId" : "101",
          "secondaryTeamIds" : [ "102" ],
          "sendWelcomeEmail" : "true"
        }
      },
      "PublicUserUpdate" : {
        "type" : "object",
        "properties" : {
          "firstName" : {
            "type" : "string"
          },
          "lastName" : {
            "type" : "string"
          },
          "primaryTeamId" : {
            "type" : "string",
            "description" : "The user's primary team",
            "example" : "101"
          },
          "roleId" : {
            "type" : "string",
            "description" : "The user's role",
            "example" : "100"
          },
          "secondaryTeamIds" : {
            "type" : "array",
            "description" : "The user's additional teams",
            "example" : [ "102" ],
            "items" : {
              "type" : "string"
            }
          }
        },
        "description" : "A user to update",
        "example" : {
          "roleId" : "100",
          "primaryTeamId" : "101",
          "secondaryTeamIds" : [ "102" ]
        }
      },
      "Error" : {
        "required" : [ "category", "correlationId", "message" ],
        "type" : "object",
        "properties" : {
          "subCategory" : {
            "type" : "string",
            "description" : "A specific category that contains more specific detail about the error"
          },
          "context" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            },
            "description" : "Context about the error condition",
            "example" : {
              "missingScopes" : [ "scope1", "scope2" ],
              "invalidPropertyName" : [ "propertyValue" ]
            }
          },
          "correlationId" : {
            "type" : "string",
            "description" : "A unique identifier for the request. Include this value with any error reports or support tickets",
            "format" : "uuid",
            "example" : "aeb5f871-7f07-4993-9211-075dc63e7cbf"
          },
          "links" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "A map of link names to associated URIs containing documentation about the error or recommended remediation steps",
            "example" : {
              "knowledge-base" : "https://www.hubspot.com/products/service/knowledge-base"
            }
          },
          "message" : {
            "type" : "string",
            "description" : "A human readable message describing the error along with remediation steps where appropriate",
            "example" : "Invalid input (details will vary based on the error)"
          },
          "category" : {
            "type" : "string",
            "description" : "The error category",
            "example" : "VALIDATION_ERROR"
          },
          "errors" : {
            "type" : "array",
            "description" : "further information about the error",
            "items" : {
              "$ref" : "#/components/schemas/ErrorDetail"
            }
          }
        },
        "example" : {
          "message" : "Invalid input (details will vary based on the error)",
          "correlationId" : "aeb5f871-7f07-4993-9211-075dc63e7cbf",
          "category" : "VALIDATION_ERROR",
          "links" : {
            "knowledge-base" : "https://www.hubspot.com/products/service/knowledge-base"
          }
        }
      },
      "NextPage" : {
        "required" : [ "after" ],
        "type" : "object",
        "properties" : {
          "link" : {
            "type" : "string"
          },
          "after" : {
            "type" : "string"
          }
        }
      },
      "PublicPermissionSet" : {
        "required" : [ "id", "name", "requiresBillingWrite" ],
        "type" : "object",
        "properties" : {
          "requiresBillingWrite" : {
            "type" : "boolean",
            "description" : "Whether this role has a paid seat and requires the billing-write scope to assign/unassign to users",
            "example" : false
          },
          "name" : {
            "type" : "string",
            "description" : "The role's name",
            "example" : "Test Role"
          },
          "id" : {
            "type" : "string",
            "description" : "The role's unique ID",
            "example" : "100"
          }
        },
        "description" : "A role that can be assigned to a user",
        "example" : {
          "id" : "100",
          "name" : "Test Role",
          "requiresBillingWrite" : "False"
        }
      }
    },
    "responses" : {
      "Error" : {
        "description" : "An error occurred.",
        "content" : {
          "*/*" : {
            "schema" : {
              "$ref" : "#/components/schemas/Error"
            }
          }
        }
      }
    },
    "securitySchemes" : {
      "oauth2_legacy" : {
        "type" : "oauth2",
        "flows" : {
          "authorizationCode" : {
            "authorizationUrl" : "https://app.hubspot.com/oauth/authorize",
            "tokenUrl" : "https://api.hubapi.com/oauth/v1/token",
            "scopes" : {
              "settings.users.read" : "View account data.",
              "settings.users.write" : "Create, modify, and delete users on your account",
              "settings.users.teams.read" : "View teams for this account."
            }
          }
        }
      },
      "oauth2" : {
        "type" : "oauth2",
        "flows" : {
          "authorizationCode" : {
            "authorizationUrl" : "https://app.hubspot.com/oauth/authorize",
            "tokenUrl" : "https://api.hubapi.com/oauth/v1/token",
            "scopes" : {
              "crm.objects.users.read" : "Read User CRM objects",
              "crm.objects.users.write" : "Write User CRM objects"
            }
          }
        }
      },
      "private_apps_legacy" : {
        "type" : "apiKey",
        "name" : "private-app-legacy",
        "in" : "header"
      },
      "private_apps" : {
        "type" : "apiKey",
        "name" : "private-app",
        "in" : "header"
      }
    }
  },
  "x-hubspot-available-client-libraries" : [ "PHP", "Node", "Ruby", "Python" ],
  "x-hubspot-product-tier-requirements" : {
    "marketing" : "FREE",
    "sales" : "FREE",
    "service" : "FREE",
    "cms" : "FREE"
  },
  "x-hubspot-documentation-banner" : "NONE"
}