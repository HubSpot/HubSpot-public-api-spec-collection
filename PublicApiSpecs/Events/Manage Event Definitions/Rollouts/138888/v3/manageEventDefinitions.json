{
  "openapi" : "3.0.1",
  "info" : {
    "title" : "Events Manage Event Definitions",
    "version" : "v3",
    "x-hubspot-product-tier-requirements" : {
      "marketing" : "ENTERPRISE",
      "sales" : "ENTERPRISE",
      "service" : "ENTERPRISE",
      "cms" : "ENTERPRISE",
      "commerce" : "FREE",
      "crmHub" : "FREE",
      "dataHub" : "FREE"
    },
    "x-hubspot-api-use-case" : "You want to track more complex interactions that visitors perform when they navigate to your website and engage with your content.",
    "x-hubspot-related-documentation" : [ {
      "name" : "Custom Events Definitions Guide",
      "url" : "https://developers.hubspot.com/docs/guides/api/analytics-and-events/custom-events/custom-event-definitions"
    } ],
    "x-hubspot-introduction" : "Use the custom events API to define events that you can later create and associate with records in your HubSpot CRM."
  },
  "servers" : [ {
    "url" : "https://api.hubapi.com"
  } ],
  "tags" : [ {
    "name" : "Event definition"
  } ],
  "paths" : {
    "/events/v3/event-definitions/{eventName}" : {
      "get" : {
        "tags" : [ "Event definition" ],
        "summary" : "Retrieve a custom event definition",
        "description" : "Fetch a single custom event definition by name.",
        "operationId" : "get-/events/v3/event-definitions/{eventName}",
        "parameters" : [ {
          "name" : "eventName",
          "in" : "path",
          "description" : "The internal name of the custom event.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExternalBehavioralEventTypeDefinition"
                }
              }
            }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "private_apps" : [ "behavioral_events.event_definitions.read_write" ]
        }, {
          "oauth2" : [ "behavioral_events.event_definitions.read_write" ]
        } ]
      },
      "delete" : {
        "tags" : [ "Event definition" ],
        "summary" : "Delete an event definition",
        "description" : "Delete a custom event definition by name.",
        "operationId" : "delete-/events/v3/event-definitions/{eventName}",
        "parameters" : [ {
          "name" : "eventName",
          "in" : "path",
          "description" : "The name of the event definition.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "No content",
            "content" : { }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "private_apps" : [ "behavioral_events.event_definitions.read_write" ]
        }, {
          "oauth2" : [ "behavioral_events.event_definitions.read_write" ]
        } ]
      },
      "patch" : {
        "tags" : [ "Event definition" ],
        "summary" : "Update a custom event definition",
        "description" : "Update a specific custom event definition by name.",
        "operationId" : "patch-/events/v3/event-definitions/{eventName}",
        "parameters" : [ {
          "name" : "eventName",
          "in" : "path",
          "description" : "The internal name of the custom event.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ExternalBehavioralEventTypeDefinitionPatch"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExternalBehavioralEventTypeDefinition"
                }
              }
            }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "private_apps" : [ "behavioral_events.event_definitions.read_write" ]
        }, {
          "oauth2" : [ "behavioral_events.event_definitions.read_write" ]
        } ]
      }
    },
    "/events/v3/event-definitions" : {
      "get" : {
        "tags" : [ "Event definition" ],
        "summary" : "Retrieve event definitions",
        "description" : "Retrieve existing custom event definitions.",
        "operationId" : "get-/events/v3/event-definitions",
        "parameters" : [ {
          "name" : "searchString",
          "in" : "query",
          "description" : "Characters in the event name that the user is searching for. This search is a naive “contains” search, no fuzzy matching is done.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "after",
          "in" : "query",
          "description" : "The paging cursor token of the last successfully read resource will be returned as the `paging.next.after` JSON property of a paged response containing more results.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "The maximum number of results to display per page.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "includeProperties",
          "in" : "query",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "sortOrder",
          "in" : "query",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CollectionResponseWithTotalExternalBehavioralEventTypeDefinitionForwardPaging"
                }
              }
            }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "private_apps" : [ "behavioral_events.event_definitions.read_write" ]
        }, {
          "oauth2" : [ "behavioral_events.event_definitions.read_write" ]
        } ]
      },
      "post" : {
        "tags" : [ "Event definition" ],
        "summary" : "Create custom event definition",
        "description" : "Create a custom event definition.",
        "operationId" : "post-/events/v3/event-definitions",
        "parameters" : [ ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ExternalBehavioralEventTypeDefinitionEgg"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExternalBehavioralEventTypeDefinition"
                }
              }
            }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "private_apps" : [ "behavioral_events.event_definitions.read_write" ]
        }, {
          "oauth2" : [ "behavioral_events.event_definitions.read_write" ]
        } ]
      }
    },
    "/events/v3/event-definitions/{eventName}/property" : {
      "post" : {
        "tags" : [ "Event definition" ],
        "summary" : "Create a property for an event definition",
        "description" : "Create a new property for an existing event definition.",
        "operationId" : "post-/events/v3/event-definitions/{eventName}/property",
        "parameters" : [ {
          "name" : "eventName",
          "in" : "path",
          "description" : "The internal name of the custom event.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ExternalBehavioralEventPropertyCreate"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Property"
                }
              }
            }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "private_apps" : [ "behavioral_events.event_definitions.read_write" ]
        }, {
          "oauth2" : [ "behavioral_events.event_definitions.read_write" ]
        } ]
      }
    },
    "/events/v3/event-definitions/{eventName}/property/{propertyName}" : {
      "delete" : {
        "tags" : [ "Event definition" ],
        "summary" : "Delete a property from a custom event definition",
        "description" : "Delete an existing property from a custom event definition.",
        "operationId" : "delete-/events/v3/event-definitions/{eventName}/property/{propertyName}",
        "parameters" : [ {
          "name" : "eventName",
          "in" : "path",
          "description" : "The internal name of the custom event.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "propertyName",
          "in" : "path",
          "description" : "The internal name of the property to delete.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "No content",
            "content" : { }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "private_apps" : [ "behavioral_events.event_definitions.read_write" ]
        }, {
          "oauth2" : [ "behavioral_events.event_definitions.read_write" ]
        } ]
      },
      "patch" : {
        "tags" : [ "Event definition" ],
        "summary" : "Update an existing custom event property",
        "description" : "Update an existing property in a custom event definition.",
        "operationId" : "patch-/events/v3/event-definitions/{eventName}/property/{propertyName}",
        "parameters" : [ {
          "name" : "eventName",
          "in" : "path",
          "description" : "The internal name of the custom event.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "propertyName",
          "in" : "path",
          "description" : "The internal name of the property to update.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ExternalBehavioralEventPropertyDefinitionPatch"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Property"
                }
              }
            }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "private_apps" : [ "behavioral_events.event_definitions.read_write" ]
        }, {
          "oauth2" : [ "behavioral_events.event_definitions.read_write" ]
        } ]
      }
    }
  },
  "components" : {
    "schemas" : {
      "RollingPropertyUpdatedOperation" : {
        "title" : "rolling-property-updated",
        "required" : [ "includeObjectsWithNoValueSet", "numberOfDays", "operationType", "operator", "operatorName", "propertyType" ],
        "type" : "object",
        "properties" : {
          "includeObjectsWithNoValueSet" : {
            "type" : "boolean"
          },
          "defaultValue" : {
            "type" : "string"
          },
          "propertyType" : {
            "type" : "string",
            "default" : "rolling-property-updated",
            "enum" : [ "rolling-property-updated" ]
          },
          "operationType" : {
            "type" : "string"
          },
          "numberOfDays" : {
            "type" : "integer",
            "format" : "int32"
          },
          "operatorName" : {
            "type" : "string"
          },
          "operator" : {
            "type" : "string",
            "enum" : [ "UPDATED_IN_LAST_X_DAYS", "NOT_UPDATED_IN_LAST_X_DAYS" ]
          }
        }
      },
      "TodayReference" : {
        "title" : "TODAY",
        "required" : [ "referenceType" ],
        "type" : "object",
        "properties" : {
          "hour" : {
            "type" : "integer",
            "format" : "int32"
          },
          "millisecond" : {
            "type" : "integer",
            "format" : "int32"
          },
          "referenceType" : {
            "type" : "string",
            "default" : "TODAY",
            "enum" : [ "TODAY" ]
          },
          "minute" : {
            "type" : "integer",
            "format" : "int32"
          },
          "second" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "NowReference" : {
        "title" : "NOW",
        "required" : [ "referenceType" ],
        "type" : "object",
        "properties" : {
          "hour" : {
            "type" : "integer",
            "format" : "int32"
          },
          "millisecond" : {
            "type" : "integer",
            "format" : "int32"
          },
          "referenceType" : {
            "type" : "string",
            "default" : "NOW",
            "enum" : [ "NOW" ]
          },
          "minute" : {
            "type" : "integer",
            "format" : "int32"
          },
          "second" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "RangedTimeOperation" : {
        "title" : "rangedtime",
        "required" : [ "includeObjectsWithNoValueSet", "lowerBoundEndpointBehavior", "lowerBoundTimePoint", "operationType", "operator", "operatorName", "propertyParser", "propertyType", "type", "upperBoundEndpointBehavior", "upperBoundTimePoint" ],
        "type" : "object",
        "properties" : {
          "upperBoundEndpointBehavior" : {
            "type" : "string",
            "enum" : [ "INCLUSIVE", "EXCLUSIVE" ]
          },
          "includeObjectsWithNoValueSet" : {
            "type" : "boolean"
          },
          "upperBoundTimePoint" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/DatePoint"
            }, {
              "$ref" : "#/components/schemas/IndexedTimePoint"
            }, {
              "$ref" : "#/components/schemas/PropertyReferencedTime"
            } ]
          },
          "defaultValue" : {
            "type" : "string"
          },
          "propertyType" : {
            "type" : "string",
            "default" : "rangedtime",
            "enum" : [ "rangedtime" ]
          },
          "propertyParser" : {
            "type" : "string",
            "enum" : [ "VALUE", "UPDATED_AT", "ANNIVERSARY", "VALUE_WITH_ZONE_SAME_LOCAL_CONVERSION", "ANNIVERSARY_WITH_ZONE_SAME_LOCAL_CONVERSION" ]
          },
          "operationType" : {
            "type" : "string"
          },
          "lowerBoundEndpointBehavior" : {
            "type" : "string",
            "enum" : [ "INCLUSIVE", "EXCLUSIVE" ]
          },
          "type" : {
            "type" : "string"
          },
          "operatorName" : {
            "type" : "string"
          },
          "operator" : {
            "type" : "string",
            "enum" : [ "IS_BETWEEN", "IS_NOT_BETWEEN" ]
          },
          "lowerBoundTimePoint" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/DatePoint"
            }, {
              "$ref" : "#/components/schemas/IndexedTimePoint"
            }, {
              "$ref" : "#/components/schemas/PropertyReferencedTime"
            } ]
          }
        }
      },
      "ErrorDetail" : {
        "required" : [ "message" ],
        "type" : "object",
        "properties" : {
          "subCategory" : {
            "type" : "string",
            "description" : "A specific category that contains more specific detail about the error"
          },
          "code" : {
            "type" : "string",
            "description" : "The status code associated with the error detail"
          },
          "in" : {
            "type" : "string",
            "description" : "The name of the field or parameter in which the error was found."
          },
          "context" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            },
            "description" : "Context about the error condition",
            "example" : {
              "missingScopes" : [ "scope1", "scope2" ]
            }
          },
          "message" : {
            "type" : "string",
            "description" : "A human readable message describing the error along with remediation steps where appropriate"
          }
        }
      },
      "ForwardPaging" : {
        "type" : "object",
        "properties" : {
          "next" : {
            "$ref" : "#/components/schemas/NextPage"
          }
        }
      },
      "QuarterReference" : {
        "title" : "QUARTER",
        "required" : [ "day", "month", "referenceType" ],
        "type" : "object",
        "properties" : {
          "hour" : {
            "type" : "integer",
            "format" : "int32"
          },
          "month" : {
            "type" : "integer",
            "format" : "int32"
          },
          "millisecond" : {
            "type" : "integer",
            "format" : "int32"
          },
          "referenceType" : {
            "type" : "string",
            "default" : "QUARTER",
            "enum" : [ "QUARTER" ]
          },
          "day" : {
            "type" : "integer",
            "format" : "int32"
          },
          "minute" : {
            "type" : "integer",
            "format" : "int32"
          },
          "second" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "RelativeComparativeTimestampRefineBy" : {
        "title" : "RelativeComparativeTimestampRefineBy",
        "required" : [ "comparison", "timeOffset", "type" ],
        "type" : "object",
        "properties" : {
          "comparison" : {
            "type" : "string",
            "enum" : [ "BEFORE", "AFTER" ]
          },
          "timeOffset" : {
            "$ref" : "#/components/schemas/TimeOffset"
          },
          "type" : {
            "type" : "string",
            "default" : "RelativeComparativeTimestampRefineBy",
            "enum" : [ "RelativeComparativeTimestampRefineBy" ]
          }
        }
      },
      "CalendarDatePropertyOperation" : {
        "title" : "calendar-date",
        "required" : [ "includeObjectsWithNoValueSet", "operationType", "operator", "operatorName", "propertyType", "timeUnit", "timeUnitCount", "useFiscalYear" ],
        "type" : "object",
        "properties" : {
          "useFiscalYear" : {
            "type" : "boolean"
          },
          "fiscalYearStart" : {
            "type" : "string",
            "enum" : [ "JANUARY", "FEBRUARY", "MARCH", "APRIL", "MAY", "JUNE", "JULY", "AUGUST", "SEPTEMBER", "OCTOBER", "NOVEMBER", "DECEMBER" ]
          },
          "includeObjectsWithNoValueSet" : {
            "type" : "boolean"
          },
          "defaultValue" : {
            "type" : "string"
          },
          "propertyType" : {
            "type" : "string",
            "default" : "calendar-date",
            "enum" : [ "calendar-date" ]
          },
          "timeUnitCount" : {
            "type" : "integer",
            "format" : "int32"
          },
          "operationType" : {
            "type" : "string"
          },
          "operatorName" : {
            "type" : "string"
          },
          "operator" : {
            "type" : "string",
            "enum" : [ "IN_THIS_TIME_UNIT", "IN_THIS_TIME_UNIT_SO_FAR", "IN_NEXT_TIME_UNIT", "IN_LAST_TIME_UNIT" ]
          },
          "timeUnit" : {
            "type" : "string",
            "enum" : [ "DAY", "WEEK", "MONTH", "QUARTER", "YEAR" ]
          }
        }
      },
      "ExternalBehavioralEventTypeDefinitionPatch" : {
        "type" : "object",
        "properties" : {
          "description" : {
            "type" : "string",
            "description" : "A description of the event that will be shown as help text in HubSpot."
          },
          "label" : {
            "type" : "string",
            "description" : "Human readable label for the event. Used in HubSpot UI"
          }
        }
      },
      "StringPropertyOperation" : {
        "title" : "string",
        "required" : [ "includeObjectsWithNoValueSet", "operationType", "operator", "operatorName", "propertyType", "value" ],
        "type" : "object",
        "properties" : {
          "includeObjectsWithNoValueSet" : {
            "type" : "boolean"
          },
          "defaultValue" : {
            "type" : "string"
          },
          "propertyType" : {
            "type" : "string",
            "default" : "string",
            "enum" : [ "string" ]
          },
          "operationType" : {
            "type" : "string"
          },
          "value" : {
            "type" : "string"
          },
          "operatorName" : {
            "type" : "string"
          },
          "operator" : {
            "type" : "string",
            "enum" : [ "IS_EQUAL_TO", "IS_NOT_EQUAL_TO", "CONTAINS", "DOES_NOT_CONTAIN", "STARTS_WITH", "ENDS_WITH", "HAS_EVER_BEEN_EQUAL_TO", "HAS_NEVER_BEEN_EQUAL_TO", "HAS_EVER_CONTAINED", "HAS_NEVER_CONTAINED" ]
          }
        }
      },
      "TimeOffset" : {
        "required" : [ "amount", "offsetDirection", "timeUnit" ],
        "type" : "object",
        "properties" : {
          "amount" : {
            "type" : "integer",
            "format" : "int32"
          },
          "offsetDirection" : {
            "type" : "string",
            "enum" : [ "PAST", "FUTURE" ]
          },
          "timeUnit" : {
            "type" : "string",
            "enum" : [ "WEEKS", "DAYS", "HOURS", "MINUTES" ]
          }
        }
      },
      "ExternalBehavioralEventPropertyCreate" : {
        "required" : [ "label", "type" ],
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "Internal property name, which must be used when referencing the property from the API"
          },
          "options" : {
            "type" : "array",
            "description" : "A list of available options for the property if it is an enumeration. NOTE: This field is only applicable for enumerated properties.",
            "items" : {
              "$ref" : "#/components/schemas/OptionInput"
            }
          },
          "description" : {
            "type" : "string",
            "description" : "A description of the property that will be shown as help text in HubSpot."
          },
          "label" : {
            "type" : "string",
            "description" : "Human readable label for the property. Used in HubSpot UI"
          },
          "type" : {
            "type" : "string",
            "description" : "The data type of the property. Can be one of the following: [string, number, enumeration, datetime]"
          }
        }
      },
      "ExternalBehavioralEventTypeDefinitionEgg" : {
        "required" : [ "label", "propertyDefinitions" ],
        "type" : "object",
        "properties" : {
          "propertyDefinitions" : {
            "type" : "array",
            "description" : "List of custom properties on event",
            "items" : {
              "$ref" : "#/components/schemas/ExternalBehavioralEventPropertyCreate"
            }
          },
          "name" : {
            "type" : "string",
            "description" : "Internal event name, which must be used when referencing the event from this event definitions API. If a name is not supplied, one will be generated based on the label. The `name` value will also be used to automatically generate a `fullyQualifiedName` for the event definition, which you'll use when sending event completions to this event. "
          },
          "description" : {
            "type" : "string",
            "description" : "A description of the event that will be shown as help text in HubSpot."
          },
          "label" : {
            "type" : "string",
            "description" : "Human readable label for the event. Used in HubSpot UI"
          },
          "primaryObject" : {
            "type" : "string",
            "description" : "The object type to associate this event to. Can be one of CONTACT, COMPANY, DEAL, TICKET. If no primaryObject is supplied, we will default to associating the event to CONTACT objects."
          }
        }
      },
      "FiscalQuarter" : {
        "title" : "FISCAL_QUARTER",
        "required" : [ "day", "month", "referenceType" ],
        "type" : "object",
        "properties" : {
          "hour" : {
            "type" : "integer",
            "format" : "int32"
          },
          "month" : {
            "type" : "integer",
            "format" : "int32"
          },
          "millisecond" : {
            "type" : "integer",
            "format" : "int32"
          },
          "referenceType" : {
            "type" : "string",
            "default" : "FISCAL_QUARTER",
            "enum" : [ "FISCAL_QUARTER" ]
          },
          "day" : {
            "type" : "integer",
            "format" : "int32"
          },
          "minute" : {
            "type" : "integer",
            "format" : "int32"
          },
          "second" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "YearReference" : {
        "title" : "YEAR",
        "required" : [ "day", "month", "referenceType" ],
        "type" : "object",
        "properties" : {
          "hour" : {
            "type" : "integer",
            "format" : "int32"
          },
          "month" : {
            "type" : "integer",
            "format" : "int32"
          },
          "millisecond" : {
            "type" : "integer",
            "format" : "int32"
          },
          "referenceType" : {
            "type" : "string",
            "default" : "YEAR",
            "enum" : [ "YEAR" ]
          },
          "day" : {
            "type" : "integer",
            "format" : "int32"
          },
          "minute" : {
            "type" : "integer",
            "format" : "int32"
          },
          "second" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "DatePoint" : {
        "title" : "DATE",
        "required" : [ "day", "month", "timeType", "timezoneSource", "year", "zoneId" ],
        "type" : "object",
        "properties" : {
          "month" : {
            "type" : "integer",
            "format" : "int32"
          },
          "hour" : {
            "type" : "integer",
            "format" : "int32"
          },
          "year" : {
            "type" : "integer",
            "format" : "int32"
          },
          "timezoneSource" : {
            "type" : "string",
            "enum" : [ "CUSTOM", "USER", "PORTAL" ]
          },
          "millisecond" : {
            "type" : "integer",
            "format" : "int32"
          },
          "timeType" : {
            "type" : "string",
            "default" : "DATE",
            "enum" : [ "DATE" ]
          },
          "zoneId" : {
            "type" : "string"
          },
          "day" : {
            "type" : "integer",
            "format" : "int32"
          },
          "minute" : {
            "type" : "integer",
            "format" : "int32"
          },
          "second" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "AbsoluteRangedTimestampRefineBy" : {
        "title" : "AbsoluteRangedTimestampRefineBy",
        "required" : [ "lowerTimestamp", "rangeType", "type", "upperTimestamp" ],
        "type" : "object",
        "properties" : {
          "rangeType" : {
            "type" : "string",
            "enum" : [ "BETWEEN", "NOT_BETWEEN" ]
          },
          "upperTimestamp" : {
            "type" : "integer",
            "format" : "int32"
          },
          "lowerTimestamp" : {
            "type" : "integer",
            "format" : "int32"
          },
          "type" : {
            "type" : "string",
            "default" : "AbsoluteRangedTimestampRefineBy",
            "enum" : [ "AbsoluteRangedTimestampRefineBy" ]
          }
        }
      },
      "AllPropertyTypesOperation" : {
        "title" : "alltypes",
        "required" : [ "coalescingRefineBy", "includeObjectsWithNoValueSet", "operationType", "operator", "operatorName", "propertyType" ],
        "type" : "object",
        "properties" : {
          "coalescingRefineBy" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/NumOccurrencesRefineBy"
            }, {
              "$ref" : "#/components/schemas/SetOccurrencesRefineBy"
            } ]
          },
          "includeObjectsWithNoValueSet" : {
            "type" : "boolean"
          },
          "defaultValue" : {
            "type" : "string"
          },
          "pruningRefineBy" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/RelativeComparativeTimestampRefineBy"
            }, {
              "$ref" : "#/components/schemas/RelativeRangedTimestampRefineBy"
            }, {
              "$ref" : "#/components/schemas/AbsoluteComparativeTimestampRefineBy"
            }, {
              "$ref" : "#/components/schemas/AbsoluteRangedTimestampRefineBy"
            }, {
              "$ref" : "#/components/schemas/AllHistoryRefineBy"
            }, {
              "$ref" : "#/components/schemas/TimePointOperation"
            }, {
              "$ref" : "#/components/schemas/RangedTimeOperation"
            } ]
          },
          "propertyType" : {
            "type" : "string",
            "default" : "alltypes",
            "enum" : [ "alltypes" ]
          },
          "operationType" : {
            "type" : "string"
          },
          "operatorName" : {
            "type" : "string"
          },
          "operator" : {
            "type" : "string",
            "enum" : [ "IS_KNOWN", "IS_UNKNOWN", "IS_BLANK", "IS_NOT_BLANK" ]
          }
        }
      },
      "DateTimePropertyOperation" : {
        "title" : "datetime",
        "required" : [ "includeObjectsWithNoValueSet", "operationType", "operator", "operatorName", "propertyType", "requiresTimeZoneConversion", "timestamp" ],
        "type" : "object",
        "properties" : {
          "includeObjectsWithNoValueSet" : {
            "type" : "boolean"
          },
          "defaultValue" : {
            "type" : "string"
          },
          "propertyType" : {
            "type" : "string",
            "default" : "datetime",
            "enum" : [ "datetime" ]
          },
          "requiresTimeZoneConversion" : {
            "type" : "boolean"
          },
          "operationType" : {
            "type" : "string"
          },
          "operatorName" : {
            "type" : "string"
          },
          "operator" : {
            "type" : "string",
            "enum" : [ "IS_BEFORE", "IS_AFTER", "IS_EQUAL_TO", "IS_BEFORE_DATE", "IS_AFTER_DATE" ]
          },
          "timestamp" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "ComparativeDatePropertyOperation" : {
        "title" : "datetime-comparative",
        "required" : [ "comparisonPropertyName", "includeObjectsWithNoValueSet", "operationType", "operator", "operatorName", "propertyType" ],
        "type" : "object",
        "properties" : {
          "includeObjectsWithNoValueSet" : {
            "type" : "boolean"
          },
          "defaultValue" : {
            "type" : "string"
          },
          "propertyType" : {
            "type" : "string",
            "default" : "datetime-comparative",
            "enum" : [ "datetime-comparative" ]
          },
          "defaultComparisonValue" : {
            "type" : "string"
          },
          "operationType" : {
            "type" : "string"
          },
          "comparisonPropertyName" : {
            "type" : "string"
          },
          "operatorName" : {
            "type" : "string"
          },
          "operator" : {
            "type" : "string",
            "enum" : [ "IS_BEFORE", "IS_AFTER" ]
          }
        }
      },
      "ExternalBehavioralEventPropertyDefinitionPatch" : {
        "type" : "object",
        "properties" : {
          "options" : {
            "type" : "array",
            "description" : "A list of available options for the property if it is an enumeration. NOTE: This field is only applicable for enumerated properties.",
            "items" : {
              "$ref" : "#/components/schemas/OptionInput"
            }
          },
          "description" : {
            "type" : "string",
            "description" : "A description of the property that will be shown as help text in HubSpot."
          },
          "label" : {
            "type" : "string",
            "description" : "Human readable label for the property. Used in HubSpot UI"
          }
        }
      },
      "PropertyModificationMetadata" : {
        "required" : [ "archivable", "readOnlyDefinition", "readOnlyValue" ],
        "type" : "object",
        "properties" : {
          "readOnlyOptions" : {
            "type" : "boolean"
          },
          "readOnlyValue" : {
            "type" : "boolean"
          },
          "readOnlyDefinition" : {
            "type" : "boolean"
          },
          "archivable" : {
            "type" : "boolean"
          }
        }
      },
      "ExternalBehavioralEventTypeDefinition" : {
        "required" : [ "archived", "associations", "fullyQualifiedName", "id", "labels", "name", "objectTypeId", "properties" ],
        "type" : "object",
        "properties" : {
          "associations" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AssociationDefinition"
            }
          },
          "objectTypeId" : {
            "type" : "string"
          },
          "createdUserId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "trackingType" : {
            "type" : "string",
            "enum" : [ "VISITED_URL", "CLICKED_ELEMENT", "CUSTOM_SCRIPT", "MANUAL", "IMPORT", "PROPERTY_CHANGE", "COMBO_EVENT", "WEBHOOK" ]
          },
          "description" : {
            "type" : "string"
          },
          "primaryObjectId" : {
            "type" : "string"
          },
          "comboEventRules" : {
            "$ref" : "#/components/schemas/ComboEventRuleBranch"
          },
          "fullyQualifiedName" : {
            "type" : "string"
          },
          "primaryObject" : {
            "type" : "string"
          },
          "labels" : {
            "$ref" : "#/components/schemas/BehavioralEventTypeDefinitionLabels"
          },
          "archived" : {
            "type" : "boolean"
          },
          "createdAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "name" : {
            "type" : "string"
          },
          "id" : {
            "type" : "string"
          },
          "properties" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Property"
            }
          }
        }
      },
      "MultiStringPropertyOperation" : {
        "title" : "multistring",
        "required" : [ "coalescingRefineBy", "includeObjectsWithNoValueSet", "operationType", "operator", "operatorName", "propertyType", "values" ],
        "type" : "object",
        "properties" : {
          "coalescingRefineBy" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/NumOccurrencesRefineBy"
            }, {
              "$ref" : "#/components/schemas/SetOccurrencesRefineBy"
            } ]
          },
          "includeObjectsWithNoValueSet" : {
            "type" : "boolean"
          },
          "defaultValue" : {
            "type" : "string"
          },
          "pruningRefineBy" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/RelativeComparativeTimestampRefineBy"
            }, {
              "$ref" : "#/components/schemas/RelativeRangedTimestampRefineBy"
            }, {
              "$ref" : "#/components/schemas/AbsoluteComparativeTimestampRefineBy"
            }, {
              "$ref" : "#/components/schemas/AbsoluteRangedTimestampRefineBy"
            }, {
              "$ref" : "#/components/schemas/AllHistoryRefineBy"
            }, {
              "$ref" : "#/components/schemas/TimePointOperation"
            }, {
              "$ref" : "#/components/schemas/RangedTimeOperation"
            } ]
          },
          "propertyType" : {
            "type" : "string",
            "default" : "multistring",
            "enum" : [ "multistring" ]
          },
          "values" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "operationType" : {
            "type" : "string"
          },
          "operatorName" : {
            "type" : "string"
          },
          "operator" : {
            "type" : "string",
            "enum" : [ "IS_EQUAL_TO", "IS_NOT_EQUAL_TO", "CONTAINS", "DOES_NOT_CONTAIN", "STARTS_WITH", "ENDS_WITH" ]
          }
        }
      },
      "IndexOffset" : {
        "type" : "object",
        "properties" : {
          "milliseconds" : {
            "type" : "integer",
            "format" : "int32"
          },
          "hours" : {
            "type" : "integer",
            "format" : "int32"
          },
          "seconds" : {
            "type" : "integer",
            "format" : "int32"
          },
          "months" : {
            "type" : "integer",
            "format" : "int32"
          },
          "weeks" : {
            "type" : "integer",
            "format" : "int32"
          },
          "minutes" : {
            "type" : "integer",
            "format" : "int32"
          },
          "quarters" : {
            "type" : "integer",
            "format" : "int32"
          },
          "days" : {
            "type" : "integer",
            "format" : "int32"
          },
          "years" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "Option" : {
        "required" : [ "hidden", "label", "value" ],
        "type" : "object",
        "properties" : {
          "hidden" : {
            "type" : "boolean",
            "description" : "Whether the option is displayed in HubSpot's UI.",
            "example" : false
          },
          "displayOrder" : {
            "type" : "integer",
            "description" : "The position of the item relative to others in the list.",
            "format" : "int32"
          },
          "description" : {
            "type" : "string",
            "description" : "A description of the option.",
            "example" : ""
          },
          "label" : {
            "type" : "string",
            "description" : "A user-friendly label that identifies the option.",
            "example" : ""
          },
          "value" : {
            "type" : "string",
            "description" : "The actual value of the option.",
            "example" : ""
          }
        },
        "description" : "A HubSpot property option"
      },
      "PropertyFilter" : {
        "title" : "PROPERTY",
        "required" : [ "filterType", "operation", "property" ],
        "type" : "object",
        "properties" : {
          "frameworkFilterId" : {
            "type" : "integer",
            "format" : "int64"
          },
          "property" : {
            "type" : "string"
          },
          "filterType" : {
            "type" : "string",
            "default" : "PROPERTY",
            "enum" : [ "PROPERTY" ]
          },
          "operation" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/BoolPropertyOperation"
            }, {
              "$ref" : "#/components/schemas/NumberPropertyOperation"
            }, {
              "$ref" : "#/components/schemas/StringPropertyOperation"
            }, {
              "$ref" : "#/components/schemas/DateTimePropertyOperation"
            }, {
              "$ref" : "#/components/schemas/RangedDatePropertyOperation"
            }, {
              "$ref" : "#/components/schemas/ComparativeDatePropertyOperation"
            }, {
              "$ref" : "#/components/schemas/ComparativePropertyUpdatedOperation"
            }, {
              "$ref" : "#/components/schemas/RollingDateRangePropertyOperation"
            }, {
              "$ref" : "#/components/schemas/RollingPropertyUpdatedOperation"
            }, {
              "$ref" : "#/components/schemas/EnumerationPropertyOperation"
            }, {
              "$ref" : "#/components/schemas/AllPropertyTypesOperation"
            }, {
              "$ref" : "#/components/schemas/RangedNumberPropertyOperation"
            }, {
              "$ref" : "#/components/schemas/MultiStringPropertyOperation"
            }, {
              "$ref" : "#/components/schemas/DatePropertyOperation"
            }, {
              "$ref" : "#/components/schemas/CalendarDatePropertyOperation"
            }, {
              "$ref" : "#/components/schemas/TimePointOperation"
            }, {
              "$ref" : "#/components/schemas/RangedTimeOperation"
            } ]
          }
        }
      },
      "EnumerationPropertyOperation" : {
        "title" : "enumeration",
        "required" : [ "includeObjectsWithNoValueSet", "operationType", "operator", "operatorName", "propertyType", "values" ],
        "type" : "object",
        "properties" : {
          "includeObjectsWithNoValueSet" : {
            "type" : "boolean"
          },
          "defaultValue" : {
            "type" : "string"
          },
          "propertyType" : {
            "type" : "string",
            "default" : "enumeration",
            "enum" : [ "enumeration" ]
          },
          "values" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "operationType" : {
            "type" : "string"
          },
          "operatorName" : {
            "type" : "string"
          },
          "operator" : {
            "type" : "string",
            "enum" : [ "IS_ANY_OF", "IS_NONE_OF", "IS_EXACTLY", "IS_NOT_EXACTLY", "CONTAINS_ALL", "DOES_NOT_CONTAIN_ALL", "HAS_EVER_BEEN_ANY_OF", "HAS_NEVER_BEEN_ANY_OF", "HAS_EVER_BEEN_EXACTLY", "HAS_NEVER_BEEN_EXACTLY", "HAS_EVER_CONTAINED_ALL", "HAS_NEVER_CONTAINED_ALL" ]
          }
        }
      },
      "WeekReference" : {
        "title" : "WEEK",
        "required" : [ "dayOfWeek", "referenceType" ],
        "type" : "object",
        "properties" : {
          "dayOfWeek" : {
            "type" : "string",
            "enum" : [ "MONDAY", "TUESDAY", "WEDNESDAY", "THURSDAY", "FRIDAY", "SATURDAY", "SUNDAY" ]
          },
          "hour" : {
            "type" : "integer",
            "format" : "int32"
          },
          "millisecond" : {
            "type" : "integer",
            "format" : "int32"
          },
          "referenceType" : {
            "type" : "string",
            "default" : "WEEK",
            "enum" : [ "WEEK" ]
          },
          "minute" : {
            "type" : "integer",
            "format" : "int32"
          },
          "second" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "RangedDatePropertyOperation" : {
        "title" : "datetime-ranged",
        "required" : [ "includeObjectsWithNoValueSet", "lowerBoundTimestamp", "operationType", "operator", "operatorName", "propertyType", "requiresTimeZoneConversion", "upperBoundTimestamp" ],
        "type" : "object",
        "properties" : {
          "lowerBoundTimestamp" : {
            "type" : "integer",
            "format" : "int32"
          },
          "includeObjectsWithNoValueSet" : {
            "type" : "boolean"
          },
          "defaultValue" : {
            "type" : "string"
          },
          "propertyType" : {
            "type" : "string",
            "default" : "datetime-ranged",
            "enum" : [ "datetime-ranged" ]
          },
          "upperBoundTimestamp" : {
            "type" : "integer",
            "format" : "int32"
          },
          "requiresTimeZoneConversion" : {
            "type" : "boolean"
          },
          "operationType" : {
            "type" : "string"
          },
          "operatorName" : {
            "type" : "string"
          },
          "operator" : {
            "type" : "string",
            "enum" : [ "IS_BETWEEN", "IS_NOT_BETWEEN" ]
          }
        }
      },
      "IndexedTimePoint" : {
        "title" : "INDEXED",
        "required" : [ "indexReference", "timeType", "timezoneSource", "zoneId" ],
        "type" : "object",
        "properties" : {
          "offset" : {
            "$ref" : "#/components/schemas/IndexOffset"
          },
          "timezoneSource" : {
            "type" : "string",
            "enum" : [ "CUSTOM", "USER", "PORTAL" ]
          },
          "indexReference" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/NowReference"
            }, {
              "$ref" : "#/components/schemas/TodayReference"
            }, {
              "$ref" : "#/components/schemas/WeekReference"
            }, {
              "$ref" : "#/components/schemas/MonthReference"
            }, {
              "$ref" : "#/components/schemas/QuarterReference"
            }, {
              "$ref" : "#/components/schemas/FiscalQuarter"
            }, {
              "$ref" : "#/components/schemas/YearReference"
            }, {
              "$ref" : "#/components/schemas/FiscalYear"
            } ]
          },
          "timeType" : {
            "type" : "string",
            "default" : "INDEXED",
            "enum" : [ "INDEXED" ]
          },
          "zoneId" : {
            "type" : "string"
          }
        }
      },
      "RangedNumberPropertyOperation" : {
        "title" : "number-ranged",
        "required" : [ "includeObjectsWithNoValueSet", "lowerBound", "operationType", "operator", "operatorName", "propertyType", "upperBound" ],
        "type" : "object",
        "properties" : {
          "includeObjectsWithNoValueSet" : {
            "type" : "boolean"
          },
          "upperBound" : {
            "type" : "integer",
            "format" : "int32"
          },
          "defaultValue" : {
            "type" : "string"
          },
          "propertyType" : {
            "type" : "string",
            "default" : "number-ranged",
            "enum" : [ "number-ranged" ]
          },
          "lowerBound" : {
            "type" : "integer",
            "format" : "int32"
          },
          "operationType" : {
            "type" : "string"
          },
          "operatorName" : {
            "type" : "string"
          },
          "operator" : {
            "type" : "string",
            "enum" : [ "IS_BETWEEN", "IS_NOT_BETWEEN" ]
          }
        }
      },
      "FiscalYear" : {
        "title" : "FISCAL_YEAR",
        "required" : [ "day", "month", "referenceType" ],
        "type" : "object",
        "properties" : {
          "hour" : {
            "type" : "integer",
            "format" : "int32"
          },
          "month" : {
            "type" : "integer",
            "format" : "int32"
          },
          "millisecond" : {
            "type" : "integer",
            "format" : "int32"
          },
          "referenceType" : {
            "type" : "string",
            "default" : "FISCAL_YEAR",
            "enum" : [ "FISCAL_YEAR" ]
          },
          "day" : {
            "type" : "integer",
            "format" : "int32"
          },
          "minute" : {
            "type" : "integer",
            "format" : "int32"
          },
          "second" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "RollingDateRangePropertyOperation" : {
        "title" : "datetime-rolling",
        "required" : [ "includeObjectsWithNoValueSet", "numberOfDays", "operationType", "operator", "operatorName", "propertyType", "requiresTimeZoneConversion" ],
        "type" : "object",
        "properties" : {
          "includeObjectsWithNoValueSet" : {
            "type" : "boolean"
          },
          "defaultValue" : {
            "type" : "string"
          },
          "propertyType" : {
            "type" : "string",
            "default" : "datetime-rolling",
            "enum" : [ "datetime-rolling" ]
          },
          "requiresTimeZoneConversion" : {
            "type" : "boolean"
          },
          "operationType" : {
            "type" : "string"
          },
          "numberOfDays" : {
            "type" : "integer",
            "format" : "int32"
          },
          "operatorName" : {
            "type" : "string"
          },
          "operator" : {
            "type" : "string",
            "enum" : [ "IS_LESS_THAN_X_DAYS_AGO", "IS_MORE_THAN_X_DAYS_AGO", "IS_LESS_THAN_X_DAYS_FROM_NOW", "IS_MORE_THAN_X_DAYS_FROM_NOW" ]
          }
        }
      },
      "BoolPropertyOperation" : {
        "title" : "bool",
        "required" : [ "includeObjectsWithNoValueSet", "operationType", "operator", "operatorName", "propertyType", "value" ],
        "type" : "object",
        "properties" : {
          "includeObjectsWithNoValueSet" : {
            "type" : "boolean"
          },
          "defaultValue" : {
            "type" : "string"
          },
          "propertyType" : {
            "type" : "string",
            "default" : "bool",
            "enum" : [ "bool" ]
          },
          "operationType" : {
            "type" : "string"
          },
          "value" : {
            "type" : "boolean"
          },
          "operatorName" : {
            "type" : "string"
          },
          "operator" : {
            "type" : "string",
            "enum" : [ "IS_EQUAL_TO", "IS_NOT_EQUAL_TO", "HAS_EVER_BEEN_EQUAL_TO", "HAS_NEVER_BEEN_EQUAL_TO" ]
          }
        }
      },
      "NumberPropertyOperation" : {
        "title" : "number",
        "required" : [ "includeObjectsWithNoValueSet", "operationType", "operator", "operatorName", "propertyType", "value" ],
        "type" : "object",
        "properties" : {
          "includeObjectsWithNoValueSet" : {
            "type" : "boolean"
          },
          "defaultValue" : {
            "type" : "string"
          },
          "propertyType" : {
            "type" : "string",
            "default" : "number",
            "enum" : [ "number" ]
          },
          "operationType" : {
            "type" : "string"
          },
          "value" : {
            "type" : "number"
          },
          "operatorName" : {
            "type" : "string"
          },
          "operator" : {
            "type" : "string",
            "enum" : [ "IS_EQUAL_TO", "IS_NOT_EQUAL_TO", "IS_GREATER_THAN", "IS_GREATER_THAN_OR_EQUAL_TO", "IS_LESS_THAN", "IS_LESS_THAN_OR_EQUAL_TO", "HAS_EVER_BEEN_EQUAL_TO", "HAS_NEVER_BEEN_EQUAL_TO" ]
          }
        }
      },
      "TimePointOperation" : {
        "title" : "timepoint",
        "required" : [ "endpointBehavior", "includeObjectsWithNoValueSet", "operationType", "operator", "operatorName", "propertyParser", "propertyType", "timePoint", "type" ],
        "type" : "object",
        "properties" : {
          "endpointBehavior" : {
            "type" : "string",
            "enum" : [ "INCLUSIVE", "EXCLUSIVE" ]
          },
          "includeObjectsWithNoValueSet" : {
            "type" : "boolean"
          },
          "defaultValue" : {
            "type" : "string"
          },
          "propertyType" : {
            "type" : "string",
            "default" : "timepoint",
            "enum" : [ "timepoint" ]
          },
          "propertyParser" : {
            "type" : "string",
            "enum" : [ "VALUE", "UPDATED_AT", "ANNIVERSARY", "VALUE_WITH_ZONE_SAME_LOCAL_CONVERSION", "ANNIVERSARY_WITH_ZONE_SAME_LOCAL_CONVERSION" ]
          },
          "timePoint" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/DatePoint"
            }, {
              "$ref" : "#/components/schemas/IndexedTimePoint"
            }, {
              "$ref" : "#/components/schemas/PropertyReferencedTime"
            } ]
          },
          "operationType" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          },
          "operatorName" : {
            "type" : "string"
          },
          "operator" : {
            "type" : "string",
            "enum" : [ "IS_BEFORE", "IS_AFTER" ]
          }
        }
      },
      "NumOccurrencesRefineBy" : {
        "title" : "NumOccurrencesRefineBy",
        "required" : [ "type" ],
        "type" : "object",
        "properties" : {
          "maxOccurrences" : {
            "type" : "integer",
            "format" : "int32"
          },
          "type" : {
            "type" : "string",
            "default" : "NumOccurrencesRefineBy",
            "enum" : [ "NumOccurrencesRefineBy" ]
          },
          "minOccurrences" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "MonthReference" : {
        "title" : "MONTH",
        "required" : [ "day", "referenceType" ],
        "type" : "object",
        "properties" : {
          "hour" : {
            "type" : "integer",
            "format" : "int32"
          },
          "millisecond" : {
            "type" : "integer",
            "format" : "int32"
          },
          "referenceType" : {
            "type" : "string",
            "default" : "MONTH",
            "enum" : [ "MONTH" ]
          },
          "day" : {
            "type" : "integer",
            "format" : "int32"
          },
          "minute" : {
            "type" : "integer",
            "format" : "int32"
          },
          "second" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "ComboEventRule" : {
        "required" : [ "count", "eventTypeId", "propertyFilters" ],
        "type" : "object",
        "properties" : {
          "lookbackWindowDays" : {
            "type" : "integer",
            "format" : "int32"
          },
          "eventTypeId" : {
            "type" : "string"
          },
          "propertyFilters" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PropertyFilter"
            }
          },
          "count" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "Property" : {
        "required" : [ "description", "fieldType", "groupName", "label", "name", "options", "type" ],
        "type" : "object",
        "properties" : {
          "hidden" : {
            "type" : "boolean",
            "description" : "Whether or not the property will be hidden from the HubSpot UI. It's recommended that this be set to false for custom properties.",
            "example" : false
          },
          "displayOrder" : {
            "type" : "integer",
            "description" : "The position of the item relative to others in the list.",
            "format" : "int32"
          },
          "description" : {
            "type" : "string",
            "description" : "A summary of the property's purpose.",
            "example" : ""
          },
          "showCurrencySymbol" : {
            "type" : "boolean",
            "description" : "Whether to show the currency symbol in HubSpot's UI.",
            "example" : false
          },
          "type" : {
            "type" : "string",
            "description" : "The data type of the property, such as string or number.",
            "example" : ""
          },
          "hubspotDefined" : {
            "type" : "boolean",
            "description" : "A boolean value set to true for HubSpot default properties.",
            "example" : false
          },
          "createdAt" : {
            "type" : "string",
            "description" : "The timestamp when the property was created, in ISO 8601 format.",
            "format" : "date-time"
          },
          "archived" : {
            "type" : "boolean",
            "description" : "Whether the property is archived.",
            "example" : false
          },
          "options" : {
            "type" : "array",
            "description" : "A list of valid options for the property. This field is required for enumerated properties.",
            "example" : "",
            "items" : {
              "$ref" : "#/components/schemas/Option"
            }
          },
          "hasUniqueValue" : {
            "type" : "boolean",
            "description" : "Whether the property is a unique identifier property.",
            "example" : false
          },
          "calculated" : {
            "type" : "boolean",
            "description" : "Whether the property is a calculated field.",
            "example" : false
          },
          "externalOptions" : {
            "type" : "boolean",
            "description" : "Applicable only for enumeration type properties. Should be set to true with a 'referencedObjectType' of 'OWNER'. Otherwise false.",
            "example" : false
          },
          "updatedAt" : {
            "type" : "string",
            "description" : "The timestamp when the property was last updated, in ISO 8601 format.",
            "format" : "date-time"
          },
          "createdUserId" : {
            "type" : "string",
            "description" : "The ID of the user who created the property.",
            "example" : ""
          },
          "modificationMetadata" : {
            "$ref" : "#/components/schemas/PropertyModificationMetadata"
          },
          "sensitiveDataCategories" : {
            "type" : "array",
            "description" : "When sensitiveData is true, lists the type of sensitive data contained in the property (e.g., \"HIPAA\").",
            "example" : "",
            "items" : {
              "type" : "string"
            }
          },
          "label" : {
            "type" : "string",
            "description" : "The display label for the property.",
            "example" : ""
          },
          "formField" : {
            "type" : "boolean",
            "description" : "Whether the property can appear on forms.",
            "example" : false
          },
          "dataSensitivity" : {
            "type" : "string",
            "description" : "Indicates the sensitivity level of the property, such as \"non_sensitive\", \"sensitive\", or \"highly_sensitive\".",
            "example" : "",
            "enum" : [ "non_sensitive", "sensitive", "highly_sensitive" ]
          },
          "archivedAt" : {
            "type" : "string",
            "description" : "The timestamp when the property was archived, in ISO 8601 format.",
            "format" : "date-time"
          },
          "groupName" : {
            "type" : "string",
            "description" : "The name of the group to which the property is assigned.",
            "example" : ""
          },
          "referencedObjectType" : {
            "type" : "string",
            "description" : "Deprecated. Use externalOptionsReferenceType instead.",
            "example" : ""
          },
          "name" : {
            "type" : "string",
            "description" : "The internal name for the property.",
            "example" : ""
          },
          "calculationFormula" : {
            "type" : "string",
            "description" : "The formula used for calculated properties.",
            "example" : ""
          },
          "fieldType" : {
            "type" : "string",
            "description" : "Determines how the property will appear in HubSpot's UI or on a form. Learn more in the properties API guide.",
            "example" : ""
          },
          "updatedUserId" : {
            "type" : "string"
          }
        },
        "description" : "A HubSpot property"
      },
      "RelativeRangedTimestampRefineBy" : {
        "title" : "RelativeRangedTimestampRefineBy",
        "required" : [ "lowerBoundOffset", "rangeType", "type", "upperBoundOffset" ],
        "type" : "object",
        "properties" : {
          "upperBoundOffset" : {
            "$ref" : "#/components/schemas/TimeOffset"
          },
          "lowerBoundOffset" : {
            "$ref" : "#/components/schemas/TimeOffset"
          },
          "rangeType" : {
            "type" : "string",
            "enum" : [ "BETWEEN", "NOT_BETWEEN" ]
          },
          "type" : {
            "type" : "string",
            "default" : "RelativeRangedTimestampRefineBy",
            "enum" : [ "RelativeRangedTimestampRefineBy" ]
          }
        }
      },
      "PropertyReferencedTime" : {
        "title" : "PROPERTY_REFERENCED",
        "required" : [ "property", "referenceType", "timeType", "timezoneSource", "zoneId" ],
        "type" : "object",
        "properties" : {
          "timezoneSource" : {
            "type" : "string",
            "enum" : [ "CUSTOM", "USER", "PORTAL" ]
          },
          "property" : {
            "type" : "string"
          },
          "timeType" : {
            "type" : "string",
            "default" : "PROPERTY_REFERENCED",
            "enum" : [ "PROPERTY_REFERENCED" ]
          },
          "zoneId" : {
            "type" : "string"
          },
          "referenceType" : {
            "type" : "string",
            "enum" : [ "VALUE", "UPDATED_AT", "ANNIVERSARY", "VALUE_WITH_ZONE_SAME_LOCAL_CONVERSION", "ANNIVERSARY_WITH_ZONE_SAME_LOCAL_CONVERSION" ]
          }
        }
      },
      "OptionInput" : {
        "required" : [ "displayOrder", "hidden", "label", "value" ],
        "type" : "object",
        "properties" : {
          "hidden" : {
            "type" : "boolean"
          },
          "displayOrder" : {
            "type" : "integer",
            "format" : "int32"
          },
          "description" : {
            "type" : "string",
            "description" : "null"
          },
          "label" : {
            "type" : "string",
            "description" : "null"
          },
          "value" : {
            "type" : "string",
            "description" : "null"
          }
        }
      },
      "BehavioralEventTypeDefinitionLabels" : {
        "required" : [ "singular" ],
        "type" : "object",
        "properties" : {
          "plural" : {
            "type" : "string"
          },
          "singular" : {
            "type" : "string"
          }
        }
      },
      "Error" : {
        "required" : [ "category", "correlationId", "message" ],
        "type" : "object",
        "properties" : {
          "subCategory" : {
            "type" : "string",
            "description" : "A specific category that contains more specific detail about the error"
          },
          "context" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            },
            "description" : "Context about the error condition",
            "example" : {
              "invalidPropertyName" : [ "propertyValue" ],
              "missingScopes" : [ "scope1", "scope2" ]
            }
          },
          "correlationId" : {
            "type" : "string",
            "description" : "A unique identifier for the request. Include this value with any error reports or support tickets",
            "format" : "uuid",
            "example" : "aeb5f871-7f07-4993-9211-075dc63e7cbf"
          },
          "links" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "A map of link names to associated URIs containing documentation about the error or recommended remediation steps"
          },
          "message" : {
            "type" : "string",
            "description" : "A human readable message describing the error along with remediation steps where appropriate",
            "example" : "An error occurred"
          },
          "category" : {
            "type" : "string",
            "description" : "The error category"
          },
          "errors" : {
            "type" : "array",
            "description" : "further information about the error",
            "items" : {
              "$ref" : "#/components/schemas/ErrorDetail"
            }
          }
        },
        "example" : {
          "message" : "Invalid input (details will vary based on the error)",
          "correlationId" : "aeb5f871-7f07-4993-9211-075dc63e7cbf",
          "category" : "VALIDATION_ERROR",
          "links" : {
            "knowledge-base" : "https://www.hubspot.com/products/service/knowledge-base"
          }
        }
      },
      "AllHistoryRefineBy" : {
        "title" : "AllHistoryRefineBy",
        "required" : [ "type" ],
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string",
            "default" : "AllHistoryRefineBy",
            "enum" : [ "AllHistoryRefineBy" ]
          }
        }
      },
      "ComparativePropertyUpdatedOperation" : {
        "title" : "property-updated-comparative",
        "required" : [ "comparisonPropertyName", "includeObjectsWithNoValueSet", "operationType", "operator", "operatorName", "propertyType" ],
        "type" : "object",
        "properties" : {
          "includeObjectsWithNoValueSet" : {
            "type" : "boolean"
          },
          "defaultValue" : {
            "type" : "string"
          },
          "propertyType" : {
            "type" : "string",
            "default" : "property-updated-comparative",
            "enum" : [ "property-updated-comparative" ]
          },
          "defaultComparisonValue" : {
            "type" : "string"
          },
          "operationType" : {
            "type" : "string"
          },
          "comparisonPropertyName" : {
            "type" : "string"
          },
          "operatorName" : {
            "type" : "string"
          },
          "operator" : {
            "type" : "string",
            "enum" : [ "IS_BEFORE", "IS_AFTER" ]
          }
        }
      },
      "SetOccurrencesRefineBy" : {
        "title" : "SetOccurrencesRefineBy",
        "required" : [ "setType", "type" ],
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string",
            "default" : "SetOccurrencesRefineBy",
            "enum" : [ "SetOccurrencesRefineBy" ]
          },
          "setType" : {
            "type" : "string",
            "enum" : [ "ALL", "ALL_INCLUDE_EMPTY", "ANY", "NONE", "NONE_EXCLUDE_EMPTY", "ANY_INCLUDE_EMPTY" ]
          }
        }
      },
      "ComboEventRuleBranch" : {
        "required" : [ "composingRules", "operationType", "ruleBranches" ],
        "type" : "object",
        "properties" : {
          "operationType" : {
            "type" : "string",
            "enum" : [ "AND", "OR" ]
          },
          "composingRules" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ComboEventRule"
            }
          },
          "ruleBranches" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ComboEventRuleBranch"
            }
          }
        }
      },
      "CollectionResponseWithTotalExternalBehavioralEventTypeDefinitionForwardPaging" : {
        "required" : [ "results", "total" ],
        "type" : "object",
        "properties" : {
          "total" : {
            "type" : "integer",
            "format" : "int32"
          },
          "paging" : {
            "$ref" : "#/components/schemas/ForwardPaging"
          },
          "results" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ExternalBehavioralEventTypeDefinition"
            }
          }
        }
      },
      "AssociationDefinition" : {
        "required" : [ "allowsCustomLabels", "cardinality", "category", "fromObjectTypeId", "hasAllAssociatedObjects", "hasCascadingDeletes", "hasUserEnforcedMaxFromObjectIds", "hasUserEnforcedMaxToObjectIds", "hidden", "id", "inverseAllowsCustomLabels", "inverseCardinality", "inverseHasAllAssociatedObjects", "inverseId", "inverseName", "isInversePrimary", "isPrimary", "maxFromObjectIds", "maxToObjectIds", "name", "portalUniqueIdentifier", "toObjectTypeId" ],
        "type" : "object",
        "properties" : {
          "inverseLabel" : {
            "type" : "string",
            "description" : "The label used to describe the reverse relationship in an association.",
            "example" : ""
          },
          "hidden" : {
            "type" : "boolean",
            "description" : "Whether the association is hidden or not.",
            "example" : false
          },
          "allowsCustomLabels" : {
            "type" : "boolean",
            "description" : "Whether custom labels can be used in the association.",
            "example" : false
          },
          "maxFromObjectIds" : {
            "type" : "integer",
            "description" : "The maximum number of source object IDs allowed in the association.",
            "format" : "int32"
          },
          "inverseAllowsCustomLabels" : {
            "type" : "boolean",
            "description" : "Whether the reverse association can also support custom labels.",
            "example" : false
          },
          "isPrimary" : {
            "type" : "boolean",
            "description" : "Whether the association is the primary link between the entities involved.",
            "example" : false
          },
          "hasUserEnforcedMaxToObjectIds" : {
            "type" : "boolean",
            "description" : "Whether a user has set a limit for the number of destination objects.",
            "example" : false
          },
          "hasUserEnforcedMaxFromObjectIds" : {
            "type" : "boolean",
            "description" : "Whether a user has set a limit for the number of source objects.",
            "example" : false
          },
          "id" : {
            "type" : "integer",
            "description" : "The unique ID of the associated object (e.g., a contact ID).",
            "format" : "int32"
          },
          "toObjectTypeId" : {
            "type" : "string",
            "description" : "The ID of the destination object type (e.g., 0-3 for deals).",
            "example" : ""
          },
          "inverseCardinality" : {
            "type" : "string",
            "description" : "The cardinality from the destination object's perspective, either \"ONE_TO_ONE\" or \"ONE_TO_MANY\".",
            "example" : "",
            "enum" : [ "ONE_TO_ONE", "ONE_TO_MANY" ]
          },
          "maxToObjectIds" : {
            "type" : "integer",
            "description" : "The maximum number of destination object IDs allowed in the association.",
            "format" : "int32"
          },
          "hasCascadingDeletes" : {
            "type" : "boolean",
            "description" : "Whether deletions in the association should cause cascading deletes to linked objects.",
            "example" : false
          },
          "fromObjectType" : {
            "type" : "string",
            "description" : "The name of the source object type (e.g,. \"DEAL\" or \"QUOTE\").",
            "example" : "",
            "enum" : [ "CONTACT", "COMPANY", "DEAL", "ENGAGEMENT", "TICKET", "OWNER", "PRODUCT", "LINE_ITEM", "BET_DELIVERABLE_SERVICE", "CONTENT", "CONVERSATION", "BET_ALERT", "PORTAL", "QUOTE", "FORM_SUBMISSION_INBOUNDDB", "QUOTA", "UNSUBSCRIBE", "COMMUNICATION", "FEEDBACK_SUBMISSION", "ATTRIBUTION", "SALESFORCE_SYNC_ERROR", "RESTORABLE_CRM_OBJECT", "HUB", "LANDING_PAGE", "PRODUCT_OR_FOLDER", "TASK", "FORM", "MARKETING_EMAIL", "AD_ACCOUNT", "AD_CAMPAIGN", "AD_GROUP", "AD", "KEYWORD", "CAMPAIGN", "SOCIAL_CHANNEL", "SOCIAL_POST", "SITE_PAGE", "BLOG_POST", "IMPORT", "EXPORT", "CTA", "TASK_TEMPLATE", "AUTOMATION_PLATFORM_FLOW", "OBJECT_LIST", "NOTE", "MEETING_EVENT", "CALL", "EMAIL", "PUBLISHING_TASK", "CONVERSATION_SESSION", "CONTACT_CREATE_ATTRIBUTION", "INVOICE", "MARKETING_EVENT", "CONVERSATION_INBOX", "CHATFLOW", "MEDIA_BRIDGE", "SEQUENCE", "SEQUENCE_STEP", "FORECAST", "SNIPPET", "TEMPLATE", "DEAL_CREATE_ATTRIBUTION", "QUOTE_TEMPLATE", "QUOTE_MODULE", "QUOTE_MODULE_FIELD", "QUOTE_FIELD", "SEQUENCE_ENROLLMENT", "SUBSCRIPTION", "ACCEPTANCE_TEST", "SOCIAL_BROADCAST", "DEAL_SPLIT", "DEAL_REGISTRATION", "GOAL_TARGET", "GOAL_TARGET_GROUP", "PORTAL_OBJECT_SYNC_MESSAGE", "FILE_MANAGER_FILE", "FILE_MANAGER_FOLDER", "SEQUENCE_STEP_ENROLLMENT", "APPROVAL", "APPROVAL_STEP", "CTA_VARIANT", "SALES_DOCUMENT", "DISCOUNT", "FEE", "TAX", "MARKETING_CALENDAR", "PERMISSIONS_TESTING", "PRIVACY_SCANNER_COOKIE", "DATA_SYNC_STATE", "WEB_INTERACTIVE", "PLAYBOOK", "FOLDER", "PLAYBOOK_QUESTION", "PLAYBOOK_SUBMISSION", "PLAYBOOK_SUBMISSION_ANSWER", "COMMERCE_PAYMENT", "GSC_PROPERTY", "SOX_PROTECTED_DUMMY_TYPE", "BLOG_LISTING_PAGE", "QUARANTINED_SUBMISSION", "PAYMENT_SCHEDULE", "PAYMENT_SCHEDULE_INSTALLMENT", "MARKETING_CAMPAIGN_UTM", "DISCOUNT_TEMPLATE", "DISCOUNT_CODE", "FEEDBACK_SURVEY", "CMS_URL", "SALES_TASK", "SALES_WORKLOAD", "USER", "POSTAL_MAIL", "SCHEMAS_BACKEND_TEST", "PAYMENT_LINK", "SUBMISSION_TAG", "CAMPAIGN_STEP", "SCHEDULING_PAGE", "SOX_PROTECTED_TEST_TYPE", "ORDER", "MARKETING_SMS", "PARTNER_ACCOUNT", "CAMPAIGN_TEMPLATE", "CAMPAIGN_TEMPLATE_STEP", "PLAYLIST", "CLIP", "CAMPAIGN_BUDGET_ITEM", "CAMPAIGN_SPEND_ITEM", "MIC", "CONTENT_AUDIT", "CONTENT_AUDIT_PAGE", "PLAYLIST_FOLDER", "LEAD", "ABANDONED_CART", "EXTERNAL_WEB_URL", "VIEW", "VIEW_BLOCK", "ROSTER", "CART", "AUTOMATION_PLATFORM_FLOW_ACTION", "SOCIAL_PROFILE", "PARTNER_CLIENT", "ROSTER_MEMBER", "MARKETING_EVENT_ATTENDANCE", "ALL_PAGES", "AI_FORECAST", "CRM_PIPELINES_DUMMY_TYPE", "KNOWLEDGE_ARTICLE", "PROPERTY_INFO", "DATA_PRIVACY_CONSENT", "GOAL_TEMPLATE", "SCORE_CONFIGURATION", "AUDIENCE", "PARTNER_CLIENT_REVENUE", "AUTOMATION_JOURNEY", "COMBO_EVENT_CONFIGURATION", "CRM_OBJECTS_DUMMY_TYPE", "CASE_STUDY", "SERVICE", "PODCAST_EPISODE", "PARTNER_SERVICE", "UNKNOWN" ]
          },
          "toObjectType" : {
            "type" : "string",
            "description" : "The name of the destination object type (e.g,. \"DEAL\" or \"QUOTE\").",
            "example" : "",
            "enum" : [ "CONTACT", "COMPANY", "DEAL", "ENGAGEMENT", "TICKET", "OWNER", "PRODUCT", "LINE_ITEM", "BET_DELIVERABLE_SERVICE", "CONTENT", "CONVERSATION", "BET_ALERT", "PORTAL", "QUOTE", "FORM_SUBMISSION_INBOUNDDB", "QUOTA", "UNSUBSCRIBE", "COMMUNICATION", "FEEDBACK_SUBMISSION", "ATTRIBUTION", "SALESFORCE_SYNC_ERROR", "RESTORABLE_CRM_OBJECT", "HUB", "LANDING_PAGE", "PRODUCT_OR_FOLDER", "TASK", "FORM", "MARKETING_EMAIL", "AD_ACCOUNT", "AD_CAMPAIGN", "AD_GROUP", "AD", "KEYWORD", "CAMPAIGN", "SOCIAL_CHANNEL", "SOCIAL_POST", "SITE_PAGE", "BLOG_POST", "IMPORT", "EXPORT", "CTA", "TASK_TEMPLATE", "AUTOMATION_PLATFORM_FLOW", "OBJECT_LIST", "NOTE", "MEETING_EVENT", "CALL", "EMAIL", "PUBLISHING_TASK", "CONVERSATION_SESSION", "CONTACT_CREATE_ATTRIBUTION", "INVOICE", "MARKETING_EVENT", "CONVERSATION_INBOX", "CHATFLOW", "MEDIA_BRIDGE", "SEQUENCE", "SEQUENCE_STEP", "FORECAST", "SNIPPET", "TEMPLATE", "DEAL_CREATE_ATTRIBUTION", "QUOTE_TEMPLATE", "QUOTE_MODULE", "QUOTE_MODULE_FIELD", "QUOTE_FIELD", "SEQUENCE_ENROLLMENT", "SUBSCRIPTION", "ACCEPTANCE_TEST", "SOCIAL_BROADCAST", "DEAL_SPLIT", "DEAL_REGISTRATION", "GOAL_TARGET", "GOAL_TARGET_GROUP", "PORTAL_OBJECT_SYNC_MESSAGE", "FILE_MANAGER_FILE", "FILE_MANAGER_FOLDER", "SEQUENCE_STEP_ENROLLMENT", "APPROVAL", "APPROVAL_STEP", "CTA_VARIANT", "SALES_DOCUMENT", "DISCOUNT", "FEE", "TAX", "MARKETING_CALENDAR", "PERMISSIONS_TESTING", "PRIVACY_SCANNER_COOKIE", "DATA_SYNC_STATE", "WEB_INTERACTIVE", "PLAYBOOK", "FOLDER", "PLAYBOOK_QUESTION", "PLAYBOOK_SUBMISSION", "PLAYBOOK_SUBMISSION_ANSWER", "COMMERCE_PAYMENT", "GSC_PROPERTY", "SOX_PROTECTED_DUMMY_TYPE", "BLOG_LISTING_PAGE", "QUARANTINED_SUBMISSION", "PAYMENT_SCHEDULE", "PAYMENT_SCHEDULE_INSTALLMENT", "MARKETING_CAMPAIGN_UTM", "DISCOUNT_TEMPLATE", "DISCOUNT_CODE", "FEEDBACK_SURVEY", "CMS_URL", "SALES_TASK", "SALES_WORKLOAD", "USER", "POSTAL_MAIL", "SCHEMAS_BACKEND_TEST", "PAYMENT_LINK", "SUBMISSION_TAG", "CAMPAIGN_STEP", "SCHEDULING_PAGE", "SOX_PROTECTED_TEST_TYPE", "ORDER", "MARKETING_SMS", "PARTNER_ACCOUNT", "CAMPAIGN_TEMPLATE", "CAMPAIGN_TEMPLATE_STEP", "PLAYLIST", "CLIP", "CAMPAIGN_BUDGET_ITEM", "CAMPAIGN_SPEND_ITEM", "MIC", "CONTENT_AUDIT", "CONTENT_AUDIT_PAGE", "PLAYLIST_FOLDER", "LEAD", "ABANDONED_CART", "EXTERNAL_WEB_URL", "VIEW", "VIEW_BLOCK", "ROSTER", "CART", "AUTOMATION_PLATFORM_FLOW_ACTION", "SOCIAL_PROFILE", "PARTNER_CLIENT", "ROSTER_MEMBER", "MARKETING_EVENT_ATTENDANCE", "ALL_PAGES", "AI_FORECAST", "CRM_PIPELINES_DUMMY_TYPE", "KNOWLEDGE_ARTICLE", "PROPERTY_INFO", "DATA_PRIVACY_CONSENT", "GOAL_TEMPLATE", "SCORE_CONFIGURATION", "AUDIENCE", "PARTNER_CLIENT_REVENUE", "AUTOMATION_JOURNEY", "COMBO_EVENT_CONFIGURATION", "CRM_OBJECTS_DUMMY_TYPE", "CASE_STUDY", "SERVICE", "PODCAST_EPISODE", "PARTNER_SERVICE", "UNKNOWN" ]
          },
          "label" : {
            "type" : "string",
            "description" : "The label given to an association.",
            "example" : ""
          },
          "inverseId" : {
            "type" : "integer",
            "description" : "The unique ID for the inverse side of the association.",
            "format" : "int32"
          },
          "cardinality" : {
            "type" : "string",
            "description" : "The cardinality from the source object's perspective, either \"ONE_TO_ONE\" or \"ONE_TO_MANY\".",
            "example" : "",
            "enum" : [ "ONE_TO_ONE", "ONE_TO_MANY" ]
          },
          "inverseName" : {
            "type" : "string",
            "description" : "The name used to describe the inverse relationship in this association",
            "example" : ""
          },
          "hasAllAssociatedObjects" : {
            "type" : "boolean",
            "description" : "Whether all potential linked objects are included in the association",
            "example" : false
          },
          "inverseHasAllAssociatedObjects" : {
            "type" : "boolean",
            "description" : "Whether all potential reverse linked objects are included in the association.",
            "example" : false
          },
          "fromObjectTypeId" : {
            "type" : "string",
            "description" : "The ID of the source object type (e.g., 0-1 for contacts).",
            "example" : ""
          },
          "portalUniqueIdentifier" : {
            "type" : "string",
            "description" : "A unique across-portal ID applied to the association.",
            "example" : ""
          },
          "isInversePrimary" : {
            "type" : "boolean",
            "description" : "Whether the inverse association is considered primary.",
            "example" : false
          },
          "name" : {
            "type" : "string",
            "description" : "For labeled association types, the internal name of the association.",
            "example" : ""
          },
          "category" : {
            "type" : "string",
            "description" : "The category of the association. Can be: \"HUBSPOT_DEFINED\", \"USER_DEFINED\", or \"INTEGRATOR_DEFINED\"",
            "example" : "",
            "enum" : [ "HUBSPOT_DEFINED", "USER_DEFINED", "INTEGRATOR_DEFINED" ]
          }
        },
        "description" : "The definition of an association"
      },
      "DatePropertyOperation" : {
        "title" : "date",
        "required" : [ "day", "includeObjectsWithNoValueSet", "month", "operationType", "operator", "operatorName", "propertyType", "year" ],
        "type" : "object",
        "properties" : {
          "month" : {
            "type" : "string",
            "enum" : [ "JAN", "FEB", "MAR", "APR", "MAY", "JUN", "JUL", "AUG", "SEP", "OCT", "NOV", "DEC" ]
          },
          "includeObjectsWithNoValueSet" : {
            "type" : "boolean"
          },
          "year" : {
            "type" : "integer",
            "format" : "int32"
          },
          "defaultValue" : {
            "type" : "string"
          },
          "propertyType" : {
            "type" : "string",
            "default" : "date",
            "enum" : [ "date" ]
          },
          "operationType" : {
            "type" : "string"
          },
          "day" : {
            "type" : "integer",
            "format" : "int32"
          },
          "operatorName" : {
            "type" : "string"
          },
          "operator" : {
            "type" : "string",
            "enum" : [ "EQUAL", "BEFORE", "AFTER" ]
          }
        }
      },
      "NextPage" : {
        "required" : [ "after" ],
        "type" : "object",
        "properties" : {
          "link" : {
            "type" : "string",
            "description" : "A URL that can be used to retrieve the next page results.",
            "example" : ""
          },
          "after" : {
            "type" : "string",
            "description" : "A paging cursor token for retrieving subsequent pages.",
            "example" : ""
          }
        },
        "description" : "Specifies the paging information needed to retrieve the next set of results in a paginated API response"
      },
      "AbsoluteComparativeTimestampRefineBy" : {
        "title" : "AbsoluteComparativeTimestampRefineBy",
        "required" : [ "comparison", "timestamp", "type" ],
        "type" : "object",
        "properties" : {
          "comparison" : {
            "type" : "string",
            "enum" : [ "BEFORE", "AFTER" ]
          },
          "type" : {
            "type" : "string",
            "default" : "AbsoluteComparativeTimestampRefineBy",
            "enum" : [ "AbsoluteComparativeTimestampRefineBy" ]
          },
          "timestamp" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      }
    },
    "responses" : {
      "Error" : {
        "description" : "An error occurred.",
        "content" : {
          "*/*" : {
            "schema" : {
              "$ref" : "#/components/schemas/Error"
            }
          }
        }
      }
    },
    "securitySchemes" : {
      "oauth2" : {
        "type" : "oauth2",
        "flows" : {
          "authorizationCode" : {
            "authorizationUrl" : "https://app.hubspot.com/oauth/authorize",
            "tokenUrl" : "https://api.hubapi.com/oauth/v1/token",
            "scopes" : {
              "behavioral_events.event_definitions.read_write" : "Read from and write to custom behavioral events definitions",
              "analytics.behavioral_events.send" : "Send Behavioral Event Completions"
            }
          }
        }
      },
      "private_apps" : {
        "type" : "apiKey",
        "name" : "private-app",
        "in" : "header"
      }
    }
  },
  "x-hubspot-product-tier-requirements" : {
    "marketing" : "ENTERPRISE",
    "sales" : "ENTERPRISE",
    "service" : "ENTERPRISE",
    "cms" : "ENTERPRISE",
    "commerce" : "FREE",
    "crmHub" : "FREE",
    "dataHub" : "FREE"
  }
}