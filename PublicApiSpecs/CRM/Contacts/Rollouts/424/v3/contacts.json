{
  "openapi" : "3.0.1",
  "info" : {
    "title" : "Contacts",
    "description" : "",
    "version" : "v3",
    "x-hubspot-product-tier-requirements" : {
      "marketing" : "FREE",
      "sales" : "FREE",
      "service" : "FREE",
      "cms" : "FREE"
    },
    "x-hubspot-api-use-case" : "Retrieve a contact by ID to bring that contact data into your external system.",
    "x-hubspot-related-documentation" : [ {
      "name" : "Contacts Guide",
      "url" : "https://developers.hubspot.com/docs/guides/api/crm/objects/contacts"
    } ],
    "x-hubspot-introduction" : "Use the contacts API to create and manage contacts."
  },
  "servers" : [ {
    "url" : "https://api.hubapi.com"
  } ],
  "tags" : [ {
    "name" : "Batch"
  }, {
    "name" : "Basic"
  }, {
    "name" : "Search"
  } ],
  "paths" : {
    "/crm/v3/objects/contacts/batch/read" : {
      "post" : {
        "tags" : [ "Batch" ],
        "summary" : "Retrieve a batch of contacts",
        "description" : "Retrieve a batch of contacts by ID (`contactId`) or unique property value (`idProperty`). ",
        "operationId" : "post-/crm/v3/objects/contacts/batch/read_read",
        "parameters" : [ {
          "name" : "archived",
          "in" : "query",
          "description" : "Whether to return only results that have been archived.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BatchReadInputSimplePublicObjectId"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BatchResponseSimplePublicObject"
                }
              }
            }
          },
          "207" : {
            "description" : "multiple statuses",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BatchResponseSimplePublicObjectWithErrors"
                }
              }
            }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "oauth2" : [ "crm.objects.contacts.read" ]
        }, {
          "private_apps" : [ "crm.objects.contacts.read" ]
        } ]
      }
    },
    "/crm/v3/objects/contacts/{contactId}" : {
      "get" : {
        "tags" : [ "Basic" ],
        "summary" : "Retrieve a contact",
        "description" : "Retrieve a contact by its ID (`contactId`) or by a unique property (`idProperty`). You can specify what is returned using the `properties` query parameter.",
        "operationId" : "get-/crm/v3/objects/contacts/{contactId}_getById",
        "parameters" : [ {
          "name" : "contactId",
          "in" : "path",
          "description" : "The ID of the contact to retrieve.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "properties",
          "in" : "query",
          "description" : "A comma separated list of the properties to be returned in the response. If any of the specified properties are not present on the requested object(s), they will be ignored.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "propertiesWithHistory",
          "in" : "query",
          "description" : "A comma separated list of the properties to be returned along with their history of previous values. If any of the specified properties are not present on the requested object(s), they will be ignored.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "associations",
          "in" : "query",
          "description" : "A comma separated list of object types to retrieve associated IDs for. If any of the specified associations do not exist, they will be ignored.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "archived",
          "in" : "query",
          "description" : "Whether to return only results that have been archived.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SimplePublicObjectWithAssociations"
                }
              }
            }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "oauth2" : [ "crm.objects.contacts.read" ]
        }, {
          "private_apps" : [ "crm.objects.contacts.read" ]
        } ]
      },
      "delete" : {
        "tags" : [ "Basic" ],
        "summary" : "Archive a contact",
        "description" : "Delete a contact by ID. Deleted contacts can be restored within 90 days of deletion. Learn more about the [data impacted by contact deletions](https://knowledge.hubspot.com/privacy-and-consent/understand-restorable-and-permanent-contact-deletions) and how to [restore archived records](https://knowledge.hubspot.com/records/restore-deleted-records).",
        "operationId" : "delete-/crm/v3/objects/contacts/{contactId}_archive",
        "parameters" : [ {
          "name" : "contactId",
          "in" : "path",
          "description" : "The ID of the contact to delete.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "No content",
            "content" : { }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "oauth2" : [ "crm.objects.contacts.write" ]
        }, {
          "private_apps" : [ "crm.objects.contacts.write" ]
        } ]
      },
      "patch" : {
        "tags" : [ "Basic" ],
        "summary" : "Update a contact",
        "description" : "Update a contact by ID (`contactId`) or unique property value (`idProperty`). Provided property values will be overwritten. Read-only and non-existent properties will result in an error. Properties values can be cleared by passing an empty string.",
        "operationId" : "patch-/crm/v3/objects/contacts/{contactId}_update",
        "parameters" : [ {
          "name" : "contactId",
          "in" : "path",
          "description" : "The ID of the contact to update.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SimplePublicObjectInput"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SimplePublicObject"
                }
              }
            }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "oauth2" : [ "crm.objects.contacts.write" ]
        }, {
          "private_apps" : [ "crm.objects.contacts.write" ]
        } ]
      }
    },
    "/crm/v3/objects/contacts/merge" : {
      "post" : {
        "tags" : [ "Basic" ],
        "summary" : "Merge two contacts",
        "description" : "Merge two contact records. Learn more about [merging records](https://knowledge.hubspot.com/records/merge-records). ",
        "operationId" : "post-/crm/v3/objects/contacts/merge_merge",
        "parameters" : [ ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PublicMergeInput"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SimplePublicObject"
                }
              }
            }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "oauth2" : [ "crm.objects.contacts.write" ]
        }, {
          "private_apps" : [ "crm.objects.contacts.write" ]
        } ]
      }
    },
    "/crm/v3/objects/contacts/batch/archive" : {
      "post" : {
        "tags" : [ "Batch" ],
        "summary" : "Archive a batch of contacts",
        "description" : "Archive a batch of contacts by ID. Archived contacts can be restored within 90 days of deletion. Learn more about the [data impacted by contact deletions](https://knowledge.hubspot.com/privacy-and-consent/understand-restorable-and-permanent-contact-deletions) and how to [restore archived records](https://knowledge.hubspot.com/records/restore-deleted-records).",
        "operationId" : "post-/crm/v3/objects/contacts/batch/archive_archive",
        "parameters" : [ ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BatchInputSimplePublicObjectId"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "204" : {
            "description" : "No content",
            "content" : { }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "oauth2" : [ "crm.objects.contacts.write" ]
        }, {
          "private_apps" : [ "crm.objects.contacts.write" ]
        } ]
      }
    },
    "/crm/v3/objects/contacts/batch/create" : {
      "post" : {
        "tags" : [ "Batch" ],
        "summary" : "Create a batch of contacts",
        "description" : "Create a batch of contacts. The `inputs` array can contain a `properties` object to define property values for each record, along with an `associations` array to define [associations](https://developers.hubspot.com/docs/guides/api/crm/associations/associations-v4) with other CRM records.",
        "operationId" : "post-/crm/v3/objects/contacts/batch/create_create",
        "parameters" : [ ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BatchInputSimplePublicObjectBatchInputForCreate"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BatchResponseSimplePublicObject"
                }
              }
            }
          },
          "207" : {
            "description" : "multiple statuses",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BatchResponseSimplePublicObjectWithErrors"
                }
              }
            }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "oauth2" : [ "crm.objects.contacts.write" ]
        }, {
          "private_apps" : [ "crm.objects.contacts.write" ]
        } ]
      }
    },
    "/crm/v3/objects/contacts/batch/update" : {
      "post" : {
        "tags" : [ "Batch" ],
        "summary" : "Update a batch of contacts",
        "description" : "Update a batch of contacts by ID (`contactId`) or unique property value (`idProperty`). Provided property values will be overwritten. Read-only and non-existent properties will result in an error. Properties values can be cleared by passing an empty string.",
        "operationId" : "post-/crm/v3/objects/contacts/batch/update_update",
        "parameters" : [ ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BatchInputSimplePublicObjectBatchInput"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BatchResponseSimplePublicObject"
                }
              }
            }
          },
          "207" : {
            "description" : "multiple statuses",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BatchResponseSimplePublicObjectWithErrors"
                }
              }
            }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "oauth2" : [ "crm.objects.contacts.write" ]
        }, {
          "private_apps" : [ "crm.objects.contacts.write" ]
        } ]
      }
    },
    "/crm/v3/objects/contacts/gdpr-delete" : {
      "post" : {
        "tags" : [ "Basic" ],
        "summary" : "Permanently delete a contact (GDPR-compliant)",
        "description" : "Permanently delete a contact and all associated content to follow GDPR. Use optional property `idProperty` set to `email` to identify contact by email address. If email address is not found, the email address will be added to a blocklist and prevent it from being used in the future. Learn more about [permanently deleting contacts](https://knowledge.hubspot.com/privacy-and-consent/how-do-i-perform-a-gdpr-delete-in-hubspot).",
        "operationId" : "post-/crm/v3/objects/contacts/gdpr-delete_purge",
        "parameters" : [ ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PublicGdprDeleteInput"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "204" : {
            "description" : "No content",
            "content" : { }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "oauth2" : [ "crm.objects.contacts.write" ]
        }, {
          "private_apps" : [ "crm.objects.contacts.write" ]
        } ]
      }
    },
    "/crm/v3/objects/contacts" : {
      "get" : {
        "tags" : [ "Basic" ],
        "summary" : "Retrieve contacts",
        "description" : "Retrieve all contacts, using query parameters to specify the information that gets returned.",
        "operationId" : "get-/crm/v3/objects/contacts_getPage",
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "description" : "The maximum number of results to display per page.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 10
          }
        }, {
          "name" : "after",
          "in" : "query",
          "description" : "The paging cursor token of the last successfully read resource will be returned as the `paging.next.after` JSON property of a paged response containing more results.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "properties",
          "in" : "query",
          "description" : "A comma separated list of the properties to be returned in the response. If any of the specified properties are not present on the requested object(s), they will be ignored.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "propertiesWithHistory",
          "in" : "query",
          "description" : "A comma separated list of the properties to be returned along with their history of previous values. If any of the specified properties are not present on the requested object(s), they will be ignored. Usage of this parameter will reduce the maximum number of objects that can be read by a single request.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "associations",
          "in" : "query",
          "description" : "A comma separated list of object types to retrieve associated IDs for. If any of the specified associations do not exist, they will be ignored.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "archived",
          "in" : "query",
          "description" : "Whether to return only results that have been archived.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CollectionResponseSimplePublicObjectWithAssociationsForwardPaging"
                }
              }
            }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "oauth2" : [ "crm.objects.contacts.read" ]
        }, {
          "private_apps" : [ "crm.objects.contacts.read" ]
        } ]
      },
      "post" : {
        "tags" : [ "Basic" ],
        "summary" : "Create a contact",
        "description" : "Create a single contact. Include a `properties` object to define [property values](https://developers.hubspot.com/docs/guides/api/crm/properties) for the contact, along with an `associations` array to define [associations](https://developers.hubspot.com/docs/guides/api/crm/associations/associations-v4) with other CRM records.",
        "operationId" : "post-/crm/v3/objects/contacts_create",
        "parameters" : [ ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SimplePublicObjectInputForCreate"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SimplePublicObject"
                }
              }
            }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "oauth2" : [ "crm.objects.contacts.write" ]
        }, {
          "private_apps" : [ "crm.objects.contacts.write" ]
        } ]
      }
    },
    "/crm/v3/objects/contacts/batch/upsert" : {
      "post" : {
        "tags" : [ "Batch" ],
        "summary" : "Create or update a batch of contacts",
        "description" : "Upsert a batch of contacts. The `inputs` array can contain a `properties` object to define property values for each record.",
        "operationId" : "post-/crm/v3/objects/contacts/batch/upsert_upsert",
        "parameters" : [ ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BatchInputSimplePublicObjectBatchInputUpsert"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BatchResponseSimplePublicUpsertObject"
                }
              }
            }
          },
          "207" : {
            "description" : "multiple statuses",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BatchResponseSimplePublicUpsertObjectWithErrors"
                }
              }
            }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "oauth2" : [ "crm.objects.contacts.write" ]
        }, {
          "private_apps" : [ "crm.objects.contacts.write" ]
        } ]
      }
    },
    "/crm/v3/objects/contacts/search" : {
      "post" : {
        "tags" : [ "Search" ],
        "summary" : "Search for contacts",
        "description" : "Search for contacts by filtering on properties, searching through associations, and sorting results. Learn more about [CRM search](https://developers.hubspot.com/docs/guides/api/crm/search#make-a-search-request).",
        "operationId" : "post-/crm/v3/objects/contacts/search_doSearch",
        "parameters" : [ ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PublicObjectSearchRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CollectionResponseWithTotalSimplePublicObjectForwardPaging"
                }
              }
            }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "oauth2" : [ "crm.objects.contacts.read" ]
        }, {
          "private_apps" : [ "crm.objects.contacts.read" ]
        } ],
        "x-hubspot-rate-limit-exemptions" : [ "ten-secondly" ]
      }
    }
  },
  "components" : {
    "schemas" : {
      "StandardError" : {
        "required" : [ "category", "context", "errors", "links", "message", "status" ],
        "type" : "object",
        "properties" : {
          "subCategory" : {
            "type" : "object",
            "properties" : { }
          },
          "context" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            }
          },
          "links" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "id" : {
            "type" : "string"
          },
          "category" : {
            "type" : "string"
          },
          "message" : {
            "type" : "string"
          },
          "errors" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ErrorDetail"
            }
          },
          "status" : {
            "type" : "string"
          }
        }
      },
      "CollectionResponseAssociatedId" : {
        "required" : [ "results" ],
        "type" : "object",
        "properties" : {
          "paging" : {
            "$ref" : "#/components/schemas/Paging"
          },
          "results" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AssociatedId"
            }
          }
        }
      },
      "PublicAssociationsForObject" : {
        "required" : [ "to", "types" ],
        "type" : "object",
        "properties" : {
          "types" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AssociationSpec"
            }
          },
          "to" : {
            "$ref" : "#/components/schemas/PublicObjectId"
          }
        }
      },
      "BatchResponseSimplePublicObject" : {
        "required" : [ "completedAt", "results", "startedAt", "status" ],
        "type" : "object",
        "properties" : {
          "completedAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "requestedAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "startedAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "links" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "results" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SimplePublicObject"
            }
          },
          "status" : {
            "type" : "string",
            "enum" : [ "PENDING", "PROCESSING", "CANCELED", "COMPLETE" ]
          }
        }
      },
      "FilterGroup" : {
        "required" : [ "filters" ],
        "type" : "object",
        "properties" : {
          "filters" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Filter"
            }
          }
        }
      },
      "ErrorDetail" : {
        "required" : [ "message" ],
        "type" : "object",
        "properties" : {
          "subCategory" : {
            "type" : "string",
            "description" : "A specific category that contains more specific detail about the error"
          },
          "code" : {
            "type" : "string",
            "description" : "The status code associated with the error detail"
          },
          "in" : {
            "type" : "string",
            "description" : "The name of the field or parameter in which the error was found."
          },
          "context" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            },
            "description" : "Context about the error condition",
            "example" : {
              "missingScopes" : [ "scope1", "scope2" ]
            }
          },
          "message" : {
            "type" : "string",
            "description" : "A human readable message describing the error along with remediation steps where appropriate"
          }
        }
      },
      "ForwardPaging" : {
        "type" : "object",
        "properties" : {
          "next" : {
            "$ref" : "#/components/schemas/NextPage"
          }
        }
      },
      "SimplePublicObjectId" : {
        "required" : [ "id" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          }
        }
      },
      "BatchResponseSimplePublicUpsertObjectWithErrors" : {
        "required" : [ "completedAt", "results", "startedAt", "status" ],
        "type" : "object",
        "properties" : {
          "completedAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "numErrors" : {
            "type" : "integer",
            "format" : "int32"
          },
          "requestedAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "startedAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "links" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "results" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SimplePublicUpsertObject"
            }
          },
          "errors" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/StandardError"
            }
          },
          "status" : {
            "type" : "string",
            "enum" : [ "PENDING", "PROCESSING", "CANCELED", "COMPLETE" ]
          }
        }
      },
      "BatchReadInputSimplePublicObjectId" : {
        "required" : [ "inputs", "properties", "propertiesWithHistory" ],
        "type" : "object",
        "properties" : {
          "propertiesWithHistory" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "idProperty" : {
            "type" : "string",
            "description" : "The name of a property whose values are unique for this object"
          },
          "inputs" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SimplePublicObjectId"
            }
          },
          "properties" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "BatchResponseSimplePublicUpsertObject" : {
        "required" : [ "completedAt", "results", "startedAt", "status" ],
        "type" : "object",
        "properties" : {
          "completedAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "requestedAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "startedAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "links" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "results" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SimplePublicUpsertObject"
            }
          },
          "status" : {
            "type" : "string",
            "enum" : [ "PENDING", "PROCESSING", "CANCELED", "COMPLETE" ]
          }
        }
      },
      "BatchInputSimplePublicObjectId" : {
        "required" : [ "inputs" ],
        "type" : "object",
        "properties" : {
          "inputs" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SimplePublicObjectId"
            }
          }
        }
      },
      "ValueWithTimestamp" : {
        "required" : [ "sourceType", "timestamp", "value" ],
        "type" : "object",
        "properties" : {
          "sourceId" : {
            "type" : "string"
          },
          "sourceType" : {
            "type" : "string"
          },
          "sourceLabel" : {
            "type" : "string"
          },
          "updatedByUserId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "value" : {
            "type" : "string"
          },
          "timestamp" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "BatchInputSimplePublicObjectBatchInputUpsert" : {
        "required" : [ "inputs" ],
        "type" : "object",
        "properties" : {
          "inputs" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SimplePublicObjectBatchInputUpsert"
            }
          }
        }
      },
      "CollectionResponseWithTotalSimplePublicObjectForwardPaging" : {
        "required" : [ "results", "total" ],
        "type" : "object",
        "properties" : {
          "total" : {
            "type" : "integer",
            "format" : "int32"
          },
          "paging" : {
            "$ref" : "#/components/schemas/ForwardPaging"
          },
          "results" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SimplePublicObject"
            }
          }
        }
      },
      "SimplePublicObject" : {
        "required" : [ "createdAt", "id", "properties", "updatedAt" ],
        "type" : "object",
        "properties" : {
          "createdAt" : {
            "type" : "string",
            "format" : "date-time",
            "example" : "2019-10-30T03:30:17.883+00:00"
          },
          "archived" : {
            "type" : "boolean",
            "example" : false
          },
          "archivedAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "propertiesWithHistory" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/ValueWithTimestamp"
              }
            }
          },
          "id" : {
            "type" : "string",
            "example" : "512"
          },
          "objectWriteTraceId" : {
            "type" : "string"
          },
          "properties" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string",
              "nullable" : true
            },
            "example" : {
              "email" : "mark.s@lumon.industries",
              "lastname" : "S.",
              "firstname" : "Mark"
            }
          },
          "updatedAt" : {
            "type" : "string",
            "format" : "date-time",
            "example" : "2019-12-07T16:50:06.678+00:00"
          }
        },
        "example" : {
          "archived" : false,
          "createdAt" : "2019-10-30T03:30:17.883Z",
          "id" : "512",
          "properties" : {
            "company" : "Biglytics",
            "createdate" : "2019-10-30T03:30:17.883Z",
            "email" : "bcooper@biglytics.net",
            "firstname" : "Bryan",
            "lastmodifieddate" : "2019-12-07T16:50:06.678Z",
            "lastname" : "Cooper",
            "phone" : "(877) 929-0687",
            "website" : "biglytics.net"
          },
          "updatedAt" : "2019-12-07T16:50:06.678Z"
        }
      },
      "PublicObjectId" : {
        "required" : [ "id" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          }
        }
      },
      "Paging" : {
        "type" : "object",
        "properties" : {
          "next" : {
            "$ref" : "#/components/schemas/NextPage"
          },
          "prev" : {
            "$ref" : "#/components/schemas/PreviousPage"
          }
        }
      },
      "PublicObjectSearchRequest" : {
        "type" : "object",
        "properties" : {
          "query" : {
            "type" : "string"
          },
          "limit" : {
            "type" : "integer",
            "format" : "int32"
          },
          "after" : {
            "type" : "string"
          },
          "sorts" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "properties" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "filterGroups" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/FilterGroup"
            }
          }
        }
      },
      "Error" : {
        "required" : [ "category", "correlationId", "message" ],
        "type" : "object",
        "properties" : {
          "subCategory" : {
            "type" : "string",
            "description" : "A specific category that contains more specific detail about the error"
          },
          "context" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            },
            "description" : "Context about the error condition",
            "example" : {
              "missingScopes" : [ "scope1", "scope2" ],
              "invalidPropertyName" : [ "propertyValue" ]
            }
          },
          "correlationId" : {
            "type" : "string",
            "description" : "A unique identifier for the request. Include this value with any error reports or support tickets",
            "format" : "uuid",
            "example" : "aeb5f871-7f07-4993-9211-075dc63e7cbf"
          },
          "links" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "A map of link names to associated URIs containing documentation about the error or recommended remediation steps",
            "example" : {
              "knowledge-base" : "https://www.hubspot.com/products/service/knowledge-base"
            }
          },
          "message" : {
            "type" : "string",
            "description" : "A human readable message describing the error along with remediation steps where appropriate",
            "example" : "Invalid input (details will vary based on the error)"
          },
          "category" : {
            "type" : "string",
            "description" : "The error category",
            "example" : "VALIDATION_ERROR"
          },
          "errors" : {
            "type" : "array",
            "description" : "further information about the error",
            "items" : {
              "$ref" : "#/components/schemas/ErrorDetail"
            }
          }
        },
        "example" : {
          "message" : "Invalid input (details will vary based on the error)",
          "correlationId" : "aeb5f871-7f07-4993-9211-075dc63e7cbf",
          "category" : "VALIDATION_ERROR",
          "links" : {
            "knowledge-base" : "https://www.hubspot.com/products/service/knowledge-base"
          }
        }
      },
      "SimplePublicObjectBatchInputUpsert" : {
        "required" : [ "id", "properties" ],
        "type" : "object",
        "properties" : {
          "idProperty" : {
            "type" : "string",
            "description" : "The name of a property whose values are unique for this object"
          },
          "objectWriteTraceId" : {
            "type" : "string"
          },
          "id" : {
            "type" : "string"
          },
          "properties" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "example" : {
              "lastname" : "S.",
              "firstname" : "Mark"
            }
          }
        }
      },
      "BatchResponseSimplePublicObjectWithErrors" : {
        "required" : [ "completedAt", "results", "startedAt", "status" ],
        "type" : "object",
        "properties" : {
          "completedAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "numErrors" : {
            "type" : "integer",
            "format" : "int32"
          },
          "requestedAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "startedAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "links" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "results" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SimplePublicObject"
            }
          },
          "errors" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/StandardError"
            }
          },
          "status" : {
            "type" : "string",
            "enum" : [ "PENDING", "PROCESSING", "CANCELED", "COMPLETE" ]
          }
        }
      },
      "PublicGdprDeleteInput" : {
        "required" : [ "objectId" ],
        "type" : "object",
        "properties" : {
          "idProperty" : {
            "type" : "string",
            "description" : "The name of a property whose values are unique for this object. An alternative to identifying a contact by ID."
          },
          "objectId" : {
            "type" : "string",
            "description" : "The ID of the contact to permanently delete."
          }
        }
      },
      "SimplePublicObjectInput" : {
        "required" : [ "properties" ],
        "type" : "object",
        "properties" : {
          "properties" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "example" : {
              "property_date" : "1572480000000",
              "property_radio" : "option_1",
              "property_number" : "17",
              "property_string" : "value",
              "property_checkbox" : "false",
              "property_dropdown" : "choice_b",
              "property_multiple_checkboxes" : "chocolate;strawberry"
            }
          }
        },
        "example" : {
          "properties" : {
            "email" : "bcooper@biglytics.net",
            "phone" : "(877) 929-0687",
            "company" : "Biglytics",
            "website" : "biglytics.net",
            "lastname" : "Cooper",
            "firstname" : "Bryan"
          },
          "associations" : [ ]
        }
      },
      "CollectionResponseSimplePublicObjectWithAssociationsForwardPaging" : {
        "required" : [ "results" ],
        "type" : "object",
        "properties" : {
          "paging" : {
            "$ref" : "#/components/schemas/ForwardPaging"
          },
          "results" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SimplePublicObjectWithAssociations"
            }
          }
        }
      },
      "AssociationSpec" : {
        "required" : [ "associationCategory", "associationTypeId" ],
        "type" : "object",
        "properties" : {
          "associationCategory" : {
            "type" : "string",
            "enum" : [ "HUBSPOT_DEFINED", "USER_DEFINED", "INTEGRATOR_DEFINED" ]
          },
          "associationTypeId" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "PublicMergeInput" : {
        "required" : [ "objectIdToMerge", "primaryObjectId" ],
        "type" : "object",
        "properties" : {
          "objectIdToMerge" : {
            "type" : "string"
          },
          "primaryObjectId" : {
            "type" : "string"
          }
        }
      },
      "SimplePublicObjectWithAssociations" : {
        "required" : [ "createdAt", "id", "properties", "updatedAt" ],
        "type" : "object",
        "properties" : {
          "associations" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/CollectionResponseAssociatedId"
            },
            "example" : {
              "companies" : {
                "results" : [ {
                  "id" : "29846388244",
                  "type" : "contact_to_company"
                }, {
                  "id" : "29846388244",
                  "type" : "contact_to_company_unlabeled"
                } ]
              }
            }
          },
          "createdAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "archived" : {
            "type" : "boolean",
            "description" : ""
          },
          "archivedAt" : {
            "type" : "string",
            "description" : "",
            "format" : "date-time"
          },
          "propertiesWithHistory" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/ValueWithTimestamp"
              }
            },
            "example" : {
              "lastname" : [ {
                "value" : "Scout",
                "sourceId" : "userId:2931299",
                "timestamp" : "2025-02-11T16:28:13.591Z",
                "sourceType" : "CRM_UI",
                "updatedByUserId" : 2931299
              }, {
                "value" : "S.",
                "sourceId" : "userId:2931299",
                "timestamp" : "2025-02-11T15:45:00.400Z",
                "sourceType" : "CRM_UI",
                "updatedByUserId" : 2931299
              } ]
            }
          },
          "id" : {
            "type" : "string"
          },
          "objectWriteTraceId" : {
            "type" : "string"
          },
          "properties" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string",
              "nullable" : true
            },
            "description" : "",
            "example" : {
              "email" : "mark.s@lumon.industries",
              "lastname" : "S.",
              "firstname" : "Mark",
              "createdate" : "2025-02-11T15:45:00.400Z",
              "hs_object_id" : "98630638716",
              "lastmodifieddate" : "2025-02-11T15:52:10.273Z"
            }
          },
          "updatedAt" : {
            "type" : "string",
            "format" : "date-time"
          }
        },
        "example" : {
          "properties" : {
            "company" : "Biglytics",
            "createdate" : "2019-10-30T03:30:17.883Z",
            "email" : "bcooper@biglytics.net",
            "firstname" : "Bryan",
            "lastmodifieddate" : "2019-12-07T16:50:06.678Z",
            "lastname" : "Cooper",
            "phone" : "(877) 929-0687",
            "website" : "biglytics.net"
          }
        }
      },
      "Filter" : {
        "required" : [ "operator", "propertyName" ],
        "type" : "object",
        "properties" : {
          "highValue" : {
            "type" : "string"
          },
          "propertyName" : {
            "type" : "string"
          },
          "values" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "value" : {
            "type" : "string"
          },
          "operator" : {
            "type" : "string",
            "description" : "null",
            "enum" : [ "EQ", "NEQ", "LT", "LTE", "GT", "GTE", "BETWEEN", "IN", "NOT_IN", "HAS_PROPERTY", "NOT_HAS_PROPERTY", "CONTAINS_TOKEN", "NOT_CONTAINS_TOKEN" ]
          }
        }
      },
      "BatchInputSimplePublicObjectBatchInput" : {
        "required" : [ "inputs" ],
        "type" : "object",
        "properties" : {
          "inputs" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SimplePublicObjectBatchInput"
            }
          }
        }
      },
      "PreviousPage" : {
        "required" : [ "before" ],
        "type" : "object",
        "properties" : {
          "before" : {
            "type" : "string"
          },
          "link" : {
            "type" : "string"
          }
        }
      },
      "SimplePublicUpsertObject" : {
        "required" : [ "createdAt", "id", "new", "properties", "updatedAt" ],
        "type" : "object",
        "properties" : {
          "createdAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "archived" : {
            "type" : "boolean"
          },
          "archivedAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "new" : {
            "type" : "boolean"
          },
          "propertiesWithHistory" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/ValueWithTimestamp"
              }
            }
          },
          "id" : {
            "type" : "string"
          },
          "objectWriteTraceId" : {
            "type" : "string"
          },
          "properties" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "updatedAt" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "SimplePublicObjectBatchInput" : {
        "required" : [ "id", "properties" ],
        "type" : "object",
        "properties" : {
          "idProperty" : {
            "type" : "string",
            "description" : "The name of a unique property, when identifying records by property. ",
            "example" : "my_unique_property_name"
          },
          "objectWriteTraceId" : {
            "type" : "string"
          },
          "id" : {
            "type" : "string",
            "description" : "The ID of the contact to update. This can be the object ID, or the unique property value of the `idProperty` property."
          },
          "properties" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "example" : {
              "email" : "mark.s@lumon.industries",
              "lastname" : "S.",
              "firstname" : "Mark",
              "createdate" : "2025-02-11T15:45:00.400Z",
              "hs_object_id" : "98630638716",
              "lastmodifieddate" : "2025-02-11T15:52:10.273Z"
            }
          }
        },
        "example" : {
          "id" : "1",
          "properties" : {
            "email" : "bcooper@biglytics.net",
            "phone" : "(877) 929-0687",
            "company" : "Biglytics",
            "website" : "biglytics.net",
            "lastname" : "Cooper",
            "firstname" : "Bryan"
          }
        }
      },
      "SimplePublicObjectBatchInputForCreate" : {
        "required" : [ "properties" ],
        "type" : "object",
        "properties" : {
          "associations" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PublicAssociationsForObject"
            }
          },
          "objectWriteTraceId" : {
            "type" : "string"
          },
          "properties" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          }
        }
      },
      "AssociatedId" : {
        "required" : [ "id", "type" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          }
        }
      },
      "NextPage" : {
        "required" : [ "after" ],
        "type" : "object",
        "properties" : {
          "link" : {
            "type" : "string",
            "example" : "?after=NTI1Cg%3D%3D"
          },
          "after" : {
            "type" : "string",
            "example" : "NTI1Cg%3D%3D"
          }
        },
        "example" : {
          "after" : "NTI1Cg%3D%3D",
          "link" : "?after=NTI1Cg%3D%3D"
        }
      },
      "SimplePublicObjectInputForCreate" : {
        "required" : [ "properties" ],
        "type" : "object",
        "properties" : {
          "associations" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PublicAssociationsForObject"
            }
          },
          "properties" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "example" : {
              "email" : "mark.s@lumon.industries",
              "lastname" : "S.",
              "firstname" : "Mark"
            }
          }
        },
        "example" : {
          "properties" : {
            "email" : "bcooper@biglytics.net",
            "phone" : "(877) 929-0687",
            "company" : "Biglytics",
            "website" : "biglytics.net",
            "lastname" : "Cooper",
            "firstname" : "Bryan"
          },
          "associations" : [ ]
        }
      },
      "BatchInputSimplePublicObjectBatchInputForCreate" : {
        "required" : [ "inputs" ],
        "type" : "object",
        "properties" : {
          "inputs" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SimplePublicObjectBatchInputForCreate"
            }
          }
        }
      }
    },
    "responses" : {
      "Error" : {
        "description" : "An error occurred.",
        "content" : {
          "*/*" : {
            "schema" : {
              "$ref" : "#/components/schemas/Error"
            }
          }
        }
      }
    },
    "securitySchemes" : {
      "oauth2" : {
        "type" : "oauth2",
        "flows" : {
          "authorizationCode" : {
            "authorizationUrl" : "https://app.hubspot.com/oauth/authorize",
            "tokenUrl" : "https://api.hubapi.com/oauth/v1/token",
            "scopes" : {
              "crm.objects.appointments.write" : "Write appointments",
              "e-commerce" : "e-commerce",
              "crm.objects.commercepayments.read" : "Read the COMMERCE_PAYMENT object.",
              "crm.objects.companies.read" : " ",
              "crm.objects.courses.read" : "Read courses",
              "crm.objects.courses.write" : "Write courses",
              "crm.objects.quotes.read" : "Quotes",
              "crm.objects.carts.read" : "Read carts",
              "crm.objects.goals.read" : "Read goals",
              "crm.objects.contacts.write" : " ",
              "crm.objects.services.read" : "Read services",
              "crm.objects.quotes.write" : "Quotes",
              "crm.objects.appointments.read" : "Read appointments",
              "crm.objects.line_items.read" : "Line Items",
              "crm.objects.deals.write" : " ",
              "crm.objects.services.write" : "Write services",
              "media_bridge.read" : "Read media and media events",
              "crm.objects.custom.write" : "Change custom object records",
              "crm.objects.subscriptions.read" : "Read Commerce Subscriptions",
              "crm.objects.deals.read" : " ",
              "crm.objects.users.read" : "Read User CRM objects",
              "crm.objects.line_items.write" : "Line Items",
              "crm.objects.invoices.read" : "Read invoices objects",
              "tickets" : "Read and write tickets",
              "crm.objects.carts.write" : "Write cart",
              "crm.objects.orders.read" : "Read Orders",
              "crm.objects.goals.write" : "Write goals",
              "crm.objects.custom.read" : "View custom object records",
              "crm.objects.listings.read" : "Read listings",
              "crm.objects.partner-clients.read" : "View Partner Client CRM objects",
              "crm.objects.leads.read" : "Read lead objects",
              "crm.objects.leads.write" : "Modify lead objects",
              "crm.objects.orders.write" : "Write orders",
              "crm.objects.invoices.write" : "Write invoices",
              "crm.objects.companies.write" : " ",
              "crm.objects.partner-clients.write" : "Modify Partner Client CRM objects",
              "crm.objects.users.write" : "Write User CRM objects",
              "crm.objects.listings.write" : "Write listings",
              "crm.objects.contacts.read" : " "
            }
          }
        }
      },
      "private_apps_legacy" : {
        "type" : "apiKey",
        "name" : "private-app-legacy",
        "in" : "header"
      },
      "private_apps" : {
        "type" : "apiKey",
        "name" : "private-app",
        "in" : "header"
      }
    }
  },
  "x-hubspot-available-client-libraries" : [ "PHP", "Node", "Ruby", "Python" ],
  "x-hubspot-product-tier-requirements" : {
    "marketing" : "FREE",
    "sales" : "FREE",
    "service" : "FREE",
    "cms" : "FREE"
  }
}