{
  "openapi" : "3.0.1",
  "info" : {
    "title" : "Lists",
    "description" : "CRUD operations to manage lists and list memberships",
    "version" : "v3"
  },
  "servers" : [ {
    "url" : "https://api.hubapi.com"
  } ],
  "tags" : [ {
    "name" : "Memberships"
  }, {
    "name" : "Lists"
  } ],
  "paths" : {
    "/crm/v3/lists/{listId}/memberships/add-and-remove" : {
      "put" : {
        "tags" : [ "Memberships" ],
        "summary" : "Add and/or Remove Records from a List",
        "description" : "Add and/or remove records that have already been created in the system to and/or from a list.\n\nThis endpoint only works for lists that have a `processingType` of `MANUAL` or `SNAPSHOT`.",
        "operationId" : "put-/crm/v3/lists/{listId}/memberships/add-and-remove",
        "parameters" : [ {
          "name" : "listId",
          "in" : "path",
          "description" : "The **ILS ID** of the `MANUAL` or `SNAPSHOT` list.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "requestBody" : {
          "description" : "The IDs of the records to add and/or remove from the list.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/MembershipChangeRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MembershipsUpdateResponse"
                },
                "example" : {
                  "recordIdsAdded" : [ 123, 456 ],
                  "recordIdsMissing" : [ 789 ],
                  "recordIdsRemoved" : [ 654 ]
                }
              }
            }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "private_apps" : [ "crm.lists.write", "crm.lists.read" ]
        }, {
          "oauth2" : [ "crm.lists.write", "crm.lists.read" ]
        } ]
      }
    },
    "/crm/v3/lists/search" : {
      "post" : {
        "tags" : [ "Lists" ],
        "summary" : "Search Lists",
        "description" : "Search lists by list name or page through all lists by providing an empty `query` value.",
        "operationId" : "post-/crm/v3/lists/search",
        "requestBody" : {
          "description" : "The IDs of the records to add and/or remove from the list.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ListAppSearchRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ListAppSearchResult"
                }
              }
            }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "private_apps" : [ "crm.lists.read" ]
        }, {
          "oauth2" : [ "crm.lists.read" ]
        } ]
      }
    },
    "/crm/v3/lists/{listId}/memberships/add" : {
      "put" : {
        "tags" : [ "Memberships" ],
        "summary" : "Add Records to a List",
        "description" : "Add the records provided to the list. Records that do not exist or that are already members of the list are ignored.\n\nThis endpoint only works for lists that have a `processingType` of `MANUAL` or `SNAPSHOT`.",
        "operationId" : "put-/crm/v3/lists/{listId}/memberships/add",
        "parameters" : [ {
          "name" : "listId",
          "in" : "path",
          "description" : "The **ILS ID** of the `MANUAL` or `SNAPSHOT` list.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "requestBody" : {
          "description" : "The IDs of the records to add to the list.",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "integer",
                  "format" : "int64"
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MembershipsUpdateResponse"
                },
                "example" : {
                  "recordIdsAdded" : [ 123, 456 ],
                  "recordIdsMissing" : [ 789 ]
                }
              }
            }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "private_apps" : [ "crm.lists.write", "crm.lists.read" ]
        }, {
          "oauth2" : [ "crm.lists.write", "crm.lists.read" ]
        } ]
      }
    },
    "/crm/v3/lists/{listId}/memberships/add-from/{sourceListId}" : {
      "put" : {
        "tags" : [ "Memberships" ],
        "summary" : "Add All Records from a Source List to a Destination List",
        "description" : "Add all of the records from a *source list* (specified by the `sourceListId`) to a *destination list* (specified by the `listId`). Records that are already members of the *destination list* will be ignored. The *destination* and *source list* IDs must be different. The *destination* and *source lists* must contain records of the same type (e.g. contacts, companies, etc.).\n\nThis endpoint only works for *destination lists* that have a `processingType` of `MANUAL` or `SNAPSHOT`. The *source list* can have any `processingType`.",
        "operationId" : "put-/crm/v3/lists/{listId}/memberships/add-from/{sourceListId}",
        "parameters" : [ {
          "name" : "listId",
          "in" : "path",
          "description" : "The **ILS ID** of the `MANUAL` or `SNAPSHOT` *destination list*, which the *source list* records are added to.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "sourceListId",
          "in" : "path",
          "description" : "The **ILS ID** of the *source list* to grab the records from, which are then added to the *destination list*.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Operation successful",
            "content" : { }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "private_apps" : [ "crm.lists.write", "crm.lists.read" ]
        }, {
          "oauth2" : [ "crm.lists.write", "crm.lists.read" ]
        } ]
      }
    },
    "/crm/v3/lists/{listId}/memberships" : {
      "get" : {
        "tags" : [ "Memberships" ],
        "summary" : "Fetch List Memberships Ordered by ID",
        "description" : "Fetch the memberships of a list in order sorted by the `recordId` of the records in the list.\n\nThe `recordId`s are sorted in *ascending* order if an `after` offset or no offset is provided. If only a `before` offset is provided, then the records are sorted in *descending* order.\n\nThe `after` offset parameter will take precedence over the `before` offset in a case where both are provided.",
        "operationId" : "get-/crm/v3/lists/{listId}/memberships",
        "parameters" : [ {
          "name" : "listId",
          "in" : "path",
          "description" : "The **ILS ID** of the list.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "after",
          "in" : "query",
          "description" : "The paging offset token for the page that comes `after` the previously requested records.\n\nIf provided, then the records in the response will be the records following the offset, sorted in *ascending* order. Takes precedence over the `before` offset.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "before",
          "in" : "query",
          "description" : "The paging offset token for the page that comes `before` the previously requested records.\n\nIf provided, then the records in the response will be the records preceding the offset, sorted in *descending* order.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "The number of records to return in the response. The maximum `limit` is 250.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 100
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CollectionResponseLong"
                },
                "example" : {
                  "results" : [ 202, 232, 239 ],
                  "paging" : {
                    "next" : {
                      "after" : "AAAAAAAAAS0%3D",
                      "link" : "https://private.hubapi.com/crm/v3/lists/123/memberships?portalId=865747473&limit=2&after=AAAAAAAAAS0%3D"
                    },
                    "prev" : {
                      "before" : "AAAAAAAAAMk%3D",
                      "link" : "https://private.hubapi.com/crm/v3/lists/123/memberships?before=AAAAAAAAAMk%3D&portalId=865747473&limit=2"
                    }
                  }
                }
              }
            }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "private_apps" : [ "crm.lists.read" ]
        }, {
          "oauth2" : [ "crm.lists.read" ]
        } ]
      },
      "delete" : {
        "tags" : [ "Memberships" ],
        "summary" : "Delete All Records from a List",
        "description" : "Remove **all** of the records from a list. ***Note:*** *The list is not deleted.*\n\nThis endpoint only works for lists that have a `processingType` of `MANUAL` or `SNAPSHOT`.",
        "operationId" : "delete-/crm/v3/lists/{listId}/memberships",
        "parameters" : [ {
          "name" : "listId",
          "in" : "path",
          "description" : "The **ILS ID** of the `MANUAL` or `SNAPSHOT` list.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Operation successful",
            "content" : { }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "private_apps" : [ "crm.lists.write", "crm.lists.read" ]
        }, {
          "oauth2" : [ "crm.lists.write", "crm.lists.read" ]
        } ]
      }
    },
    "/crm/v3/lists/{listId}/memberships/remove" : {
      "put" : {
        "tags" : [ "Memberships" ],
        "summary" : "Remove Records from a List",
        "description" : "Remove the records provided from the list. Records that do not exist or that are not members of the list are ignored.\n\nThis endpoint only works for lists that have a `processingType` of `MANUAL` or `SNAPSHOT`.",
        "operationId" : "put-/crm/v3/lists/{listId}/memberships/remove",
        "parameters" : [ {
          "name" : "listId",
          "in" : "path",
          "description" : "The **ILS ID** of the `MANUAL` or `SNAPSHOT` list.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "requestBody" : {
          "description" : "The IDs of the records to remove from the list.",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "integer",
                  "format" : "int64"
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MembershipsUpdateResponse"
                },
                "example" : {
                  "recordIdsRemoved" : [ 123, 456 ],
                  "recordIdsMissing" : [ 789 ]
                }
              }
            }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "private_apps" : [ "crm.lists.write", "crm.lists.read" ]
        }, {
          "oauth2" : [ "crm.lists.write", "crm.lists.read" ]
        } ]
      }
    }
  },
  "components" : {
    "schemas" : {
      "ErrorDetail" : {
        "required" : [ "message" ],
        "type" : "object",
        "properties" : {
          "subCategory" : {
            "type" : "string",
            "description" : "A specific category that contains more specific detail about the error"
          },
          "code" : {
            "type" : "string",
            "description" : "The status code associated with the error detail"
          },
          "in" : {
            "type" : "string",
            "description" : "The name of the field or parameter in which the error was found."
          },
          "context" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            },
            "description" : "Context about the error condition",
            "example" : {
              "missingScopes" : [ "scope1", "scope2" ]
            }
          },
          "message" : {
            "type" : "string",
            "description" : "A human readable message describing the error along with remediation steps where appropriate"
          }
        }
      },
      "ListAppSearchRequest" : {
        "required" : [ "additionalProperties", "offset" ],
        "type" : "object",
        "properties" : {
          "offset" : {
            "type" : "integer",
            "description" : "Value used to paginate through lists. The `offset` provided in the response can be used in the next request to fetch the next page of results. Defaults to `0` if no offset is provided.",
            "format" : "int32"
          },
          "query" : {
            "type" : "string",
            "description" : "The `query` that will be used to search for lists by list name. If no `query` is provided, then the results will include all lists.",
            "example" : "{\"count\":100,\"additionalProperties\":[\"hs_list_size_week_delta\"],\"query\":\"Test\",\"offset\":0}"
          },
          "count" : {
            "type" : "integer",
            "description" : "The number of lists to include in the response. Defaults to `20` if no value is provided. The max `count` is `500`.",
            "format" : "int32"
          },
          "additionalProperties" : {
            "type" : "array",
            "description" : "The property names of any additional list properties to include in the response. Properties that do not exist or that are empty for a particular list are not included in the response.\n\nBy default, all requests will fetch the following properties for each list: `hs_list_size`, `hs_last_record_added_at`, `hs_last_record_removed_at`, `hs_folder_name`, and `hs_list_reference_count`.",
            "example" : "{\"count\":100,\"additionalProperties\":[\"hs_list_size_week_delta\"],\"query\":\"Test\",\"offset\":0}",
            "items" : {
              "type" : "string"
            }
          }
        },
        "description" : "The request object used for searching through lists.",
        "example" : {
          "count" : 100,
          "additionalProperties" : [ "hs_list_size_week_delta" ],
          "query" : "Test",
          "offset" : 0
        }
      },
      "MembershipsUpdateResponse" : {
        "required" : [ "recordIdsMissing", "recordIdsRemoved", "recordsIdsAdded" ],
        "type" : "object",
        "properties" : {
          "recordIdsRemoved" : {
            "type" : "array",
            "description" : "The IDs of the records that were `removed` from the list.",
            "items" : {
              "type" : "integer",
              "format" : "int64"
            }
          },
          "recordsIdsAdded" : {
            "type" : "array",
            "items" : {
              "type" : "integer",
              "format" : "int64"
            }
          },
          "recordIdsMissing" : {
            "type" : "array",
            "description" : "The IDs of the records that were `missing` (e.g. did not exist in the portal) and so were not `added` or `removed`.",
            "items" : {
              "type" : "integer",
              "format" : "int64"
            }
          }
        },
        "description" : "The IDs of the records that were `added`, `removed`, and/or found to be `missing` as a result of the \nmembership update request."
      },
      "MembershipChangeRequest" : {
        "required" : [ "recordIdsToAdd", "recordIdsToRemove" ],
        "type" : "object",
        "properties" : {
          "recordIdsToRemove" : {
            "type" : "array",
            "example" : "{\"recordIdsToAdd\":[123,456,789],\"recordIdsToRemove\":[654]}",
            "items" : {
              "type" : "integer",
              "format" : "int64"
            }
          },
          "recordIdsToAdd" : {
            "type" : "array",
            "example" : "{\"recordIdsToAdd\":[123,456,789],\"recordIdsToRemove\":[654]}",
            "items" : {
              "type" : "integer",
              "format" : "int64"
            }
          }
        },
        "description" : "The IDs of the records to add and/or remove from a list.",
        "example" : {
          "recordIdsToAdd" : [ 123, 456, 789 ],
          "recordIdsToRemove" : [ 654 ]
        }
      },
      "PreviousPage" : {
        "required" : [ "before" ],
        "type" : "object",
        "properties" : {
          "before" : {
            "type" : "string",
            "description" : "The offset of the previous page of records."
          },
          "link" : {
            "type" : "string",
            "description" : "A direct link to the request for the previous page of records."
          }
        },
        "description" : "The cursor for the previous page of records."
      },
      "Paging" : {
        "type" : "object",
        "properties" : {
          "next" : {
            "$ref" : "#/components/schemas/NextPage"
          },
          "prev" : {
            "$ref" : "#/components/schemas/PreviousPage"
          }
        },
        "description" : "The cursor to be used for paging through records."
      },
      "Error" : {
        "required" : [ "category", "correlationId", "message" ],
        "type" : "object",
        "properties" : {
          "subCategory" : {
            "type" : "string",
            "description" : "A specific category that contains more specific detail about the error",
            "example" : "{\"message\":\"Invalid input (details will vary based on the error)\",\"correlationId\":\"aeb5f871-7f07-4993-9211-075dc63e7cbf\",\"category\":\"VALIDATION_ERROR\",\"links\":{\"knowledge-base\":\"https://www.hubspot.com/products/service/knowledge-base\"}}"
          },
          "context" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            },
            "description" : "Context about the error condition",
            "example" : "{\"message\":\"Invalid input (details will vary based on the error)\",\"correlationId\":\"aeb5f871-7f07-4993-9211-075dc63e7cbf\",\"category\":\"VALIDATION_ERROR\",\"links\":{\"knowledge-base\":\"https://www.hubspot.com/products/service/knowledge-base\"}}"
          },
          "correlationId" : {
            "type" : "string",
            "description" : "A unique identifier for the request. Include this value with any error reports or support tickets",
            "format" : "uuid"
          },
          "links" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "A map of link names to associated URIs containing documentation about the error or recommended remediation steps",
            "example" : "{\"message\":\"Invalid input (details will vary based on the error)\",\"correlationId\":\"aeb5f871-7f07-4993-9211-075dc63e7cbf\",\"category\":\"VALIDATION_ERROR\",\"links\":{\"knowledge-base\":\"https://www.hubspot.com/products/service/knowledge-base\"}}"
          },
          "message" : {
            "type" : "string",
            "description" : "A human readable message describing the error along with remediation steps where appropriate",
            "example" : "{\"message\":\"Invalid input (details will vary based on the error)\",\"correlationId\":\"aeb5f871-7f07-4993-9211-075dc63e7cbf\",\"category\":\"VALIDATION_ERROR\",\"links\":{\"knowledge-base\":\"https://www.hubspot.com/products/service/knowledge-base\"}}"
          },
          "category" : {
            "type" : "string",
            "description" : "The error category",
            "example" : "{\"message\":\"Invalid input (details will vary based on the error)\",\"correlationId\":\"aeb5f871-7f07-4993-9211-075dc63e7cbf\",\"category\":\"VALIDATION_ERROR\",\"links\":{\"knowledge-base\":\"https://www.hubspot.com/products/service/knowledge-base\"}}"
          },
          "errors" : {
            "type" : "array",
            "description" : "further information about the error",
            "example" : "{\"message\":\"Invalid input (details will vary based on the error)\",\"correlationId\":\"aeb5f871-7f07-4993-9211-075dc63e7cbf\",\"category\":\"VALIDATION_ERROR\",\"links\":{\"knowledge-base\":\"https://www.hubspot.com/products/service/knowledge-base\"}}",
            "items" : {
              "$ref" : "#/components/schemas/ErrorDetail"
            }
          }
        },
        "example" : {
          "message" : "Invalid input (details will vary based on the error)",
          "correlationId" : "aeb5f871-7f07-4993-9211-075dc63e7cbf",
          "category" : "VALIDATION_ERROR",
          "links" : {
            "knowledge-base" : "https://www.hubspot.com/products/service/knowledge-base"
          }
        }
      },
      "ListAppSearchResult" : {
        "required" : [ "hasMore", "lists", "offset", "total" ],
        "type" : "object",
        "properties" : {
          "total" : {
            "type" : "integer",
            "description" : "The total number of lists that match the search criteria.",
            "format" : "int32"
          },
          "offset" : {
            "type" : "integer",
            "description" : "Value to be passed in a future request to paginate through list search results.",
            "format" : "int32"
          },
          "lists" : {
            "type" : "array",
            "description" : "The lists that matched the search criteria.",
            "example" : "{\"offset\":1,\"hasMore\":false,\"lists\":[{\"listId\":123,\"listVersion\":1,\"createdAt\":\"2023-09-28T22:03:17.998Z\",\"updatedAt\":\"2023-09-28T22:03:37.005Z\",\"filtersUpdatedAt\":\"2023-09-28T22:03:17.998Z\",\"processingStatus\":\"COMPLETE\",\"createdById\":1,\"updatedById\":1,\"processingType\":\"SNAPSHOT\",\"objectTypeId\":\"0-1\",\"name\":\"Test list\",\"additionalProperties\":{\"hs_list_size_week_delta\":\"-10\",\"hs_list_reference_count\":\"0\",\"hs_last_record_added_at\":\"1695938616824\",\"hs_list_size\":\"59\"}}],\"total\":1}",
            "items" : {
              "$ref" : "#/components/schemas/PublicObjectListSearchResultIF"
            }
          },
          "hasMore" : {
            "type" : "boolean",
            "description" : "Whether or not there are more results to page through.",
            "example" : false
          }
        },
        "description" : "The response object with the list search hits and additional information regarding pagination.",
        "example" : {
          "offset" : 1,
          "hasMore" : false,
          "lists" : [ {
            "listId" : 123,
            "listVersion" : 1,
            "createdAt" : "2023-09-28T22:03:17.998Z",
            "updatedAt" : "2023-09-28T22:03:37.005Z",
            "filtersUpdatedAt" : "2023-09-28T22:03:17.998Z",
            "processingStatus" : "COMPLETE",
            "createdById" : 1,
            "updatedById" : 1,
            "processingType" : "SNAPSHOT",
            "objectTypeId" : "0-1",
            "name" : "Test list",
            "additionalProperties" : {
              "hs_list_size_week_delta" : "-10",
              "hs_list_reference_count" : "0",
              "hs_last_record_added_at" : "1695938616824",
              "hs_list_size" : "59"
            }
          } ],
          "total" : 1
        }
      },
      "CollectionResponseLong" : {
        "required" : [ "results" ],
        "type" : "object",
        "properties" : {
          "paging" : {
            "$ref" : "#/components/schemas/Paging"
          },
          "results" : {
            "type" : "array",
            "description" : "The record IDs for the requested page of memberships.",
            "items" : {
              "type" : "integer",
              "format" : "int64"
            }
          }
        },
        "description" : "The results and paging cursor for a membership fetch request."
      },
      "PublicObjectListSearchResultIF" : {
        "required" : [ "additionalProperties", "listId", "listVersion", "name", "objectTypeId", "processingStatus", "processingType" ],
        "type" : "object",
        "properties" : {
          "processingType" : {
            "type" : "string",
            "description" : "The processing type of the list.",
            "example" : "{\"objectTypeId\":\"0-1\",\"processingType\":\"SNAPSHOT\",\"updatedById\":1,\"filtersUpdatedAt\":\"2023-09-28T22:03:17.998Z\",\"listId\":123,\"createdAt\":\"2023-09-28T22:03:17.998Z\",\"processingStatus\":\"COMPLETED\",\"listVersion\":1,\"name\":\"Test list\",\"additionalProperties\":{\"hs_list_size\":59,\"hs_last_record_added_at\":1695938616824,\"hs_list_reference_count\":0,\"hs_list_size_week_delta\":-1}}"
          },
          "objectTypeId" : {
            "type" : "string",
            "description" : "The object type of the list.",
            "example" : "{\"objectTypeId\":\"0-1\",\"processingType\":\"SNAPSHOT\",\"updatedById\":1,\"filtersUpdatedAt\":\"2023-09-28T22:03:17.998Z\",\"listId\":123,\"createdAt\":\"2023-09-28T22:03:17.998Z\",\"processingStatus\":\"COMPLETED\",\"listVersion\":1,\"name\":\"Test list\",\"additionalProperties\":{\"hs_list_size\":59,\"hs_last_record_added_at\":1695938616824,\"hs_list_reference_count\":0,\"hs_list_size_week_delta\":-1}}"
          },
          "updatedById" : {
            "type" : "integer",
            "description" : "The **ILS ID** of the user that last updated the list.",
            "format" : "int32"
          },
          "filtersUpdatedAt" : {
            "type" : "string",
            "description" : "The time when the filters for this list were last updated.",
            "format" : "date-time"
          },
          "listId" : {
            "type" : "integer",
            "description" : "The **ILS ID** of the list.",
            "format" : "int32"
          },
          "createdAt" : {
            "type" : "string",
            "description" : "The time when the list was created.",
            "format" : "date-time"
          },
          "processingStatus" : {
            "type" : "string",
            "description" : "The processing status of the list.",
            "example" : "{\"objectTypeId\":\"0-1\",\"processingType\":\"SNAPSHOT\",\"updatedById\":1,\"filtersUpdatedAt\":\"2023-09-28T22:03:17.998Z\",\"listId\":123,\"createdAt\":\"2023-09-28T22:03:17.998Z\",\"processingStatus\":\"COMPLETED\",\"listVersion\":1,\"name\":\"Test list\",\"additionalProperties\":{\"hs_list_size\":59,\"hs_last_record_added_at\":1695938616824,\"hs_list_reference_count\":0,\"hs_list_size_week_delta\":-1}}"
          },
          "deletedAt" : {
            "type" : "string",
            "description" : "The time when the list was deleted.",
            "format" : "date-time"
          },
          "listVersion" : {
            "type" : "integer",
            "description" : "The version of the list.",
            "format" : "int32"
          },
          "name" : {
            "type" : "string",
            "description" : "The name of the list.",
            "example" : "{\"objectTypeId\":\"0-1\",\"processingType\":\"SNAPSHOT\",\"updatedById\":1,\"filtersUpdatedAt\":\"2023-09-28T22:03:17.998Z\",\"listId\":123,\"createdAt\":\"2023-09-28T22:03:17.998Z\",\"processingStatus\":\"COMPLETED\",\"listVersion\":1,\"name\":\"Test list\",\"additionalProperties\":{\"hs_list_size\":59,\"hs_last_record_added_at\":1695938616824,\"hs_list_reference_count\":0,\"hs_list_size_week_delta\":-1}}"
          },
          "additionalProperties" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "The name and value of any additional properties that exist for this list and that were included in the search request.",
            "example" : "{\"objectTypeId\":\"0-1\",\"processingType\":\"SNAPSHOT\",\"updatedById\":1,\"filtersUpdatedAt\":\"2023-09-28T22:03:17.998Z\",\"listId\":123,\"createdAt\":\"2023-09-28T22:03:17.998Z\",\"processingStatus\":\"COMPLETED\",\"listVersion\":1,\"name\":\"Test list\",\"additionalProperties\":{\"hs_list_size\":59,\"hs_last_record_added_at\":1695938616824,\"hs_list_reference_count\":0,\"hs_list_size_week_delta\":-1}}"
          },
          "createdById" : {
            "type" : "integer",
            "description" : "The **ILS ID** of the user that created the list.",
            "format" : "int32"
          },
          "updatedAt" : {
            "type" : "string",
            "description" : "The time when something other than the filters were updated.",
            "format" : "date-time"
          }
        },
        "example" : {
          "objectTypeId" : "0-1",
          "processingType" : "SNAPSHOT",
          "updatedById" : 1,
          "filtersUpdatedAt" : "2023-09-28T22:03:17.998Z",
          "listId" : 123,
          "createdAt" : "2023-09-28T22:03:17.998Z",
          "processingStatus" : "COMPLETED",
          "listVersion" : 1,
          "name" : "Test list",
          "additionalProperties" : {
            "hs_list_size" : 59,
            "hs_last_record_added_at" : 1695938616824,
            "hs_list_reference_count" : 0,
            "hs_list_size_week_delta" : -1
          }
        }
      },
      "NextPage" : {
        "required" : [ "after" ],
        "type" : "object",
        "properties" : {
          "link" : {
            "type" : "string",
            "description" : "A direct link to the request for the next page of records."
          },
          "after" : {
            "type" : "string",
            "description" : "The offset for the next page of records."
          }
        },
        "description" : "The cursor for the next page of records."
      }
    },
    "responses" : {
      "Error" : {
        "description" : "An error occurred.",
        "content" : {
          "*/*" : {
            "schema" : {
              "$ref" : "#/components/schemas/Error"
            }
          }
        }
      }
    },
    "securitySchemes" : {
      "oauth2" : {
        "type" : "oauth2",
        "flows" : {
          "authorizationCode" : {
            "authorizationUrl" : "https://app.hubspot.com/oauth/authorize",
            "tokenUrl" : "https://api.hubapi.com/oauth/v1/token",
            "scopes" : {
              "crm.lists.read" : " ",
              "crm.lists.write" : " "
            }
          }
        }
      },
      "private_apps" : {
        "type" : "apiKey",
        "name" : "private-app",
        "in" : "header"
      }
    }
  }
}