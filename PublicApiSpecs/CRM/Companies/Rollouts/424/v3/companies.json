{
  "openapi" : "3.0.1",
  "info" : {
    "title" : "Companies",
    "version" : "v3",
    "x-hubspot-product-tier-requirements" : {
      "marketing" : "FREE",
      "sales" : "FREE",
      "service" : "FREE",
      "cms" : "FREE",
      "commerce" : "FREE",
      "crmHub" : "FREE"
    },
    "x-hubspot-api-use-case" : "When a new customer signs up on your website with their business email address, create a company record to represent the relationship between the customer and the company they work for. A sales rep can later use this company record for outreach to find other potential sales opportunities. ",
    "x-hubspot-related-documentation" : [ {
      "name" : "Companies Guide",
      "url" : "https://developers.hubspot.com/docs/guides/api/crm/objects/companies"
    } ],
    "x-hubspot-introduction" : "Use the companies API to create and manage CRM records that represent the companies and organizations that interact with your business."
  },
  "servers" : [ {
    "url" : "https://api.hubapi.com"
  } ],
  "tags" : [ {
    "name" : "Basic"
  }, {
    "name" : "Batch"
  }, {
    "name" : "Public_Object__SE_PT_EM_BE_R_2025"
  }, {
    "name" : "Search"
  }, {
    "name" : "Public_Object_Search_Post__SE_PT_EM_BE_R_2025"
  }, {
    "name" : "GDPR"
  } ],
  "paths" : {
    "/crm/v3/objects/companies/batch/read" : {
      "post" : {
        "tags" : [ "Batch" ],
        "summary" : "Retrieve a batch of companies",
        "description" : "Retrieve a batch of companies by ID (`companyId`) or by a unique property (`idProperty`). You can specify what is returned using the `properties` query parameter.",
        "operationId" : "post-/crm/v3/objects/companies/batch/read_read",
        "parameters" : [ {
          "name" : "archived",
          "in" : "query",
          "description" : "Whether to return only results that have been archived.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BatchReadInputSimplePublicObjectId"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BatchResponseSimplePublicObject"
                }
              }
            }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "oauth2_legacy" : [ ]
        }, {
          "oauth2" : [ "crm.objects.companies.read" ]
        }, {
          "private_apps_legacy" : [ ]
        }, {
          "private_apps" : [ "crm.objects.companies.read" ]
        } ]
      }
    },
    "/crm/v3/objects/companies" : {
      "get" : {
        "tags" : [ "Basic" ],
        "summary" : "Retrieve companies",
        "description" : "Retrieve all companies, using query parameters to control the information that gets returned.",
        "operationId" : "get-/crm/v3/objects/companies_getPage",
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "description" : "The maximum number of results to display per page.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 10
          }
        }, {
          "name" : "after",
          "in" : "query",
          "description" : "The paging cursor token of the last successfully read resource will be returned as the `paging.next.after` JSON property of a paged response containing more results.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "properties",
          "in" : "query",
          "description" : "A comma separated list of the properties to be returned in the response. If any of the specified properties are not present on the requested object(s), they will be ignored.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "propertiesWithHistory",
          "in" : "query",
          "description" : "A comma separated list of the properties to be returned along with their history of previous values. If any of the specified properties are not present on the requested object(s), they will be ignored. Usage of this parameter will reduce the maximum number of companies that can be read by a single request.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "associations",
          "in" : "query",
          "description" : "A comma separated list of object types to retrieve associated IDs for. If any of the specified associations do not exist, they will be ignored.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "archived",
          "in" : "query",
          "description" : "Whether to return only results that have been archived.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CollectionResponseSimplePublicObjectWithAssociations"
                }
              }
            }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "oauth2_legacy" : [ ]
        }, {
          "oauth2" : [ "crm.objects.companies.read" ]
        }, {
          "private_apps_legacy" : [ ]
        }, {
          "private_apps" : [ "crm.objects.companies.read" ]
        } ]
      },
      "post" : {
        "tags" : [ "Basic" ],
        "summary" : "Create a company",
        "description" : "Create a single company. Include a `properties` object to define [property values](https://developers.hubspot.com/docs/guides/api/crm/properties) for the company, along with an `associations` array to define [associations](https://developers.hubspot.com/docs/guides/api/crm/associations/associations-v4) with other CRM records.",
        "operationId" : "post-/crm/v3/objects/companies_create",
        "parameters" : [ ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SimplePublicObjectInputForCreate"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CreatedResponseSimplePublicObject"
                }
              }
            }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "oauth2_legacy" : [ ]
        }, {
          "oauth2" : [ "crm.objects.companies.write" ]
        }, {
          "private_apps_legacy" : [ ]
        }, {
          "private_apps" : [ "crm.objects.companies.write" ]
        } ]
      }
    },
    "/crm/v3/objects/companies/search" : {
      "post" : {
        "tags" : [ "Search" ],
        "summary" : "Search for companies",
        "description" : "Search for companies by filtering on properties, searching through associations, and sorting results. Learn more about [CRM search](https://developers.hubspot.com/docs/guides/api/crm/search#make-a-search-request).",
        "operationId" : "post-/crm/v3/objects/companies/search_doSearch",
        "parameters" : [ ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PublicObjectSearchRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CollectionResponseWithTotalSimplePublicObject"
                }
              }
            }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "oauth2_legacy" : [ ]
        }, {
          "oauth2" : [ "crm.objects.companies.read" ]
        }, {
          "private_apps_legacy" : [ ]
        }, {
          "private_apps" : [ "crm.objects.companies.read" ]
        } ],
        "x-hubspot-rate-limit-exemptions" : [ "ten-secondly" ]
      }
    },
    "/crm/v3/objects/companies/{companyId}" : {
      "get" : {
        "tags" : [ "Basic" ],
        "summary" : "Retrieve a company",
        "description" : "Retrieve a company by its ID (`companyId`) or by a unique property (`idProperty`). You can specify what is returned using the `properties` query parameter.",
        "operationId" : "get-/crm/v3/objects/companies/{companyId}_getById",
        "parameters" : [ {
          "name" : "companyId",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "properties",
          "in" : "query",
          "description" : "A comma separated list of the properties to be returned in the response. If any of the specified properties are not present on the requested object(s), they will be ignored.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "propertiesWithHistory",
          "in" : "query",
          "description" : "A comma separated list of the properties to be returned along with their history of previous values. If any of the specified properties are not present on the requested object(s), they will be ignored.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "associations",
          "in" : "query",
          "description" : "A comma separated list of object types to retrieve associated IDs for. If any of the specified associations do not exist, they will be ignored.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "archived",
          "in" : "query",
          "description" : "Whether to return only results that have been archived.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "idProperty",
          "in" : "query",
          "description" : "The name of a property whose values are unique for this object",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SimplePublicObjectWithAssociations"
                }
              }
            }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "oauth2_legacy" : [ ]
        }, {
          "oauth2" : [ "crm.objects.companies.read" ]
        }, {
          "private_apps_legacy" : [ ]
        }, {
          "private_apps" : [ "crm.objects.companies.read" ]
        } ]
      },
      "delete" : {
        "tags" : [ "Basic" ],
        "summary" : "Archive a company",
        "description" : "Delete a company by ID. Deleted companies can be restored within 90 days of deletion. Learn more about [restoring records](https://knowledge.hubspot.com/records/restore-deleted-records).",
        "operationId" : "delete-/crm/v3/objects/companies/{companyId}_archive",
        "parameters" : [ {
          "name" : "companyId",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "No content",
            "content" : { }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "oauth2_legacy" : [ ]
        }, {
          "oauth2" : [ "crm.objects.companies.write" ]
        }, {
          "private_apps_legacy" : [ ]
        }, {
          "private_apps" : [ "crm.objects.companies.write" ]
        } ]
      },
      "patch" : {
        "tags" : [ "Basic" ],
        "summary" : "Update a company",
        "description" : "Update a company by ID (`companyId`) or unique property value (`idProperty`). Provided property values will be overwritten. Read-only and non-existent properties will result in an error. Properties values can be cleared by passing an empty string.",
        "operationId" : "patch-/crm/v3/objects/companies/{companyId}_update",
        "parameters" : [ {
          "name" : "companyId",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "idProperty",
          "in" : "query",
          "description" : "The name of a property whose values are unique for this object",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SimplePublicObjectInput"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SimplePublicObject"
                }
              }
            }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "oauth2_legacy" : [ ]
        }, {
          "oauth2" : [ "crm.objects.companies.write" ]
        }, {
          "private_apps_legacy" : [ ]
        }, {
          "private_apps" : [ "crm.objects.companies.write" ]
        } ]
      }
    },
    "/crm/v3/objects/companies/batch/upsert" : {
      "post" : {
        "tags" : [ "Batch" ],
        "summary" : "Create or update a batch of companies by unique property values",
        "description" : "Create or update companies identified by a unique property value as specified by the `idProperty` query parameter. `idProperty` query param refers to a property whose values are unique for the object.",
        "operationId" : "post-/crm/v3/objects/companies/batch/upsert_upsert",
        "parameters" : [ ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BatchInputSimplePublicObjectBatchInputUpsert"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BatchResponseSimplePublicUpsertObject"
                }
              }
            }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "oauth2_legacy" : [ ]
        }, {
          "oauth2" : [ "crm.objects.companies.write" ]
        }, {
          "private_apps_legacy" : [ ]
        }, {
          "private_apps" : [ "crm.objects.companies.write" ]
        } ]
      }
    },
    "/crm/v3/objects/companies/batch/create" : {
      "post" : {
        "tags" : [ "Batch" ],
        "summary" : "Create a batch of companies",
        "description" : "Create a batch of companies. The `inputs` array can contain a `properties` object to define property values for each company, along with an `associations` array to define [associations](https://developers.hubspot.com/docs/guides/api/crm/associations/associations-v4) with other CRM records.",
        "operationId" : "post-/crm/v3/objects/companies/batch/create_create",
        "parameters" : [ ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BatchInputSimplePublicObjectBatchInputForCreate"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BatchResponseSimplePublicObject"
                }
              }
            }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "oauth2_legacy" : [ ]
        }, {
          "oauth2" : [ "crm.objects.companies.write" ]
        }, {
          "private_apps_legacy" : [ ]
        }, {
          "private_apps" : [ "crm.objects.companies.write" ]
        } ]
      }
    },
    "/crm/v3/objects/companies/batch/update" : {
      "post" : {
        "tags" : [ "Batch" ],
        "summary" : "Update a batch of companies",
        "description" : "Update a batch of companies by ID.",
        "operationId" : "post-/crm/v3/objects/companies/batch/update_update",
        "parameters" : [ ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BatchInputSimplePublicObjectBatchInput"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BatchResponseSimplePublicObject"
                }
              }
            }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "oauth2_legacy" : [ ]
        }, {
          "oauth2" : [ "crm.objects.companies.write" ]
        }, {
          "private_apps_legacy" : [ ]
        }, {
          "private_apps" : [ "crm.objects.companies.write" ]
        } ]
      }
    },
    "/crm/v3/objects/companies/batch/archive" : {
      "post" : {
        "tags" : [ "Batch" ],
        "summary" : "Archive a batch of companies",
        "description" : "Delete a batch of companies by ID. Deleted companies can be restored within 90 days of deletion. Learn more about [restoring records](https://knowledge.hubspot.com/records/restore-deleted-records).",
        "operationId" : "post-/crm/v3/objects/companies/batch/archive_archive",
        "parameters" : [ ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BatchInputSimplePublicObjectId"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "204" : {
            "description" : "No content",
            "content" : { }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "oauth2_legacy" : [ ]
        }, {
          "oauth2" : [ "crm.objects.companies.write" ]
        }, {
          "private_apps_legacy" : [ ]
        }, {
          "private_apps" : [ "crm.objects.companies.write" ]
        } ]
      }
    },
    "/crm/v3/objects/companies/merge" : {
      "post" : {
        "tags" : [ "Basic" ],
        "summary" : "Merge two companies",
        "description" : "Merge two company records. Learn more about [merging records](https://knowledge.hubspot.com/records/merge-records).",
        "operationId" : "post-/crm/v3/objects/companies/merge_merge",
        "parameters" : [ ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PublicMergeInput"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SimplePublicObject"
                }
              }
            }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "oauth2_legacy" : [ ]
        }, {
          "oauth2" : [ "crm.objects.companies.write" ]
        }, {
          "private_apps_legacy" : [ ]
        }, {
          "private_apps" : [ "crm.objects.companies.write" ]
        } ]
      }
    }
  },
  "components" : {
    "schemas" : {
      "CreatedResponseSimplePublicObject" : {
        "required" : [ "createdResourceId", "entity" ],
        "type" : "object",
        "properties" : {
          "location" : {
            "type" : "string"
          },
          "createdResourceId" : {
            "type" : "string"
          },
          "entity" : {
            "$ref" : "#/components/schemas/SimplePublicObject"
          }
        }
      },
      "StandardError" : {
        "required" : [ "category", "context", "errors", "links", "message", "status" ],
        "type" : "object",
        "properties" : {
          "subCategory" : {
            "type" : "object",
            "properties" : { },
            "description" : "A more specific error category within each main category."
          },
          "context" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            },
            "description" : "Additional context-specific information related to the error."
          },
          "links" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "URLs linking to documentation or resources associated with the error."
          },
          "id" : {
            "type" : "string",
            "description" : "A unique ID for the error instance."
          },
          "category" : {
            "type" : "string",
            "description" : "The main category of the error."
          },
          "message" : {
            "type" : "string",
            "description" : "A human-readable string describing the error and possible remediation steps."
          },
          "errors" : {
            "type" : "array",
            "description" : "The detailed error objects.",
            "items" : {
              "$ref" : "#/components/schemas/ErrorDetail"
            }
          },
          "status" : {
            "type" : "string",
            "description" : "The HTTP status code associated with the error."
          }
        },
        "description" : "Ye olde error"
      },
      "CollectionResponseAssociatedId" : {
        "required" : [ "results" ],
        "type" : "object",
        "properties" : {
          "paging" : {
            "$ref" : "#/components/schemas/Paging"
          },
          "results" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AssociatedId"
            }
          }
        }
      },
      "CollectionResponseWithTotalSimplePublicObject" : {
        "required" : [ "results", "total" ],
        "type" : "object",
        "properties" : {
          "total" : {
            "type" : "integer",
            "description" : "The number of available results",
            "format" : "int32"
          },
          "results" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SimplePublicObject"
            }
          },
          "paging" : {
            "$ref" : "#/components/schemas/Paging"
          }
        }
      },
      "LabelsBetweenObjectPair" : {
        "required" : [ "fromObjectId", "fromObjectTypeId", "labels", "toObjectId", "toObjectTypeId" ],
        "type" : "object",
        "properties" : {
          "fromObjectTypeId" : {
            "type" : "string"
          },
          "fromObjectId" : {
            "type" : "string"
          },
          "toObjectTypeId" : {
            "type" : "string"
          },
          "toObjectId" : {
            "type" : "string"
          },
          "labels" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "PublicAssociationsForObject" : {
        "required" : [ "to", "types" ],
        "type" : "object",
        "properties" : {
          "types" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AssociationSpec"
            }
          },
          "to" : {
            "$ref" : "#/components/schemas/PublicObjectId"
          }
        }
      },
      "BatchResponseSimplePublicObject" : {
        "required" : [ "completedAt", "results", "startedAt", "status" ],
        "type" : "object",
        "properties" : {
          "completedAt" : {
            "type" : "string",
            "description" : "The timestamp when the batch processing was completed, in ISO 8601 format.",
            "format" : "date-time"
          },
          "numErrors" : {
            "type" : "integer",
            "format" : "int32"
          },
          "requestedAt" : {
            "type" : "string",
            "description" : "The timestamp when the batch request was initially made, in ISO 8601 format.",
            "format" : "date-time"
          },
          "startedAt" : {
            "type" : "string",
            "description" : "The timestamp when the batch processing began, in ISO 8601 format.",
            "format" : "date-time"
          },
          "links" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "An object containing relevant links related to the batch request."
          },
          "results" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SimplePublicObject"
            }
          },
          "errors" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/StandardError"
            }
          },
          "status" : {
            "type" : "string",
            "description" : "The status of the batch processing request: \"PENDING\", \"PROCESSING\", \"CANCELLED\", or \"COMPLETE\"",
            "enum" : [ "PENDING", "PROCESSING", "CANCELED", "COMPLETE" ]
          }
        },
        "description" : "A public object batch response object"
      },
      "FilterGroup" : {
        "required" : [ "filters" ],
        "type" : "object",
        "properties" : {
          "filters" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Filter"
            }
          }
        }
      },
      "MultiAssociatedObjectWithLabel" : {
        "required" : [ "associationTypes", "toObjectId" ],
        "type" : "object",
        "properties" : {
          "toObjectId" : {
            "type" : "string"
          },
          "associationTypes" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AssociationSpecWithLabel"
            }
          }
        }
      },
      "ErrorDetail" : {
        "required" : [ "message" ],
        "type" : "object",
        "properties" : {
          "subCategory" : {
            "type" : "string",
            "description" : "A specific category that contains more specific detail about the error"
          },
          "code" : {
            "type" : "string",
            "description" : "The status code associated with the error detail"
          },
          "in" : {
            "type" : "string",
            "description" : "The name of the field or parameter in which the error was found."
          },
          "context" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            },
            "description" : "Context about the error condition",
            "example" : {
              "missingScopes" : [ "scope1", "scope2" ]
            }
          },
          "message" : {
            "type" : "string",
            "description" : "A human readable message describing the error along with remediation steps where appropriate"
          }
        }
      },
      "SimplePublicObjectId" : {
        "required" : [ "id" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          }
        }
      },
      "AssociationSpecWithLabel" : {
        "required" : [ "category", "typeId" ],
        "type" : "object",
        "properties" : {
          "category" : {
            "type" : "string",
            "enum" : [ "HUBSPOT_DEFINED", "USER_DEFINED", "INTEGRATOR_DEFINED" ]
          },
          "typeId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "label" : {
            "type" : "string"
          }
        }
      },
      "CreatedResponseLabelsBetweenObjectPair" : {
        "required" : [ "createdResourceId", "entity" ],
        "type" : "object",
        "properties" : {
          "location" : {
            "type" : "string"
          },
          "createdResourceId" : {
            "type" : "string"
          },
          "entity" : {
            "$ref" : "#/components/schemas/LabelsBetweenObjectPair"
          }
        }
      },
      "BatchReadInputSimplePublicObjectId" : {
        "required" : [ "inputs", "properties", "propertiesWithHistory" ],
        "type" : "object",
        "properties" : {
          "propertiesWithHistory" : {
            "type" : "array",
            "description" : "Key-value pairs for setting properties for the new object and their histories.",
            "items" : {
              "type" : "string"
            }
          },
          "idProperty" : {
            "type" : "string",
            "description" : "When using a custom unique value property to retrieve records, the name of the property. Do not include this parameter if retrieving by record ID."
          },
          "inputs" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SimplePublicObjectId"
            }
          },
          "properties" : {
            "type" : "array",
            "description" : "Key-value pairs for setting properties for the new object.",
            "items" : {
              "type" : "string"
            }
          }
        },
        "description" : "Specifies the input for reading a batch of CRM objects, including arrays of object IDs, requested property names (with optional history), and an optional unique identifying property."
      },
      "BatchResponseSimplePublicUpsertObject" : {
        "required" : [ "completedAt", "results", "startedAt", "status" ],
        "type" : "object",
        "properties" : {
          "completedAt" : {
            "type" : "string",
            "description" : "The timestamp when the batch process was completed, in ISO 8601 format.",
            "format" : "date-time"
          },
          "numErrors" : {
            "type" : "integer",
            "format" : "int32"
          },
          "requestedAt" : {
            "type" : "string",
            "description" : "The timestamp when the batch process was initiated, in ISO 8601 format.",
            "format" : "date-time"
          },
          "startedAt" : {
            "type" : "string",
            "description" : "The timestamp when the batch process began execution, in ISO 8601 format.",
            "format" : "date-time"
          },
          "links" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "An object containing relevant links related to the batch request."
          },
          "results" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SimplePublicUpsertObject"
            }
          },
          "errors" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/StandardError"
            }
          },
          "status" : {
            "type" : "string",
            "description" : "The status of the batch processing request. Can be: \"PENDING\", \"PROCESSING\", \"CANCELED\", or \"COMPLETE\".",
            "enum" : [ "PENDING", "PROCESSING", "CANCELED", "COMPLETE" ]
          }
        },
        "description" : "Represents the result of a batch upsert operation, including the operation’s status, timestamps, and a list of successfully created or updated objects."
      },
      "BatchInputSimplePublicObjectId" : {
        "required" : [ "inputs" ],
        "type" : "object",
        "properties" : {
          "inputs" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SimplePublicObjectId"
            }
          }
        }
      },
      "ValueWithTimestamp" : {
        "required" : [ "sourceType", "timestamp", "value" ],
        "type" : "object",
        "properties" : {
          "sourceId" : {
            "type" : "string",
            "description" : "The unique ID of the property."
          },
          "sourceType" : {
            "type" : "string",
            "description" : "The property type."
          },
          "sourceLabel" : {
            "type" : "string",
            "description" : "A human-readable label."
          },
          "updatedByUserId" : {
            "type" : "integer",
            "description" : "The ID of the user who last updated the property.",
            "format" : "int32"
          },
          "value" : {
            "type" : "string",
            "description" : "The property value."
          },
          "timestamp" : {
            "type" : "string",
            "description" : "The timestamp when the property was updated, in ISO 8601 format.",
            "format" : "date-time"
          }
        },
        "description" : "Property model that includes timestamp."
      },
      "BatchInputSimplePublicObjectBatchInputUpsert" : {
        "required" : [ "inputs" ],
        "type" : "object",
        "properties" : {
          "inputs" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SimplePublicObjectBatchInputUpsert"
            }
          }
        }
      },
      "SimplePublicObject" : {
        "required" : [ "createdAt", "id", "properties", "updatedAt" ],
        "type" : "object",
        "properties" : {
          "createdAt" : {
            "type" : "string",
            "description" : "The timestamp when the object was created, in ISO 8601 format.",
            "format" : "date-time"
          },
          "archived" : {
            "type" : "boolean",
            "description" : "Whether the object is archived."
          },
          "archivedAt" : {
            "type" : "string",
            "description" : "The timestamp when the object was archived, in ISO 8601 format.",
            "format" : "date-time"
          },
          "propertiesWithHistory" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/ValueWithTimestamp"
              }
            },
            "description" : "Key-value pairs representing the properties of the object along with their history."
          },
          "id" : {
            "type" : "string",
            "description" : "The unique ID of the object."
          },
          "objectWriteTraceId" : {
            "type" : "string"
          },
          "properties" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string",
              "nullable" : true
            },
            "description" : "Key-value pairs representing the properties of the object."
          },
          "updatedAt" : {
            "type" : "string",
            "description" : "The timestamp when the object was last updated, in ISO 8601 format.",
            "format" : "date-time"
          }
        },
        "description" : "A simple public object.",
        "example" : {
          "archived" : false,
          "createdAt" : "2019-10-30T03:30:17.883Z",
          "id" : "512",
          "properties" : {
            "property_checkbox" : "false",
            "property_date" : "1572480000000",
            "property_dropdown" : "choice_b",
            "property_multiple_checkboxes" : "chocolate;strawberry",
            "property_number" : "17",
            "property_radio" : "option_1",
            "property_string" : "value"
          },
          "updatedAt" : "2019-12-07T16:50:06.678Z"
        }
      },
      "PublicObjectId" : {
        "required" : [ "id" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "The ID of the target record to associate."
          }
        }
      },
      "Paging" : {
        "type" : "object",
        "properties" : {
          "next" : {
            "$ref" : "#/components/schemas/NextPage"
          },
          "prev" : {
            "$ref" : "#/components/schemas/PreviousPage"
          }
        }
      },
      "CollectionResponseMultiAssociatedObjectWithLabel" : {
        "required" : [ "results" ],
        "type" : "object",
        "properties" : {
          "results" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/MultiAssociatedObjectWithLabel"
            }
          },
          "paging" : {
            "$ref" : "#/components/schemas/Paging"
          }
        }
      },
      "PublicDefaultAssociation" : {
        "required" : [ "associationSpec", "from", "to" ],
        "type" : "object",
        "properties" : {
          "from" : {
            "$ref" : "#/components/schemas/PublicObjectId"
          },
          "to" : {
            "$ref" : "#/components/schemas/PublicObjectId"
          },
          "associationSpec" : {
            "$ref" : "#/components/schemas/AssociationSpec"
          }
        }
      },
      "PublicObjectSearchRequest" : {
        "type" : "object",
        "properties" : {
          "query" : {
            "type" : "string",
            "description" : "The search query string, up to 3000 characters."
          },
          "limit" : {
            "type" : "integer",
            "description" : "The maximum results to return, up to 200 objects.",
            "format" : "int32"
          },
          "after" : {
            "type" : "string",
            "description" : "A paging cursor token for retrieving subsequent pages."
          },
          "sorts" : {
            "type" : "array",
            "description" : "Specifies sorting order based on object properties.",
            "items" : {
              "type" : "string"
            }
          },
          "properties" : {
            "type" : "array",
            "description" : "A list of property names to include in the response.",
            "items" : {
              "type" : "string"
            }
          },
          "filterGroups" : {
            "type" : "array",
            "description" : "Up to 6 groups of filters defining additional query criteria.",
            "items" : {
              "$ref" : "#/components/schemas/FilterGroup"
            }
          }
        },
        "description" : "Describes a search request"
      },
      "Error" : {
        "required" : [ "category", "correlationId", "message" ],
        "type" : "object",
        "properties" : {
          "subCategory" : {
            "type" : "string",
            "description" : "A specific category that contains more specific detail about the error"
          },
          "context" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            },
            "description" : "Context about the error condition",
            "example" : {
              "invalidPropertyName" : [ "propertyValue" ],
              "missingScopes" : [ "scope1", "scope2" ]
            }
          },
          "correlationId" : {
            "type" : "string",
            "description" : "A unique identifier for the request. Include this value with any error reports or support tickets",
            "format" : "uuid",
            "example" : "aeb5f871-7f07-4993-9211-075dc63e7cbf"
          },
          "links" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "A map of link names to associated URIs containing documentation about the error or recommended remediation steps"
          },
          "message" : {
            "type" : "string",
            "description" : "A human readable message describing the error along with remediation steps where appropriate",
            "example" : "An error occurred"
          },
          "category" : {
            "type" : "string",
            "description" : "The error category"
          },
          "errors" : {
            "type" : "array",
            "description" : "further information about the error",
            "items" : {
              "$ref" : "#/components/schemas/ErrorDetail"
            }
          }
        },
        "example" : {
          "message" : "Invalid input (details will vary based on the error)",
          "correlationId" : "aeb5f871-7f07-4993-9211-075dc63e7cbf",
          "category" : "VALIDATION_ERROR",
          "links" : {
            "knowledge-base" : "https://www.hubspot.com/products/service/knowledge-base"
          }
        }
      },
      "SimplePublicObjectBatchInputUpsert" : {
        "required" : [ "id", "properties" ],
        "type" : "object",
        "properties" : {
          "idProperty" : {
            "type" : "string",
            "description" : "The name of a property whose values are unique for this object"
          },
          "objectWriteTraceId" : {
            "type" : "string",
            "description" : "In each input object, set this field to a unique ID value to enable more granular debugging for error responses. Learn more about [multi-status errors](https://developers.hubspot.com/docs/reference/api/other-resources/error-handling#multi-status-errors)."
          },
          "id" : {
            "type" : "string",
            "description" : "The ID of the company to update."
          },
          "properties" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "The company property values to set."
          }
        },
        "description" : "Represents an object used in batch upsert operations, containing an object’s unique identifier, its properties, and optionally the unique property name and a write trace ID."
      },
      "PublicGdprDeleteInput" : {
        "required" : [ "objectId" ],
        "type" : "object",
        "properties" : {
          "idProperty" : {
            "type" : "string",
            "description" : "The name of a unique property, when identifying records by property instead of ID. "
          },
          "objectId" : {
            "type" : "string",
            "description" : "The ID of the company to delete."
          }
        }
      },
      "SimplePublicObjectInput" : {
        "required" : [ "properties" ],
        "type" : "object",
        "properties" : {
          "properties" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "The company property values to set."
          }
        },
        "description" : "Represents the input required to create or update a CRM object, containing an object with property names and their corresponding values.",
        "example" : {
          "properties" : {
            "property_checkbox" : "false",
            "property_date" : "1572480000000",
            "property_dropdown" : "choice_b",
            "property_multiple_checkboxes" : "chocolate;strawberry",
            "property_number" : "17",
            "property_radio" : "option_1",
            "property_string" : "value"
          }
        }
      },
      "BatchResponsePublicDefaultAssociation" : {
        "required" : [ "completedAt", "results", "startedAt", "status" ],
        "type" : "object",
        "properties" : {
          "completedAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "status" : {
            "type" : "string",
            "enum" : [ "PENDING", "PROCESSING", "CANCELED", "COMPLETE" ]
          },
          "requestedAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "startedAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "links" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "results" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PublicDefaultAssociation"
            }
          },
          "errors" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/StandardError"
            }
          },
          "numErrors" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "AssociationSpec" : {
        "required" : [ "associationCategory", "associationTypeId" ],
        "type" : "object",
        "properties" : {
          "associationCategory" : {
            "type" : "string",
            "description" : "For [labeled associations](https://developers.hubspot.com/docs/guides/api/crm/associations/associations-v4#associate-records-with-a-label), the category of the association.",
            "enum" : [ "HUBSPOT_DEFINED", "USER_DEFINED", "INTEGRATOR_DEFINED" ]
          },
          "associationTypeId" : {
            "type" : "integer",
            "description" : "The [association type ID](https://developers.hubspot.com/docs/guides/api/crm/associations/associations-v4#association-type-id-values) (e.g., `4` for contact-to-company associations).",
            "format" : "int32"
          }
        },
        "description" : "Defines the type, direction, and details of the relationship between two CRM objects."
      },
      "PublicMergeInput" : {
        "required" : [ "objectIdToMerge", "primaryObjectId" ],
        "type" : "object",
        "properties" : {
          "objectIdToMerge" : {
            "type" : "string",
            "description" : "The ID of the company to merge into the primary."
          },
          "primaryObjectId" : {
            "type" : "string",
            "description" : "The ID of the primary company, which the other will merge into."
          }
        }
      },
      "CollectionResponseSimplePublicObjectWithAssociations" : {
        "required" : [ "results" ],
        "type" : "object",
        "properties" : {
          "results" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SimplePublicObjectWithAssociations"
            }
          },
          "paging" : {
            "$ref" : "#/components/schemas/Paging"
          }
        }
      },
      "SimplePublicObjectWithAssociations" : {
        "required" : [ "createdAt", "id", "properties", "updatedAt" ],
        "type" : "object",
        "properties" : {
          "associations" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/CollectionResponseAssociatedId"
            },
            "description" : "A list defining relationships with other objects."
          },
          "createdAt" : {
            "type" : "string",
            "description" : "The timestamp when the object was created, in ISO 8601 format.",
            "format" : "date-time"
          },
          "archived" : {
            "type" : "boolean",
            "description" : "Whether the object is archived."
          },
          "archivedAt" : {
            "type" : "string",
            "description" : "The timestamp when the object was archived, in ISO 8601 format.",
            "format" : "date-time"
          },
          "propertiesWithHistory" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/ValueWithTimestamp"
              }
            },
            "description" : "Key-value pairs representing the properties of the object along with their history."
          },
          "id" : {
            "type" : "string",
            "description" : "The unique ID of the object."
          },
          "objectWriteTraceId" : {
            "type" : "string"
          },
          "properties" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string",
              "nullable" : true
            },
            "description" : "Key value pairs representing the properties of the object."
          },
          "updatedAt" : {
            "type" : "string",
            "description" : "The timestamp when the object was last updated, in ISO 8601 format.",
            "format" : "date-time"
          }
        },
        "description" : "Represents a CRM object along with its properties, timestamps, and a set of associated object IDs grouped by association type."
      },
      "Filter" : {
        "required" : [ "operator", "propertyName" ],
        "type" : "object",
        "properties" : {
          "highValue" : {
            "type" : "string",
            "description" : "The upper boundary value when using ranged-based filters."
          },
          "propertyName" : {
            "type" : "string",
            "description" : "The name of the property to apply the filter to."
          },
          "values" : {
            "type" : "array",
            "description" : "The values to match against the property.",
            "items" : {
              "type" : "string"
            }
          },
          "value" : {
            "type" : "string",
            "description" : "The value to match against the property."
          },
          "operator" : {
            "type" : "string",
            "description" : "null",
            "enum" : [ "EQ", "NEQ", "LT", "LTE", "GT", "GTE", "BETWEEN", "IN", "NOT_IN", "HAS_PROPERTY", "NOT_HAS_PROPERTY", "CONTAINS_TOKEN", "NOT_CONTAINS_TOKEN" ]
          }
        },
        "description" : "Defines a single condition for searching CRM objects, specifying the property to filter on, the operator to use (such as equals, greater than, or contains), and the value(s) to compare against. "
      },
      "BatchInputSimplePublicObjectBatchInput" : {
        "required" : [ "inputs" ],
        "type" : "object",
        "properties" : {
          "inputs" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SimplePublicObjectBatchInput"
            }
          }
        }
      },
      "PreviousPage" : {
        "required" : [ "before" ],
        "type" : "object",
        "properties" : {
          "before" : {
            "type" : "string",
            "description" : "A paging cursor token for retrieving previous pages."
          },
          "link" : {
            "type" : "string",
            "description" : "A URL that can be used to retrieve the previous pages' results."
          }
        },
        "description" : "specifies the paging information needed to retrieve the previous set of results in a paginated API response"
      },
      "SimplePublicUpsertObject" : {
        "required" : [ "createdAt", "id", "new", "properties", "updatedAt" ],
        "type" : "object",
        "properties" : {
          "createdAt" : {
            "type" : "string",
            "description" : "The timestamp when the object was created, in ISO 8601 format.",
            "format" : "date-time"
          },
          "archived" : {
            "type" : "boolean",
            "description" : "Whether the object is archived."
          },
          "archivedAt" : {
            "type" : "string",
            "description" : "The timestamp when the object was archived, in ISO 8601 format.",
            "format" : "date-time"
          },
          "new" : {
            "type" : "boolean",
            "description" : "Whether the property is new."
          },
          "propertiesWithHistory" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/ValueWithTimestamp"
              }
            },
            "description" : "Key-value pairs representing the properties of the object along with their history."
          },
          "id" : {
            "type" : "string",
            "description" : "The unique ID of the object."
          },
          "objectWriteTraceId" : {
            "type" : "string"
          },
          "properties" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "Key value pairs representing the properties of the object."
          },
          "updatedAt" : {
            "type" : "string",
            "description" : "The timestamp when the object was last updated, in ISO 8601 format.",
            "format" : "date-time"
          }
        },
        "description" : "Represents a CRM object that has either been created or updated (upserted)"
      },
      "SimplePublicObjectBatchInput" : {
        "required" : [ "id", "properties" ],
        "type" : "object",
        "properties" : {
          "idProperty" : {
            "type" : "string",
            "description" : "The name of a property whose values are unique for this object",
            "example" : "my_unique_property_name"
          },
          "objectWriteTraceId" : {
            "type" : "string",
            "description" : "In each input object, set this field to a unique ID value to enable more granular debugging for error responses. Learn more about [multi-status errors](https://developers.hubspot.com/docs/reference/api/other-resources/error-handling#multi-status-errors)."
          },
          "id" : {
            "type" : "string",
            "description" : "The ID to be updated. This can be the object ID, or the unique property value of the `idProperty` property."
          },
          "properties" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "The company property values to set."
          }
        },
        "description" : "Contains an array of CRM object records to be processed in a batch operation, each defined by their ID and properties."
      },
      "SimplePublicObjectBatchInputForCreate" : {
        "required" : [ "properties" ],
        "type" : "object",
        "properties" : {
          "associations" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PublicAssociationsForObject"
            }
          },
          "objectWriteTraceId" : {
            "type" : "string"
          },
          "properties" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          }
        }
      },
      "AssociatedId" : {
        "required" : [ "id", "type" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "The ID for the association type."
          },
          "type" : {
            "type" : "string",
            "description" : "The type of association.",
            "example" : "deal_to_contact"
          }
        },
        "description" : "Contains the id and type of an association"
      },
      "NextPage" : {
        "required" : [ "after" ],
        "type" : "object",
        "properties" : {
          "link" : {
            "type" : "string",
            "description" : "A URL that can be used to retrieve the next page results."
          },
          "after" : {
            "type" : "string",
            "description" : "A paging cursor token for retrieving subsequent pages."
          }
        },
        "description" : "Specifies the paging information needed to retrieve the next set of results in a paginated API response",
        "example" : {
          "after" : "NTI1Cg%3D%3D",
          "link" : "?after=NTI1Cg%3D%3D"
        }
      },
      "SimplePublicObjectInputForCreate" : {
        "required" : [ "properties" ],
        "type" : "object",
        "properties" : {
          "associations" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PublicAssociationsForObject"
            }
          },
          "properties" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "The company property values to set."
          }
        },
        "description" : "Is the input object used to create a new CRM object, containing the properties to be set and optional associations to link the new record with other CRM objects."
      },
      "BatchInputSimplePublicObjectBatchInputForCreate" : {
        "required" : [ "inputs" ],
        "type" : "object",
        "properties" : {
          "inputs" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SimplePublicObjectBatchInputForCreate"
            }
          }
        }
      }
    },
    "responses" : {
      "Error" : {
        "description" : "An error occurred.",
        "content" : {
          "*/*" : {
            "schema" : {
              "$ref" : "#/components/schemas/Error"
            }
          }
        }
      }
    },
    "securitySchemes" : {
      "oauth2" : {
        "type" : "oauth2",
        "flows" : {
          "authorizationCode" : {
            "authorizationUrl" : "https://app.hubspot.com/oauth/authorize",
            "tokenUrl" : "https://api.hubapi.com/oauth/v1/token",
            "scopes" : {
              "oauth" : "User and Account Information",
              "crm.objects.deals.read" : "View deal records",
              "crm.objects.subscriptions.read" : "Read Commerce Subscriptions",
              "crm.objects.services.read" : "Read services",
              "crm.objects.orders.read" : "Read Orders",
              "crm.objects.listings.write" : "Write listings",
              "crm.objects.custom.read" : "View custom object records",
              "crm.objects.companies.write" : "View company records",
              "crm.objects.custom.sensitive.write.v2" : "Change custom object records (sensitive)",
              "crm.objects.custom.highly_sensitive.write.v2" : "Change custom object records (highly-sensitive)",
              "crm.objects.companies.read" : "Create or update company records",
              "crm.objects.appointments.sensitive.read.v2" : "Read appointments (sensitive)",
              "crm.objects.contacts.highly_sensitive.read.v2" : "View contact records (highly-sensitive)",
              "crm.objects.companies.sensitive.read.v2" : "View sensitive properties on company records",
              "media_bridge.read" : "Read media and media events",
              "crm.objects.deals.highly_sensitive.read.v2" : "View deal records (highly-sensitive)",
              "crm.objects.contacts.highly_sensitive.write.v2" : "Change contact records (highly-sensitive)",
              "crm.objects.companies.highly_sensitive.read.v2" : "View company records (highly-sensitive)",
              "crm.objects.commercepayments.write" : "Write commerce payments",
              "crm.objects.invoices.write" : "Write invoices",
              "crm.objects.contacts.sensitive.write.v2" : "Create or update sensitive properties on contact records",
              "crm.objects.users.write" : "Write User CRM objects",
              "crm.objects.custom.sensitive.read.v2" : "View custom object records (sensitive)",
              "crm.objects.users.read" : "Read User CRM objects",
              "crm.objects.partner-services.read" : "View Partner Service CRM objects",
              "crm.objects.orders.write" : "Write orders",
              "crm.objects.partner-services.write" : "Modify Partner Service CRM objects",
              "crm.objects.appointments.write" : "Write appointments",
              "crm.objects.carts.write" : "Write cart",
              "tickets" : "Read and write tickets",
              "crm.objects.commercepayments.read" : "Read the COMMERCE_PAYMENT object.",
              "crm.objects.products.write" : "Write to my Product Library",
              "crm.objects.services.write" : "Write services",
              "crm.objects.subscriptions.write" : "Write to Commerce Subscriptions",
              "crm.objects.deals.sensitive.write.v2" : "Create or update sensitive properties on deal records",
              "crm.objects.contacts.read" : "View contact records",
              "crm.objects.appointments.sensitive.write.v2" : "Write appointments (sensitive)",
              "crm.objects.invoices.read" : "Read invoices objects",
              "tickets.sensitive.v2" : "Tickets (sensitive)",
              "crm.objects.custom.write" : "Change custom object records",
              "crm.objects.deals.write" : "Create or update deal records",
              "e-commerce" : "e-commerce",
              "crm.objects.appointments.read" : "Read appointments",
              "crm.objects.companies.sensitive.write.v2" : "Create or update sensitive properties on company records",
              "crm.objects.deals.highly_sensitive.write.v2" : "Change deal records (highly-sensitive)",
              "crm.objects.custom.highly_sensitive.read.v2" : "View custom object records (highly-sensitive)",
              "crm.objects.companies.highly_sensitive.write.v2" : "Change company records (highly-sensitive)",
              "crm.objects.goals.write" : "Write goals",
              "crm.objects.line_items.write" : "Line Items",
              "crm.objects.contacts.write" : "Create or update contact records",
              "crm.objects.goals.read" : "Read goals",
              "crm.objects.partner-clients.write" : "Modify Partner Client CRM objects",
              "crm.objects.line_items.read" : "Line Items",
              "crm.objects.deals.sensitive.read.v2" : "View sensitive properties on deal records",
              "tickets.highly_sensitive.v2" : "Tickets (highly-sensitive)",
              "crm.objects.quotes.write" : "Quotes",
              "crm.objects.leads.read" : "Read lead objects",
              "crm.objects.leads.write" : "Modify lead objects",
              "crm.objects.carts.read" : "Read carts",
              "crm.objects.quotes.read" : "Quotes",
              "crm.objects.courses.write" : "Write courses",
              "crm.objects.partner-clients.read" : "View Partner Client CRM objects",
              "crm.objects.courses.read" : "Read courses",
              "crm.objects.listings.read" : "Read listings",
              "crm.objects.contacts.sensitive.read.v2" : "View sensitive properties on contact records",
              "crm.objects.products.read" : "Read from my Product Library"
            }
          }
        }
      },
      "private_apps_legacy" : {
        "type" : "apiKey",
        "name" : "private-app-legacy",
        "in" : "header"
      },
      "private_apps" : {
        "type" : "apiKey",
        "name" : "private-app",
        "in" : "header"
      }
    }
  },
  "x-hubspot-available-client-libraries" : [ "Node", "Python", "Ruby", "PHP" ],
  "x-hubspot-product-tier-requirements" : {
    "marketing" : "FREE",
    "sales" : "FREE",
    "service" : "FREE",
    "cms" : "FREE",
    "commerce" : "FREE",
    "crmHub" : "FREE"
  }
}