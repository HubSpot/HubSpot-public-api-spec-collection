{
	"info": {
		"_postman_id": "c7172ff6-d9b0-4852-a36c-158801677903",
		"name": "Conversations - Conversations API Collection",
		"description": "Query and interact with existing Conversation threads, messages, and channels",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_uid": "26126890-c7172ff6-d9b0-4852-a36c-158801677903"
	},
	"item": [
		{
			"name": "Conversations",
			"item": [
				{
					"name": "Get conversations inboxes.",
					"id": "b86020dc-28be-41d9-8374-3ea57f622fe2",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "scope",
									"value": "conversations.read conversations.write",
									"type": "string"
								},
								{
									"key": "accessTokenUrl",
									"value": "https://api.hubapi.com/oauth/v1/token",
									"type": "string"
								},
								{
									"key": "authUrl",
									"value": "https://app.hubspot.com/oauth/authorize",
									"type": "string"
								},
								{
									"key": "grant_type",
									"value": "authorization_code",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/conversations/v3/conversations/inboxes?after=<string>&limit=<integer>&sort=<string>&sort=<string>&defaultPageLength=<integer>&archived=<boolean>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"conversations",
								"v3",
								"conversations",
								"inboxes"
							],
							"query": [
								{
									"key": "after",
									"value": "<string>",
									"description": "The paging cursor token of the last successfully read resource will be returned as the `paging.next.after` JSON property of a paged response containing more results."
								},
								{
									"key": "limit",
									"value": "<integer>",
									"description": "The maximum number of results to display per page."
								},
								{
									"key": "sort",
									"value": "<string>"
								},
								{
									"key": "sort",
									"value": "<string>"
								},
								{
									"key": "defaultPageLength",
									"value": "<integer>"
								},
								{
									"key": "archived",
									"value": "<boolean>"
								}
							]
						}
					},
					"response": [
						{
							"id": "4f6758be-04b6-47ba-a3a0-7fe2edcb818d",
							"name": "successful operation",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/conversations/v3/conversations/inboxes?after=<string>&limit=<integer>&sort=<string>&defaultPageLength=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"conversations",
										"v3",
										"conversations",
										"inboxes"
									],
									"query": [
										{
											"description": "The paging cursor token of the last successfully read resource will be returned as the `paging.next.after` JSON property of a paged response containing more results.",
											"key": "after",
											"value": "<string>"
										},
										{
											"description": "The maximum number of results to display per page.",
											"key": "limit",
											"value": "<integer>"
										},
										{
											"key": "sort",
											"value": "<string>"
										},
										{
											"key": "defaultPageLength",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"results\": [\n    {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"createdAt\": \"<dateTime>\",\n      \"updatedAt\": \"<dateTime>\",\n      \"archived\": \"<boolean>\",\n      \"type\": \"<string>\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"createdAt\": \"<dateTime>\",\n      \"updatedAt\": \"<dateTime>\",\n      \"archived\": \"<boolean>\",\n      \"type\": \"<string>\"\n    }\n  ],\n  \"total\": \"<integer>\",\n  \"paging\": {\n    \"next\": {\n      \"after\": \"<string>\",\n      \"link\": \"<string>\"\n    }\n  }\n}"
						},
						{
							"id": "37b96f16-f46a-4b83-a34e-358e322207cc",
							"name": "An error occurred.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/conversations/v3/conversations/inboxes?after=<string>&limit=<integer>&sort=<string>&defaultPageLength=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"conversations",
										"v3",
										"conversations",
										"inboxes"
									],
									"query": [
										{
											"description": "The paging cursor token of the last successfully read resource will be returned as the `paging.next.after` JSON property of a paged response containing more results.",
											"key": "after",
											"value": "<string>"
										},
										{
											"description": "The maximum number of results to display per page.",
											"key": "limit",
											"value": "<integer>"
										},
										{
											"key": "sort",
											"value": "<string>"
										},
										{
											"key": "defaultPageLength",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": "{\n  \"category\": \"<string>\",\n  \"correlationId\": \"<uuid>\",\n  \"message\": \"<string>\",\n  \"subCategory\": \"<string>\",\n  \"errors\": [\n    {\n      \"message\": \"<string>\",\n      \"in\": \"<string>\",\n      \"code\": \"<string>\",\n      \"subCategory\": \"<string>\",\n      \"context\": {\n        \"eab\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"consectetur_29f\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"culpa_bd6\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dolore5cd\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      }\n    },\n    {\n      \"message\": \"<string>\",\n      \"in\": \"<string>\",\n      \"code\": \"<string>\",\n      \"subCategory\": \"<string>\",\n      \"context\": {\n        \"pariatur_57\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"consequat_a\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"voluptate08b\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"idde\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      }\n    }\n  ],\n  \"context\": {\n    \"anim_a\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"links\": {\n    \"tempor_0\": \"<string>\",\n    \"ea__93\": \"<string>\"\n  }\n}"
						}
					]
				},
				{
					"name": "Get a single thread.",
					"id": "d6308144-c443-4d3c-a80b-5dd020c8fb16",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "scope",
									"value": "conversations.read conversations.write",
									"type": "string"
								},
								{
									"key": "accessTokenUrl",
									"value": "https://api.hubapi.com/oauth/v1/token",
									"type": "string"
								},
								{
									"key": "authUrl",
									"value": "https://app.hubspot.com/oauth/authorize",
									"type": "string"
								},
								{
									"key": "grant_type",
									"value": "authorization_code",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/conversations/v3/conversations/threads/:threadId?archived=<boolean>&property=<string>&association=TICKET",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"conversations",
								"v3",
								"conversations",
								"threads",
								":threadId"
							],
							"query": [
								{
									"key": "archived",
									"value": "<boolean>",
									"description": "Whether to return only results that have been archived. Default is false."
								},
								{
									"key": "property",
									"value": "<string>"
								},
								{
									"key": "association",
									"value": "TICKET",
									"description": "You can specify an association type here of `TICKET`. If this is set the response will included a thread associations object and associated ticket id if present. If there are no associations to a ticket with this conversation, then the thread associations object will not be present on the response. "
								}
							],
							"variable": [
								{
									"key": "threadId",
									"value": "<string>"
								}
							]
						},
						"description": "Returns a single thread."
					},
					"response": [
						{
							"id": "d0700439-ce8e-4be3-a38a-2c86c1866a11",
							"name": "successful operation",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/conversations/v3/conversations/threads/:threadId?archived=<boolean>&property=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"conversations",
										"v3",
										"conversations",
										"threads",
										":threadId"
									],
									"query": [
										{
											"description": "Whether to return only results that have been archived. Default is false.",
											"key": "archived",
											"value": "<boolean>"
										},
										{
											"key": "property",
											"value": "<string>"
										}
									],
									"variable": [
										{
											"key": "threadId"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"associatedContactId\": \"<string>\",\n  \"createdAt\": \"<dateTime>\",\n  \"id\": \"<string>\",\n  \"inboxId\": \"<string>\",\n  \"spam\": \"<boolean>\",\n  \"status\": \"CLOSED\",\n  \"closedAt\": \"<dateTime>\",\n  \"latestMessageTimestamp\": \"<dateTime>\",\n  \"latestMessageSentTimestamp\": \"<dateTime>\",\n  \"latestMessageReceivedTimestamp\": \"<dateTime>\",\n  \"assignedTo\": \"<string>\",\n  \"archived\": \"<boolean>\",\n  \"originalChannelAccountId\": \"<string>\",\n  \"originalChannelId\": \"<string>\"\n}"
						},
						{
							"id": "c4ea441f-3db3-43ac-abe4-43eeb5e98b28",
							"name": "An error occurred.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/conversations/v3/conversations/threads/:threadId?archived=<boolean>&property=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"conversations",
										"v3",
										"conversations",
										"threads",
										":threadId"
									],
									"query": [
										{
											"description": "Whether to return only results that have been archived. Default is false.",
											"key": "archived",
											"value": "<boolean>"
										},
										{
											"key": "property",
											"value": "<string>"
										}
									],
									"variable": [
										{
											"key": "threadId"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": "{\n  \"category\": \"<string>\",\n  \"correlationId\": \"<uuid>\",\n  \"message\": \"<string>\",\n  \"subCategory\": \"<string>\",\n  \"errors\": [\n    {\n      \"message\": \"<string>\",\n      \"in\": \"<string>\",\n      \"code\": \"<string>\",\n      \"subCategory\": \"<string>\",\n      \"context\": {\n        \"eab\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"consectetur_29f\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"culpa_bd6\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dolore5cd\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      }\n    },\n    {\n      \"message\": \"<string>\",\n      \"in\": \"<string>\",\n      \"code\": \"<string>\",\n      \"subCategory\": \"<string>\",\n      \"context\": {\n        \"pariatur_57\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"consequat_a\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"voluptate08b\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"idde\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      }\n    }\n  ],\n  \"context\": {\n    \"anim_a\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"links\": {\n    \"tempor_0\": \"<string>\",\n    \"ea__93\": \"<string>\"\n  }\n}"
						}
					]
				},
				{
					"name": "Archives a thread.",
					"id": "6d3dfb54-9d37-4cd0-9f86-cf69103cd279",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "private-app-legacy",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/conversations/v3/conversations/threads/:threadId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"conversations",
								"v3",
								"conversations",
								"threads",
								":threadId"
							],
							"variable": [
								{
									"key": "threadId",
									"value": "<long>"
								}
							]
						},
						"description": "Archives a single thread. The thread will be permanently deleted 30 days after placed in an archived state."
					},
					"response": [
						{
							"id": "e8d1530e-e374-442a-b92e-96f2a84792c2",
							"name": "No content",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "private-app-legacy",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/conversations/v3/conversations/threads/:threadId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"conversations",
										"v3",
										"conversations",
										"threads",
										":threadId"
									],
									"variable": [
										{
											"key": "threadId"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": []
						},
						{
							"id": "2f3482a1-c213-4333-b9fd-e68fc92be1ba",
							"name": "An error occurred.",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "private-app-legacy",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/conversations/v3/conversations/threads/:threadId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"conversations",
										"v3",
										"conversations",
										"threads",
										":threadId"
									],
									"variable": [
										{
											"key": "threadId"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": "{\n  \"category\": \"<string>\",\n  \"correlationId\": \"<uuid>\",\n  \"message\": \"<string>\",\n  \"subCategory\": \"<string>\",\n  \"errors\": [\n    {\n      \"message\": \"<string>\",\n      \"in\": \"<string>\",\n      \"code\": \"<string>\",\n      \"subCategory\": \"<string>\",\n      \"context\": {\n        \"eab\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"consectetur_29f\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"culpa_bd6\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dolore5cd\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      }\n    },\n    {\n      \"message\": \"<string>\",\n      \"in\": \"<string>\",\n      \"code\": \"<string>\",\n      \"subCategory\": \"<string>\",\n      \"context\": {\n        \"pariatur_57\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"consequat_a\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"voluptate08b\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"idde\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      }\n    }\n  ],\n  \"context\": {\n    \"anim_a\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"links\": {\n    \"tempor_0\": \"<string>\",\n    \"ea__93\": \"<string>\"\n  }\n}"
						}
					]
				},
				{
					"name": "Update a thread.",
					"id": "c24c639d-7ad9-4765-bd2c-411609c656ce",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "private-app-legacy",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"status\": \"CLOSED\",\n  \"archived\": \"<boolean>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/conversations/v3/conversations/threads/:threadId?archived=<boolean>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"conversations",
								"v3",
								"conversations",
								"threads",
								":threadId"
							],
							"query": [
								{
									"key": "archived",
									"value": "<boolean>",
									"description": "Whether the thread to update is archived. Default is false. A thread's status property can not be updated if the thread is archived."
								}
							],
							"variable": [
								{
									"key": "threadId",
									"value": "<long>"
								}
							]
						},
						"description": "Updates a single thread. Either a thread's status can be updated, or the thread can be restored."
					},
					"response": [
						{
							"id": "d247be2c-db53-43bf-9d18-be9f6c81a820",
							"name": "successful operation",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "private-app-legacy",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"status\": \"CLOSED\",\n  \"archived\": \"<boolean>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/conversations/v3/conversations/threads/:threadId?archived=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"conversations",
										"v3",
										"conversations",
										"threads",
										":threadId"
									],
									"query": [
										{
											"description": "Whether the thread to update is archived. Default is false. A thread's status property can not be updated if the thread is archived.",
											"key": "archived",
											"value": "<boolean>"
										}
									],
									"variable": [
										{
											"key": "threadId"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"associatedContactId\": \"<string>\",\n  \"createdAt\": \"<dateTime>\",\n  \"id\": \"<string>\",\n  \"inboxId\": \"<string>\",\n  \"spam\": \"<boolean>\",\n  \"status\": \"CLOSED\",\n  \"closedAt\": \"<dateTime>\",\n  \"latestMessageTimestamp\": \"<dateTime>\",\n  \"latestMessageSentTimestamp\": \"<dateTime>\",\n  \"latestMessageReceivedTimestamp\": \"<dateTime>\",\n  \"assignedTo\": \"<string>\",\n  \"archived\": \"<boolean>\",\n  \"originalChannelAccountId\": \"<string>\",\n  \"originalChannelId\": \"<string>\"\n}"
						},
						{
							"id": "9bb5b934-74b4-4b58-aa15-11293cf96730",
							"name": "An error occurred.",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "*/*"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "private-app-legacy",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"status\": \"CLOSED\",\n  \"archived\": \"<boolean>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/conversations/v3/conversations/threads/:threadId?archived=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"conversations",
										"v3",
										"conversations",
										"threads",
										":threadId"
									],
									"query": [
										{
											"description": "Whether the thread to update is archived. Default is false. A thread's status property can not be updated if the thread is archived.",
											"key": "archived",
											"value": "<boolean>"
										}
									],
									"variable": [
										{
											"key": "threadId"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": "{\n  \"category\": \"<string>\",\n  \"correlationId\": \"<uuid>\",\n  \"message\": \"<string>\",\n  \"subCategory\": \"<string>\",\n  \"errors\": [\n    {\n      \"message\": \"<string>\",\n      \"in\": \"<string>\",\n      \"code\": \"<string>\",\n      \"subCategory\": \"<string>\",\n      \"context\": {\n        \"eab\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"consectetur_29f\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"culpa_bd6\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dolore5cd\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      }\n    },\n    {\n      \"message\": \"<string>\",\n      \"in\": \"<string>\",\n      \"code\": \"<string>\",\n      \"subCategory\": \"<string>\",\n      \"context\": {\n        \"pariatur_57\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"consequat_a\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"voluptate08b\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"idde\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      }\n    }\n  ],\n  \"context\": {\n    \"anim_a\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"links\": {\n    \"tempor_0\": \"<string>\",\n    \"ea__93\": \"<string>\"\n  }\n}"
						}
					]
				},
				{
					"name": "Get the original content of a single message.",
					"id": "0ebcf6ba-b223-4097-9d80-5927314a09f3",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "scope",
									"value": "conversations.read conversations.write",
									"type": "string"
								},
								{
									"key": "accessTokenUrl",
									"value": "https://api.hubapi.com/oauth/v1/token",
									"type": "string"
								},
								{
									"key": "authUrl",
									"value": "https://app.hubspot.com/oauth/authorize",
									"type": "string"
								},
								{
									"key": "grant_type",
									"value": "authorization_code",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/conversations/v3/conversations/threads/:threadId/messages/:messageId/original-content?property=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"conversations",
								"v3",
								"conversations",
								"threads",
								":threadId",
								"messages",
								":messageId",
								"original-content"
							],
							"query": [
								{
									"key": "property",
									"value": "<string>"
								}
							],
							"variable": [
								{
									"key": "threadId",
									"value": "<long>"
								},
								{
									"key": "messageId",
									"value": "<string>"
								}
							]
						},
						"description": "Returns the complete original text and rich text bodies of a message. This will be different from the text and rich text in the message itself if the message's `truncationStatus` is anything other than `NOT_TRUNCATED`."
					},
					"response": [
						{
							"id": "fc3c2296-af22-448e-9938-867686534102",
							"name": "successful operation",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/conversations/v3/conversations/threads/:threadId/messages/:messageId/original-content?property=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"conversations",
										"v3",
										"conversations",
										"threads",
										":threadId",
										"messages",
										":messageId",
										"original-content"
									],
									"query": [
										{
											"key": "property",
											"value": "<string>"
										}
									],
									"variable": [
										{
											"key": "threadId"
										},
										{
											"key": "messageId"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"text\": \"<string>\",\n  \"richText\": \"<string>\"\n}"
						},
						{
							"id": "ffacb8c4-88ef-44a9-866b-2eecaadb4345",
							"name": "An error occurred.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/conversations/v3/conversations/threads/:threadId/messages/:messageId/original-content?property=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"conversations",
										"v3",
										"conversations",
										"threads",
										":threadId",
										"messages",
										":messageId",
										"original-content"
									],
									"query": [
										{
											"key": "property",
											"value": "<string>"
										}
									],
									"variable": [
										{
											"key": "threadId"
										},
										{
											"key": "messageId"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": "{\n  \"category\": \"<string>\",\n  \"correlationId\": \"<uuid>\",\n  \"message\": \"<string>\",\n  \"subCategory\": \"<string>\",\n  \"errors\": [\n    {\n      \"message\": \"<string>\",\n      \"in\": \"<string>\",\n      \"code\": \"<string>\",\n      \"subCategory\": \"<string>\",\n      \"context\": {\n        \"eab\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"consectetur_29f\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"culpa_bd6\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dolore5cd\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      }\n    },\n    {\n      \"message\": \"<string>\",\n      \"in\": \"<string>\",\n      \"code\": \"<string>\",\n      \"subCategory\": \"<string>\",\n      \"context\": {\n        \"pariatur_57\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"consequat_a\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"voluptate08b\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"idde\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      }\n    }\n  ],\n  \"context\": {\n    \"anim_a\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"links\": {\n    \"tempor_0\": \"<string>\",\n    \"ea__93\": \"<string>\"\n  }\n}"
						}
					]
				},
				{
					"name": "Get message history for a thread.",
					"id": "2e293c45-6067-4647-95fd-59ff40b41b6f",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "scope",
									"value": "conversations.read conversations.write",
									"type": "string"
								},
								{
									"key": "accessTokenUrl",
									"value": "https://api.hubapi.com/oauth/v1/token",
									"type": "string"
								},
								{
									"key": "authUrl",
									"value": "https://app.hubspot.com/oauth/authorize",
									"type": "string"
								},
								{
									"key": "grant_type",
									"value": "authorization_code",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/conversations/v3/conversations/threads/:threadId/messages?after=<string>&limit=<integer>&sort=<string>&sort=<string>&archived=<boolean>&property=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"conversations",
								"v3",
								"conversations",
								"threads",
								":threadId",
								"messages"
							],
							"query": [
								{
									"key": "after",
									"value": "<string>",
									"description": "The paging cursor token of the last successfully read resource will be returned as the `paging.next.after` JSON property of a paged response containing more results."
								},
								{
									"key": "limit",
									"value": "<integer>",
									"description": "The maximum number of results to display per page."
								},
								{
									"key": "sort",
									"value": "<string>",
									"description": "Sort direction. Valid options are `createdAt` (ascending), and `-createdAt` (descending, default)"
								},
								{
									"key": "sort",
									"value": "<string>",
									"description": "Sort direction. Valid options are `createdAt` (ascending), and `-createdAt` (descending, default)"
								},
								{
									"key": "archived",
									"value": "<boolean>",
									"description": "Whether to return only results that have been archived."
								},
								{
									"key": "property",
									"value": "<string>"
								}
							],
							"variable": [
								{
									"key": "threadId",
									"value": "<long>"
								}
							]
						}
					},
					"response": [
						{
							"id": "58cef584-519f-4910-b419-fb9aadb34216",
							"name": "successful operation",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/conversations/v3/conversations/threads/:threadId/messages?after=<string>&limit=<integer>&sort=<string>&archived=<boolean>&property=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"conversations",
										"v3",
										"conversations",
										"threads",
										":threadId",
										"messages"
									],
									"query": [
										{
											"description": "The paging cursor token of the last successfully read resource will be returned as the `paging.next.after` JSON property of a paged response containing more results.",
											"key": "after",
											"value": "<string>"
										},
										{
											"description": "The maximum number of results to display per page.",
											"key": "limit",
											"value": "<integer>"
										},
										{
											"description": "Sort direction. Valid options are `createdAt` (ascending), and `-createdAt` (descending, default)",
											"key": "sort",
											"value": "<string>"
										},
										{
											"description": "Whether to return only results that have been archived.",
											"key": "archived",
											"value": "<boolean>"
										},
										{
											"key": "property",
											"value": "<string>"
										}
									],
									"variable": [
										{
											"key": "threadId"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"results\": [\n    {\n      \"value\": \"<Circular reference to #/components/schemas/PublicConversationsMessage detected>\"\n    },\n    {\n      \"value\": \"<Circular reference to #/components/schemas/PublicConversationsMessage detected>\"\n    }\n  ],\n  \"paging\": {\n    \"next\": {\n      \"after\": \"<string>\",\n      \"link\": \"<string>\"\n    }\n  }\n}"
						},
						{
							"id": "6363b39b-2158-4428-a5fb-2aaac7f877bb",
							"name": "An error occurred.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/conversations/v3/conversations/threads/:threadId/messages?after=<string>&limit=<integer>&sort=<string>&archived=<boolean>&property=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"conversations",
										"v3",
										"conversations",
										"threads",
										":threadId",
										"messages"
									],
									"query": [
										{
											"description": "The paging cursor token of the last successfully read resource will be returned as the `paging.next.after` JSON property of a paged response containing more results.",
											"key": "after",
											"value": "<string>"
										},
										{
											"description": "The maximum number of results to display per page.",
											"key": "limit",
											"value": "<integer>"
										},
										{
											"description": "Sort direction. Valid options are `createdAt` (ascending), and `-createdAt` (descending, default)",
											"key": "sort",
											"value": "<string>"
										},
										{
											"description": "Whether to return only results that have been archived.",
											"key": "archived",
											"value": "<boolean>"
										},
										{
											"key": "property",
											"value": "<string>"
										}
									],
									"variable": [
										{
											"key": "threadId"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": "{\n  \"category\": \"<string>\",\n  \"correlationId\": \"<uuid>\",\n  \"message\": \"<string>\",\n  \"subCategory\": \"<string>\",\n  \"errors\": [\n    {\n      \"message\": \"<string>\",\n      \"in\": \"<string>\",\n      \"code\": \"<string>\",\n      \"subCategory\": \"<string>\",\n      \"context\": {\n        \"eab\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"consectetur_29f\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"culpa_bd6\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dolore5cd\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      }\n    },\n    {\n      \"message\": \"<string>\",\n      \"in\": \"<string>\",\n      \"code\": \"<string>\",\n      \"subCategory\": \"<string>\",\n      \"context\": {\n        \"pariatur_57\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"consequat_a\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"voluptate08b\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"idde\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      }\n    }\n  ],\n  \"context\": {\n    \"anim_a\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"links\": {\n    \"tempor_0\": \"<string>\",\n    \"ea__93\": \"<string>\"\n  }\n}"
						}
					]
				},
				{
					"name": "Send a message to a thread.",
					"id": "930d41e4-ee8a-4a47-ba15-89d84d87d6f1",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "private-app-legacy",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{apiKey}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"attachments\": [],\n  \"channelAccountId\": \"<string>\",\n  \"channelId\": \"<string>\",\n  \"recipients\": [\n    {\n      \"deliveryIdentifiers\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\"\n        }\n      ],\n      \"actorId\": \"<string>\",\n      \"name\": \"<string>\",\n      \"recipientField\": \"<string>\",\n      \"deliveryIdentifier\": {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    },\n    {\n      \"deliveryIdentifiers\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\"\n        }\n      ],\n      \"actorId\": \"<string>\",\n      \"name\": \"<string>\",\n      \"recipientField\": \"<string>\",\n      \"deliveryIdentifier\": {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    }\n  ],\n  \"senderActorId\": \"<string>\",\n  \"text\": \"<string>\",\n  \"type\": \"MESSAGE\",\n  \"richText\": \"<string>\",\n  \"subject\": \"<string>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/conversations/v3/conversations/threads/:threadId/messages",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"conversations",
								"v3",
								"conversations",
								"threads",
								":threadId",
								"messages"
							],
							"variable": [
								{
									"key": "threadId",
									"value": "<long>"
								}
							]
						},
						"description": "Send a new message on a thread at the current timestamp."
					},
					"response": [
						{
							"id": "522a2387-abe4-444e-ad3b-77c3f0862c44",
							"name": "Default Response",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "private-app-legacy",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"attachments\": [],\n  \"channelAccountId\": \"<string>\",\n  \"channelId\": \"<string>\",\n  \"recipients\": [\n    {\n      \"deliveryIdentifiers\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\"\n        }\n      ],\n      \"actorId\": \"<string>\",\n      \"name\": \"<string>\",\n      \"recipientField\": \"<string>\",\n      \"deliveryIdentifier\": {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    },\n    {\n      \"deliveryIdentifiers\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\"\n        }\n      ],\n      \"actorId\": \"<string>\",\n      \"name\": \"<string>\",\n      \"recipientField\": \"<string>\",\n      \"deliveryIdentifier\": {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    }\n  ],\n  \"senderActorId\": \"<string>\",\n  \"text\": \"<string>\",\n  \"type\": \"MESSAGE\",\n  \"richText\": \"<string>\",\n  \"subject\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/conversations/v3/conversations/threads/:threadId/messages",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"conversations",
										"v3",
										"conversations",
										"threads",
										":threadId",
										"messages"
									],
									"variable": [
										{
											"key": "threadId"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "null"
						},
						{
							"id": "c88afb35-d8c5-4a1e-9741-643c81129ef8",
							"name": "successful operation",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "private-app-legacy",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"attachments\": [],\n  \"channelAccountId\": \"<string>\",\n  \"channelId\": \"<string>\",\n  \"recipients\": [\n    {\n      \"deliveryIdentifiers\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\"\n        }\n      ],\n      \"actorId\": \"<string>\",\n      \"name\": \"<string>\",\n      \"recipientField\": \"<string>\",\n      \"deliveryIdentifier\": {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    },\n    {\n      \"deliveryIdentifiers\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\"\n        }\n      ],\n      \"actorId\": \"<string>\",\n      \"name\": \"<string>\",\n      \"recipientField\": \"<string>\",\n      \"deliveryIdentifier\": {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    }\n  ],\n  \"senderActorId\": \"<string>\",\n  \"text\": \"<string>\",\n  \"type\": \"MESSAGE\",\n  \"richText\": \"<string>\",\n  \"subject\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/conversations/v3/conversations/threads/:threadId/messages",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"conversations",
										"v3",
										"conversations",
										"threads",
										":threadId",
										"messages"
									],
									"variable": [
										{
											"key": "threadId"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"value\": \"<Circular reference to #/components/schemas/PublicConversationsMessage detected>\"\n}"
						},
						{
							"id": "76cce650-a270-4231-aa29-2fee2f87375b",
							"name": "An error occurred.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "*/*"
									},
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "private-app-legacy",
										"value": "<API Key>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"attachments\": [],\n  \"channelAccountId\": \"<string>\",\n  \"channelId\": \"<string>\",\n  \"recipients\": [\n    {\n      \"deliveryIdentifiers\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\"\n        }\n      ],\n      \"actorId\": \"<string>\",\n      \"name\": \"<string>\",\n      \"recipientField\": \"<string>\",\n      \"deliveryIdentifier\": {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    },\n    {\n      \"deliveryIdentifiers\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\"\n        }\n      ],\n      \"actorId\": \"<string>\",\n      \"name\": \"<string>\",\n      \"recipientField\": \"<string>\",\n      \"deliveryIdentifier\": {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    }\n  ],\n  \"senderActorId\": \"<string>\",\n  \"text\": \"<string>\",\n  \"type\": \"MESSAGE\",\n  \"richText\": \"<string>\",\n  \"subject\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/conversations/v3/conversations/threads/:threadId/messages",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"conversations",
										"v3",
										"conversations",
										"threads",
										":threadId",
										"messages"
									],
									"variable": [
										{
											"key": "threadId"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": "{\n  \"category\": \"<string>\",\n  \"correlationId\": \"<uuid>\",\n  \"message\": \"<string>\",\n  \"subCategory\": \"<string>\",\n  \"errors\": [\n    {\n      \"message\": \"<string>\",\n      \"in\": \"<string>\",\n      \"code\": \"<string>\",\n      \"subCategory\": \"<string>\",\n      \"context\": {\n        \"eab\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"consectetur_29f\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"culpa_bd6\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dolore5cd\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      }\n    },\n    {\n      \"message\": \"<string>\",\n      \"in\": \"<string>\",\n      \"code\": \"<string>\",\n      \"subCategory\": \"<string>\",\n      \"context\": {\n        \"pariatur_57\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"consequat_a\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"voluptate08b\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"idde\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      }\n    }\n  ],\n  \"context\": {\n    \"anim_a\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"links\": {\n    \"tempor_0\": \"<string>\",\n    \"ea__93\": \"<string>\"\n  }\n}"
						}
					]
				},
				{
					"name": "Get actors",
					"id": "02bb75c1-490f-48eb-b91f-9cfda22b0d98",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "scope",
									"value": "conversations.read conversations.write",
									"type": "string"
								},
								{
									"key": "accessTokenUrl",
									"value": "https://api.hubapi.com/oauth/v1/token",
									"type": "string"
								},
								{
									"key": "authUrl",
									"value": "https://app.hubspot.com/oauth/authorize",
									"type": "string"
								},
								{
									"key": "grant_type",
									"value": "authorization_code",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"inputs\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/conversations/v3/conversations/actors/batch/read?property=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"conversations",
								"v3",
								"conversations",
								"actors",
								"batch",
								"read"
							],
							"query": [
								{
									"key": "property",
									"value": "<string>"
								}
							]
						},
						"description": "Resolve `ActorId`s to the underlying actors/participants."
					},
					"response": [
						{
							"id": "0c41ae3e-2e58-47bd-bc7f-db06e7db5948",
							"name": "successful operation",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"inputs\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/conversations/v3/conversations/actors/batch/read?property=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"conversations",
										"v3",
										"conversations",
										"actors",
										"batch",
										"read"
									],
									"query": [
										{
											"key": "property",
											"value": "<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"completedAt\": \"<dateTime>\",\n  \"results\": [\n    {\n      \"id\": \"<string>\",\n      \"type\": \"AGENT\",\n      \"name\": \"<string>\",\n      \"email\": \"<string>\",\n      \"avatar\": \"<string>\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"type\": \"AGENT\",\n      \"name\": \"<string>\",\n      \"email\": \"<string>\",\n      \"avatar\": \"<string>\"\n    }\n  ],\n  \"startedAt\": \"<dateTime>\",\n  \"status\": \"CANCELED\",\n  \"requestedAt\": \"<dateTime>\",\n  \"links\": {\n    \"nisi5\": \"<string>\"\n  }\n}"
						},
						{
							"id": "2967c088-7d58-4d1a-a679-db896163d2cb",
							"name": "multiple statuses",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"inputs\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/conversations/v3/conversations/actors/batch/read?property=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"conversations",
										"v3",
										"conversations",
										"actors",
										"batch",
										"read"
									],
									"query": [
										{
											"key": "property",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Multi-Status (WebDAV) (RFC 4918)",
							"code": 207,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"completedAt\": \"<dateTime>\",\n  \"results\": [\n    {\n      \"id\": \"<string>\",\n      \"type\": \"AGENT\",\n      \"name\": \"<string>\",\n      \"email\": \"<string>\",\n      \"avatar\": \"<string>\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"type\": \"AGENT\",\n      \"name\": \"<string>\",\n      \"email\": \"<string>\",\n      \"avatar\": \"<string>\"\n    }\n  ],\n  \"startedAt\": \"<dateTime>\",\n  \"status\": \"COMPLETE\",\n  \"numErrors\": \"<integer>\",\n  \"errors\": [\n    {\n      \"category\": \"<string>\",\n      \"context\": {\n        \"minim_bc\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"laborisc\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"magna_9\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      \"errors\": [\n        {\n          \"message\": \"<string>\",\n          \"in\": \"<string>\",\n          \"code\": \"<string>\",\n          \"subCategory\": \"<string>\",\n          \"context\": {\n            \"eta\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"esseaf3\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        {\n          \"message\": \"<string>\",\n          \"in\": \"<string>\",\n          \"code\": \"<string>\",\n          \"subCategory\": \"<string>\",\n          \"context\": {\n            \"magna6f\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"voluptateef_\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"eiusmod7\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"quis1c\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        }\n      ],\n      \"links\": {\n        \"id3cf\": \"<string>\",\n        \"laborum_ea5\": \"<string>\"\n      },\n      \"message\": \"<string>\",\n      \"status\": \"<string>\",\n      \"id\": \"<string>\",\n      \"subCategory\": {}\n    },\n    {\n      \"category\": \"<string>\",\n      \"context\": {\n        \"occaecat7c\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dolorb94\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"consequat__6_\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"sed_977\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      },\n      \"errors\": [\n        {\n          \"message\": \"<string>\",\n          \"in\": \"<string>\",\n          \"code\": \"<string>\",\n          \"subCategory\": \"<string>\",\n          \"context\": {\n            \"laborum3fa\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        },\n        {\n          \"message\": \"<string>\",\n          \"in\": \"<string>\",\n          \"code\": \"<string>\",\n          \"subCategory\": \"<string>\",\n          \"context\": {\n            \"Excepteura5\": [\n              \"<string>\",\n              \"<string>\"\n            ],\n            \"dolore_0\": [\n              \"<string>\",\n              \"<string>\"\n            ]\n          }\n        }\n      ],\n      \"links\": {\n        \"aute_31c\": \"<string>\",\n        \"aliqua_3_e\": \"<string>\"\n      },\n      \"message\": \"<string>\",\n      \"status\": \"<string>\",\n      \"id\": \"<string>\",\n      \"subCategory\": {}\n    }\n  ],\n  \"requestedAt\": \"<dateTime>\",\n  \"links\": {\n    \"eu_9e\": \"<string>\"\n  }\n}"
						},
						{
							"id": "f25cd883-df76-413a-a523-eaf4c5483dc6",
							"name": "An error occurred.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "*/*"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"inputs\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/conversations/v3/conversations/actors/batch/read?property=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"conversations",
										"v3",
										"conversations",
										"actors",
										"batch",
										"read"
									],
									"query": [
										{
											"key": "property",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": "{\n  \"category\": \"<string>\",\n  \"correlationId\": \"<uuid>\",\n  \"message\": \"<string>\",\n  \"subCategory\": \"<string>\",\n  \"errors\": [\n    {\n      \"message\": \"<string>\",\n      \"in\": \"<string>\",\n      \"code\": \"<string>\",\n      \"subCategory\": \"<string>\",\n      \"context\": {\n        \"eab\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"consectetur_29f\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"culpa_bd6\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dolore5cd\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      }\n    },\n    {\n      \"message\": \"<string>\",\n      \"in\": \"<string>\",\n      \"code\": \"<string>\",\n      \"subCategory\": \"<string>\",\n      \"context\": {\n        \"pariatur_57\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"consequat_a\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"voluptate08b\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"idde\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      }\n    }\n  ],\n  \"context\": {\n    \"anim_a\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"links\": {\n    \"tempor_0\": \"<string>\",\n    \"ea__93\": \"<string>\"\n  }\n}"
						}
					]
				},
				{
					"name": "Get channel accounts.",
					"id": "18a335b7-a0e3-4a8f-a8c0-956b394942be",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "scope",
									"value": "conversations.read conversations.write",
									"type": "string"
								},
								{
									"key": "accessTokenUrl",
									"value": "https://api.hubapi.com/oauth/v1/token",
									"type": "string"
								},
								{
									"key": "authUrl",
									"value": "https://app.hubspot.com/oauth/authorize",
									"type": "string"
								},
								{
									"key": "grant_type",
									"value": "authorization_code",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/conversations/v3/conversations/channel-accounts?channelId=<integer>&channelId=<integer>&inboxId=<integer>&inboxId=<integer>&after=<string>&limit=<integer>&sort=<string>&sort=<string>&defaultPageLength=<integer>&archived=<boolean>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"conversations",
								"v3",
								"conversations",
								"channel-accounts"
							],
							"query": [
								{
									"key": "channelId",
									"value": "<integer>",
									"description": "Limits results to channel accounts within a particular channel."
								},
								{
									"key": "channelId",
									"value": "<integer>",
									"description": "Limits results to channel accounts within a particular channel."
								},
								{
									"key": "inboxId",
									"value": "<integer>",
									"description": "Limits results to channel accounts within a particular inbox."
								},
								{
									"key": "inboxId",
									"value": "<integer>",
									"description": "Limits results to channel accounts within a particular inbox."
								},
								{
									"key": "after",
									"value": "<string>",
									"description": "The paging cursor token of the last successfully read resource will be returned as the `paging.next.after` JSON property of a paged response containing more results."
								},
								{
									"key": "limit",
									"value": "<integer>",
									"description": "The maximum number of results to display per page."
								},
								{
									"key": "sort",
									"value": "<string>"
								},
								{
									"key": "sort",
									"value": "<string>"
								},
								{
									"key": "defaultPageLength",
									"value": "<integer>"
								},
								{
									"key": "archived",
									"value": "<boolean>"
								}
							]
						}
					},
					"response": [
						{
							"id": "6f0ec939-f110-4f9f-919a-e2acf1ea9280",
							"name": "successful operation",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/conversations/v3/conversations/channel-accounts?channelId=<integer>&inboxId=<integer>&after=<string>&limit=<integer>&sort=<string>&defaultPageLength=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"conversations",
										"v3",
										"conversations",
										"channel-accounts"
									],
									"query": [
										{
											"description": "Limits results to channel accounts within a particular channel.",
											"key": "channelId",
											"value": "<integer>"
										},
										{
											"description": "Limits results to channel accounts within a particular inbox.",
											"key": "inboxId",
											"value": "<integer>"
										},
										{
											"description": "The paging cursor token of the last successfully read resource will be returned as the `paging.next.after` JSON property of a paged response containing more results.",
											"key": "after",
											"value": "<string>"
										},
										{
											"description": "The maximum number of results to display per page.",
											"key": "limit",
											"value": "<integer>"
										},
										{
											"key": "sort",
											"value": "<string>"
										},
										{
											"key": "defaultPageLength",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"results\": [\n    {\n      \"id\": \"<string>\",\n      \"channelId\": \"<string>\",\n      \"name\": \"<string>\",\n      \"inboxId\": \"<string>\",\n      \"active\": \"<boolean>\",\n      \"authorized\": \"<boolean>\",\n      \"createdAt\": \"<dateTime>\",\n      \"deliveryIdentifier\": {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      \"archived\": \"<boolean>\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"channelId\": \"<string>\",\n      \"name\": \"<string>\",\n      \"inboxId\": \"<string>\",\n      \"active\": \"<boolean>\",\n      \"authorized\": \"<boolean>\",\n      \"createdAt\": \"<dateTime>\",\n      \"deliveryIdentifier\": {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      \"archived\": \"<boolean>\"\n    }\n  ],\n  \"total\": \"<integer>\",\n  \"paging\": {\n    \"next\": {\n      \"after\": \"<string>\",\n      \"link\": \"<string>\"\n    }\n  }\n}"
						},
						{
							"id": "0d267023-01f3-4832-88c4-5ddbdea5a1f1",
							"name": "An error occurred.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/conversations/v3/conversations/channel-accounts?channelId=<integer>&inboxId=<integer>&after=<string>&limit=<integer>&sort=<string>&defaultPageLength=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"conversations",
										"v3",
										"conversations",
										"channel-accounts"
									],
									"query": [
										{
											"description": "Limits results to channel accounts within a particular channel.",
											"key": "channelId",
											"value": "<integer>"
										},
										{
											"description": "Limits results to channel accounts within a particular inbox.",
											"key": "inboxId",
											"value": "<integer>"
										},
										{
											"description": "The paging cursor token of the last successfully read resource will be returned as the `paging.next.after` JSON property of a paged response containing more results.",
											"key": "after",
											"value": "<string>"
										},
										{
											"description": "The maximum number of results to display per page.",
											"key": "limit",
											"value": "<integer>"
										},
										{
											"key": "sort",
											"value": "<string>"
										},
										{
											"key": "defaultPageLength",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": "{\n  \"category\": \"<string>\",\n  \"correlationId\": \"<uuid>\",\n  \"message\": \"<string>\",\n  \"subCategory\": \"<string>\",\n  \"errors\": [\n    {\n      \"message\": \"<string>\",\n      \"in\": \"<string>\",\n      \"code\": \"<string>\",\n      \"subCategory\": \"<string>\",\n      \"context\": {\n        \"eab\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"consectetur_29f\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"culpa_bd6\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dolore5cd\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      }\n    },\n    {\n      \"message\": \"<string>\",\n      \"in\": \"<string>\",\n      \"code\": \"<string>\",\n      \"subCategory\": \"<string>\",\n      \"context\": {\n        \"pariatur_57\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"consequat_a\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"voluptate08b\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"idde\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      }\n    }\n  ],\n  \"context\": {\n    \"anim_a\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"links\": {\n    \"tempor_0\": \"<string>\",\n    \"ea__93\": \"<string>\"\n  }\n}"
						}
					]
				},
				{
					"name": "Get a single channel.",
					"id": "6d26efd1-9587-4207-96f9-e795397d8758",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "scope",
									"value": "conversations.read conversations.write",
									"type": "string"
								},
								{
									"key": "accessTokenUrl",
									"value": "https://api.hubapi.com/oauth/v1/token",
									"type": "string"
								},
								{
									"key": "authUrl",
									"value": "https://app.hubspot.com/oauth/authorize",
									"type": "string"
								},
								{
									"key": "grant_type",
									"value": "authorization_code",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/conversations/v3/conversations/channels/:channelId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"conversations",
								"v3",
								"conversations",
								"channels",
								":channelId"
							],
							"variable": [
								{
									"key": "channelId",
									"value": "<string>"
								}
							]
						}
					},
					"response": [
						{
							"id": "a21ffc22-9ecd-4557-872f-538b6774440c",
							"name": "successful operation",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/conversations/v3/conversations/channels/:channelId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"conversations",
										"v3",
										"conversations",
										"channels",
										":channelId"
									],
									"variable": [
										{
											"key": "channelId"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"<string>\",\n  \"name\": \"<string>\"\n}"
						},
						{
							"id": "615d642c-b407-4db2-ab00-8f63ee406622",
							"name": "An error occurred.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/conversations/v3/conversations/channels/:channelId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"conversations",
										"v3",
										"conversations",
										"channels",
										":channelId"
									],
									"variable": [
										{
											"key": "channelId"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": "{\n  \"category\": \"<string>\",\n  \"correlationId\": \"<uuid>\",\n  \"message\": \"<string>\",\n  \"subCategory\": \"<string>\",\n  \"errors\": [\n    {\n      \"message\": \"<string>\",\n      \"in\": \"<string>\",\n      \"code\": \"<string>\",\n      \"subCategory\": \"<string>\",\n      \"context\": {\n        \"eab\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"consectetur_29f\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"culpa_bd6\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dolore5cd\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      }\n    },\n    {\n      \"message\": \"<string>\",\n      \"in\": \"<string>\",\n      \"code\": \"<string>\",\n      \"subCategory\": \"<string>\",\n      \"context\": {\n        \"pariatur_57\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"consequat_a\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"voluptate08b\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"idde\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      }\n    }\n  ],\n  \"context\": {\n    \"anim_a\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"links\": {\n    \"tempor_0\": \"<string>\",\n    \"ea__93\": \"<string>\"\n  }\n}"
						}
					]
				},
				{
					"name": "Get a single message.",
					"id": "53817b46-a604-44b2-81fe-4e01e0662013",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "scope",
									"value": "conversations.read conversations.write",
									"type": "string"
								},
								{
									"key": "accessTokenUrl",
									"value": "https://api.hubapi.com/oauth/v1/token",
									"type": "string"
								},
								{
									"key": "authUrl",
									"value": "https://app.hubspot.com/oauth/authorize",
									"type": "string"
								},
								{
									"key": "grant_type",
									"value": "authorization_code",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/conversations/v3/conversations/threads/:threadId/messages/:messageId?property=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"conversations",
								"v3",
								"conversations",
								"threads",
								":threadId",
								"messages",
								":messageId"
							],
							"query": [
								{
									"key": "property",
									"value": "<string>"
								}
							],
							"variable": [
								{
									"key": "threadId",
									"value": "<long>"
								},
								{
									"key": "messageId",
									"value": "<string>"
								}
							]
						}
					},
					"response": [
						{
							"id": "bed1d613-9440-4792-8c07-5b3513a06f22",
							"name": "successful operation",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/conversations/v3/conversations/threads/:threadId/messages/:messageId?property=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"conversations",
										"v3",
										"conversations",
										"threads",
										":threadId",
										"messages",
										":messageId"
									],
									"query": [
										{
											"key": "property",
											"value": "<string>"
										}
									],
									"variable": [
										{
											"key": "threadId"
										},
										{
											"key": "messageId"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"value\": \"<Circular reference to #/components/schemas/PublicConversationsMessage detected>\"\n}"
						},
						{
							"id": "2d5f4b43-4022-41ad-9f7d-ac42f95172fc",
							"name": "An error occurred.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/conversations/v3/conversations/threads/:threadId/messages/:messageId?property=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"conversations",
										"v3",
										"conversations",
										"threads",
										":threadId",
										"messages",
										":messageId"
									],
									"query": [
										{
											"key": "property",
											"value": "<string>"
										}
									],
									"variable": [
										{
											"key": "threadId"
										},
										{
											"key": "messageId"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": "{\n  \"category\": \"<string>\",\n  \"correlationId\": \"<uuid>\",\n  \"message\": \"<string>\",\n  \"subCategory\": \"<string>\",\n  \"errors\": [\n    {\n      \"message\": \"<string>\",\n      \"in\": \"<string>\",\n      \"code\": \"<string>\",\n      \"subCategory\": \"<string>\",\n      \"context\": {\n        \"eab\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"consectetur_29f\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"culpa_bd6\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dolore5cd\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      }\n    },\n    {\n      \"message\": \"<string>\",\n      \"in\": \"<string>\",\n      \"code\": \"<string>\",\n      \"subCategory\": \"<string>\",\n      \"context\": {\n        \"pariatur_57\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"consequat_a\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"voluptate08b\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"idde\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      }\n    }\n  ],\n  \"context\": {\n    \"anim_a\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"links\": {\n    \"tempor_0\": \"<string>\",\n    \"ea__93\": \"<string>\"\n  }\n}"
						}
					]
				},
				{
					"name": "Get channels.",
					"id": "9dc20d09-0272-4f5d-8c53-0e250dc5a196",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "scope",
									"value": "conversations.read conversations.write",
									"type": "string"
								},
								{
									"key": "accessTokenUrl",
									"value": "https://api.hubapi.com/oauth/v1/token",
									"type": "string"
								},
								{
									"key": "authUrl",
									"value": "https://app.hubspot.com/oauth/authorize",
									"type": "string"
								},
								{
									"key": "grant_type",
									"value": "authorization_code",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/conversations/v3/conversations/channels?after=<string>&limit=<integer>&sort=<string>&sort=<string>&defaultPageLength=<integer>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"conversations",
								"v3",
								"conversations",
								"channels"
							],
							"query": [
								{
									"key": "after",
									"value": "<string>",
									"description": "The paging cursor token of the last successfully read resource will be returned as the `paging.next.after` JSON property of a paged response containing more results."
								},
								{
									"key": "limit",
									"value": "<integer>",
									"description": "The maximum number of results to display per page."
								},
								{
									"key": "sort",
									"value": "<string>"
								},
								{
									"key": "sort",
									"value": "<string>"
								},
								{
									"key": "defaultPageLength",
									"value": "<integer>"
								}
							]
						}
					},
					"response": [
						{
							"id": "eb4370c6-2ac4-49c6-b380-9ec48b00f593",
							"name": "successful operation",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/conversations/v3/conversations/channels?after=<string>&limit=<integer>&sort=<string>&defaultPageLength=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"conversations",
										"v3",
										"conversations",
										"channels"
									],
									"query": [
										{
											"description": "The paging cursor token of the last successfully read resource will be returned as the `paging.next.after` JSON property of a paged response containing more results.",
											"key": "after",
											"value": "<string>"
										},
										{
											"description": "The maximum number of results to display per page.",
											"key": "limit",
											"value": "<integer>"
										},
										{
											"key": "sort",
											"value": "<string>"
										},
										{
											"key": "defaultPageLength",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"results\": [\n    {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\"\n    }\n  ],\n  \"total\": \"<integer>\",\n  \"paging\": {\n    \"next\": {\n      \"after\": \"<string>\",\n      \"link\": \"<string>\"\n    }\n  }\n}"
						},
						{
							"id": "9d7463d8-faa2-4d18-8b10-4896354220cf",
							"name": "An error occurred.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/conversations/v3/conversations/channels?after=<string>&limit=<integer>&sort=<string>&defaultPageLength=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"conversations",
										"v3",
										"conversations",
										"channels"
									],
									"query": [
										{
											"description": "The paging cursor token of the last successfully read resource will be returned as the `paging.next.after` JSON property of a paged response containing more results.",
											"key": "after",
											"value": "<string>"
										},
										{
											"description": "The maximum number of results to display per page.",
											"key": "limit",
											"value": "<integer>"
										},
										{
											"key": "sort",
											"value": "<string>"
										},
										{
											"key": "defaultPageLength",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": "{\n  \"category\": \"<string>\",\n  \"correlationId\": \"<uuid>\",\n  \"message\": \"<string>\",\n  \"subCategory\": \"<string>\",\n  \"errors\": [\n    {\n      \"message\": \"<string>\",\n      \"in\": \"<string>\",\n      \"code\": \"<string>\",\n      \"subCategory\": \"<string>\",\n      \"context\": {\n        \"eab\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"consectetur_29f\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"culpa_bd6\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dolore5cd\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      }\n    },\n    {\n      \"message\": \"<string>\",\n      \"in\": \"<string>\",\n      \"code\": \"<string>\",\n      \"subCategory\": \"<string>\",\n      \"context\": {\n        \"pariatur_57\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"consequat_a\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"voluptate08b\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"idde\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      }\n    }\n  ],\n  \"context\": {\n    \"anim_a\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"links\": {\n    \"tempor_0\": \"<string>\",\n    \"ea__93\": \"<string>\"\n  }\n}"
						}
					]
				},
				{
					"name": "Get a single actor.",
					"id": "1a1504eb-1937-4973-b431-8a38a10f4cab",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "scope",
									"value": "conversations.read conversations.write",
									"type": "string"
								},
								{
									"key": "accessTokenUrl",
									"value": "https://api.hubapi.com/oauth/v1/token",
									"type": "string"
								},
								{
									"key": "authUrl",
									"value": "https://app.hubspot.com/oauth/authorize",
									"type": "string"
								},
								{
									"key": "grant_type",
									"value": "authorization_code",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/conversations/v3/conversations/actors/:actorId?property=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"conversations",
								"v3",
								"conversations",
								"actors",
								":actorId"
							],
							"query": [
								{
									"key": "property",
									"value": "<string>"
								}
							],
							"variable": [
								{
									"key": "actorId",
									"value": "<string>"
								}
							]
						}
					},
					"response": [
						{
							"id": "82f52b2f-dda7-46b5-b866-3f65b05d8218",
							"name": "successful operation",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/conversations/v3/conversations/actors/:actorId?property=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"conversations",
										"v3",
										"conversations",
										"actors",
										":actorId"
									],
									"query": [
										{
											"key": "property",
											"value": "<string>"
										}
									],
									"variable": [
										{
											"key": "actorId"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"<string>\",\n  \"type\": \"AGENT\",\n  \"name\": \"<string>\",\n  \"email\": \"<string>\",\n  \"avatar\": \"<string>\"\n}"
						},
						{
							"id": "3bdfbb58-8654-4000-b88b-3b59edd06a30",
							"name": "An error occurred.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/conversations/v3/conversations/actors/:actorId?property=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"conversations",
										"v3",
										"conversations",
										"actors",
										":actorId"
									],
									"query": [
										{
											"key": "property",
											"value": "<string>"
										}
									],
									"variable": [
										{
											"key": "actorId"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": "{\n  \"category\": \"<string>\",\n  \"correlationId\": \"<uuid>\",\n  \"message\": \"<string>\",\n  \"subCategory\": \"<string>\",\n  \"errors\": [\n    {\n      \"message\": \"<string>\",\n      \"in\": \"<string>\",\n      \"code\": \"<string>\",\n      \"subCategory\": \"<string>\",\n      \"context\": {\n        \"eab\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"consectetur_29f\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"culpa_bd6\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dolore5cd\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      }\n    },\n    {\n      \"message\": \"<string>\",\n      \"in\": \"<string>\",\n      \"code\": \"<string>\",\n      \"subCategory\": \"<string>\",\n      \"context\": {\n        \"pariatur_57\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"consequat_a\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"voluptate08b\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"idde\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      }\n    }\n  ],\n  \"context\": {\n    \"anim_a\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"links\": {\n    \"tempor_0\": \"<string>\",\n    \"ea__93\": \"<string>\"\n  }\n}"
						}
					]
				},
				{
					"name": "Get threads.",
					"id": "8656f474-4d31-4b76-8739-bd1ff9ed097e",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "scope",
									"value": "conversations.read conversations.write",
									"type": "string"
								},
								{
									"key": "accessTokenUrl",
									"value": "https://api.hubapi.com/oauth/v1/token",
									"type": "string"
								},
								{
									"key": "authUrl",
									"value": "https://app.hubspot.com/oauth/authorize",
									"type": "string"
								},
								{
									"key": "grant_type",
									"value": "authorization_code",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/conversations/v3/conversations/threads?after=<string>&limit=<integer>&sort=<string>&sort=<string>&inboxId=<integer>&inboxId=<integer>&associatedContactId=<long>&threadStatus=<string>&latestMessageTimestampAfter=<dateTime>&archived=<boolean>&property=<string>&association=TICKET",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"conversations",
								"v3",
								"conversations",
								"threads"
							],
							"query": [
								{
									"key": "after",
									"value": "<string>",
									"description": "The paging cursor token of the last successfully read resource will be returned as the `paging.next.after` JSON property of a paged response containing more results."
								},
								{
									"key": "limit",
									"value": "<integer>",
									"description": "The maximum number of results to display per page."
								},
								{
									"key": "sort",
									"value": "<string>",
									"description": "Set the sort order of the response. Valid options are `id` (default) and `latestMessageTimestamp` (which requires the `latestMessageTimestampAfter` field to also be set). If you’re filtering threads by `associatedContactId` , you can sort in descending order by prepending - to the sort option (e.g., `-id` or `-latestMessageTimestampAfter` ). Otherwise, results are always returned in ascending order."
								},
								{
									"key": "sort",
									"value": "<string>",
									"description": "Set the sort order of the response. Valid options are `id` (default) and `latestMessageTimestamp` (which requires the `latestMessageTimestampAfter` field to also be set). If you’re filtering threads by `associatedContactId` , you can sort in descending order by prepending - to the sort option (e.g., `-id` or `-latestMessageTimestampAfter` ). Otherwise, results are always returned in ascending order."
								},
								{
									"key": "inboxId",
									"value": "<integer>",
									"description": "The ID of the conversations inbox you can optionally include to retrieve the associated messages for. This parameter cannot be used in conjunction with the `associatedContactId` property."
								},
								{
									"key": "inboxId",
									"value": "<integer>",
									"description": "The ID of the conversations inbox you can optionally include to retrieve the associated messages for. This parameter cannot be used in conjunction with the `associatedContactId` property."
								},
								{
									"key": "associatedContactId",
									"value": "<long>",
									"description": "The ID of a contact you can optionally include to retrieve a filtered list of conversations for. This parameter cannot be used in conjunction with the `inboxId` property."
								},
								{
									"key": "threadStatus",
									"value": "<string>",
									"description": "The status of the associated conversations to filter by (either `OPEN` or `CLOSED`). This property must be provided if you’re including the `associatedContactId` query parameter."
								},
								{
									"key": "latestMessageTimestampAfter",
									"value": "<dateTime>",
									"description": "The minimum `latestMessageTimestamp`. This is required only when sorting by `latestMessageTimestamp`."
								},
								{
									"key": "archived",
									"value": "<boolean>",
									"description": "Whether to return only results that have been archived."
								},
								{
									"key": "property",
									"value": "<string>"
								},
								{
									"key": "association",
									"value": "TICKET",
									"description": "You can specify an association type here of `TICKET`. If this is set the response will included a thread associations object and associated ticket id if present. If there are no associations to a ticket with this conversation, then the thread associations object will not be present on the response. "
								}
							]
						}
					},
					"response": [
						{
							"id": "5339cb8e-d3ca-461d-8ceb-bb78f38a118e",
							"name": "successful operation",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/conversations/v3/conversations/threads?after=<string>&limit=<integer>&sort=<string>&inboxId=<integer>&associatedContactId=<long>&threadStatus=<string>&latestMessageTimestampAfter=<dateTime>&archived=<boolean>&property=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"conversations",
										"v3",
										"conversations",
										"threads"
									],
									"query": [
										{
											"description": "The paging cursor token of the last successfully read resource will be returned as the `paging.next.after` JSON property of a paged response containing more results.",
											"key": "after",
											"value": "<string>"
										},
										{
											"description": "The maximum number of results to display per page.",
											"key": "limit",
											"value": "<integer>"
										},
										{
											"description": "Set the sort order of the response. Valid options are `id` (default) and `latestMessageTimestamp` (which requires the `latestMessageTimestampAfter` field to also be set). If you’re filtering threads by `associatedContactId` , you can sort in descending order by prepending - to the sort option (e.g., `-id` or `-latestMessageTimestampAfter` ). Otherwise, results are always returned in ascending order.",
											"key": "sort",
											"value": "<string>"
										},
										{
											"description": "The ID of the conversations inbox you can optionally include to retrieve the associated messages for. This parameter cannot be used in conjunction with the `associatedContactId` property.",
											"key": "inboxId",
											"value": "<integer>"
										},
										{
											"description": "The ID of a contact you can optionally include to retrieve a filtered list of conversations for. This parameter cannot be used in conjunction with the `inboxId` property.",
											"key": "associatedContactId",
											"value": "<long>"
										},
										{
											"description": "The status of the associated conversations to filter by (either `OPEN` or `CLOSED`). This property must be provided if you’re including the `associatedContactId` query parameter.",
											"key": "threadStatus",
											"value": "<string>"
										},
										{
											"description": "The minimum `latestMessageTimestamp`. This is required only when sorting by `latestMessageTimestamp`.",
											"key": "latestMessageTimestampAfter",
											"value": "<dateTime>"
										},
										{
											"description": "Whether to return only results that have been archived.",
											"key": "archived",
											"value": "<boolean>"
										},
										{
											"key": "property",
											"value": "<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"results\": [\n    {\n      \"associatedContactId\": \"<string>\",\n      \"createdAt\": \"<dateTime>\",\n      \"id\": \"<string>\",\n      \"inboxId\": \"<string>\",\n      \"spam\": \"<boolean>\",\n      \"status\": \"OPEN\",\n      \"closedAt\": \"<dateTime>\",\n      \"latestMessageTimestamp\": \"<dateTime>\",\n      \"latestMessageSentTimestamp\": \"<dateTime>\",\n      \"latestMessageReceivedTimestamp\": \"<dateTime>\",\n      \"assignedTo\": \"<string>\",\n      \"archived\": \"<boolean>\",\n      \"originalChannelAccountId\": \"<string>\",\n      \"originalChannelId\": \"<string>\"\n    },\n    {\n      \"associatedContactId\": \"<string>\",\n      \"createdAt\": \"<dateTime>\",\n      \"id\": \"<string>\",\n      \"inboxId\": \"<string>\",\n      \"spam\": \"<boolean>\",\n      \"status\": \"CLOSED\",\n      \"closedAt\": \"<dateTime>\",\n      \"latestMessageTimestamp\": \"<dateTime>\",\n      \"latestMessageSentTimestamp\": \"<dateTime>\",\n      \"latestMessageReceivedTimestamp\": \"<dateTime>\",\n      \"assignedTo\": \"<string>\",\n      \"archived\": \"<boolean>\",\n      \"originalChannelAccountId\": \"<string>\",\n      \"originalChannelId\": \"<string>\"\n    }\n  ],\n  \"paging\": {\n    \"next\": {\n      \"after\": \"<string>\",\n      \"link\": \"<string>\"\n    }\n  }\n}"
						},
						{
							"id": "c23ca796-5180-4e10-9f77-37d8bec2ca66",
							"name": "An error occurred.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/conversations/v3/conversations/threads?after=<string>&limit=<integer>&sort=<string>&inboxId=<integer>&associatedContactId=<long>&threadStatus=<string>&latestMessageTimestampAfter=<dateTime>&archived=<boolean>&property=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"conversations",
										"v3",
										"conversations",
										"threads"
									],
									"query": [
										{
											"description": "The paging cursor token of the last successfully read resource will be returned as the `paging.next.after` JSON property of a paged response containing more results.",
											"key": "after",
											"value": "<string>"
										},
										{
											"description": "The maximum number of results to display per page.",
											"key": "limit",
											"value": "<integer>"
										},
										{
											"description": "Set the sort order of the response. Valid options are `id` (default) and `latestMessageTimestamp` (which requires the `latestMessageTimestampAfter` field to also be set). If you’re filtering threads by `associatedContactId` , you can sort in descending order by prepending - to the sort option (e.g., `-id` or `-latestMessageTimestampAfter` ). Otherwise, results are always returned in ascending order.",
											"key": "sort",
											"value": "<string>"
										},
										{
											"description": "The ID of the conversations inbox you can optionally include to retrieve the associated messages for. This parameter cannot be used in conjunction with the `associatedContactId` property.",
											"key": "inboxId",
											"value": "<integer>"
										},
										{
											"description": "The ID of a contact you can optionally include to retrieve a filtered list of conversations for. This parameter cannot be used in conjunction with the `inboxId` property.",
											"key": "associatedContactId",
											"value": "<long>"
										},
										{
											"description": "The status of the associated conversations to filter by (either `OPEN` or `CLOSED`). This property must be provided if you’re including the `associatedContactId` query parameter.",
											"key": "threadStatus",
											"value": "<string>"
										},
										{
											"description": "The minimum `latestMessageTimestamp`. This is required only when sorting by `latestMessageTimestamp`.",
											"key": "latestMessageTimestampAfter",
											"value": "<dateTime>"
										},
										{
											"description": "Whether to return only results that have been archived.",
											"key": "archived",
											"value": "<boolean>"
										},
										{
											"key": "property",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": "{\n  \"category\": \"<string>\",\n  \"correlationId\": \"<uuid>\",\n  \"message\": \"<string>\",\n  \"subCategory\": \"<string>\",\n  \"errors\": [\n    {\n      \"message\": \"<string>\",\n      \"in\": \"<string>\",\n      \"code\": \"<string>\",\n      \"subCategory\": \"<string>\",\n      \"context\": {\n        \"eab\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"consectetur_29f\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"culpa_bd6\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dolore5cd\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      }\n    },\n    {\n      \"message\": \"<string>\",\n      \"in\": \"<string>\",\n      \"code\": \"<string>\",\n      \"subCategory\": \"<string>\",\n      \"context\": {\n        \"pariatur_57\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"consequat_a\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"voluptate08b\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"idde\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      }\n    }\n  ],\n  \"context\": {\n    \"anim_a\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"links\": {\n    \"tempor_0\": \"<string>\",\n    \"ea__93\": \"<string>\"\n  }\n}"
						}
					]
				},
				{
					"name": "Get a single channel account.",
					"id": "85595842-59ad-4c15-8813-9b3f9bc1f726",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "scope",
									"value": "conversations.read conversations.write",
									"type": "string"
								},
								{
									"key": "accessTokenUrl",
									"value": "https://api.hubapi.com/oauth/v1/token",
									"type": "string"
								},
								{
									"key": "authUrl",
									"value": "https://app.hubspot.com/oauth/authorize",
									"type": "string"
								},
								{
									"key": "grant_type",
									"value": "authorization_code",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/conversations/v3/conversations/channel-accounts/:channelAccountId?archived=false",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"conversations",
								"v3",
								"conversations",
								"channel-accounts",
								":channelAccountId"
							],
							"query": [
								{
									"key": "archived",
									"value": "false"
								}
							],
							"variable": [
								{
									"key": "channelAccountId",
									"value": "<string>"
								}
							]
						}
					},
					"response": [
						{
							"id": "8836fca7-962a-44fb-a049-1bdfd2e72d49",
							"name": "successful operation",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/conversations/v3/conversations/channel-accounts/:channelAccountId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"conversations",
										"v3",
										"conversations",
										"channel-accounts",
										":channelAccountId"
									],
									"variable": [
										{
											"key": "channelAccountId"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"<string>\",\n  \"channelId\": \"<string>\",\n  \"name\": \"<string>\",\n  \"inboxId\": \"<string>\",\n  \"active\": \"<boolean>\",\n  \"authorized\": \"<boolean>\",\n  \"createdAt\": \"<dateTime>\",\n  \"deliveryIdentifier\": {\n    \"type\": \"<string>\",\n    \"value\": \"<string>\"\n  },\n  \"archived\": \"<boolean>\"\n}"
						},
						{
							"id": "0e89833d-c22e-4949-b27e-86f6aa444374",
							"name": "An error occurred.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/conversations/v3/conversations/channel-accounts/:channelAccountId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"conversations",
										"v3",
										"conversations",
										"channel-accounts",
										":channelAccountId"
									],
									"variable": [
										{
											"key": "channelAccountId"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": "{\n  \"category\": \"<string>\",\n  \"correlationId\": \"<uuid>\",\n  \"message\": \"<string>\",\n  \"subCategory\": \"<string>\",\n  \"errors\": [\n    {\n      \"message\": \"<string>\",\n      \"in\": \"<string>\",\n      \"code\": \"<string>\",\n      \"subCategory\": \"<string>\",\n      \"context\": {\n        \"eab\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"consectetur_29f\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"culpa_bd6\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dolore5cd\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      }\n    },\n    {\n      \"message\": \"<string>\",\n      \"in\": \"<string>\",\n      \"code\": \"<string>\",\n      \"subCategory\": \"<string>\",\n      \"context\": {\n        \"pariatur_57\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"consequat_a\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"voluptate08b\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"idde\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      }\n    }\n  ],\n  \"context\": {\n    \"anim_a\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"links\": {\n    \"tempor_0\": \"<string>\",\n    \"ea__93\": \"<string>\"\n  }\n}"
						}
					]
				},
				{
					"name": "Get a single conversations inbox.",
					"id": "33fadfef-e3ec-4960-b0ab-09c8e6137164",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "scope",
									"value": "conversations.read conversations.write",
									"type": "string"
								},
								{
									"key": "accessTokenUrl",
									"value": "https://api.hubapi.com/oauth/v1/token",
									"type": "string"
								},
								{
									"key": "authUrl",
									"value": "https://app.hubspot.com/oauth/authorize",
									"type": "string"
								},
								{
									"key": "grant_type",
									"value": "authorization_code",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/conversations/v3/conversations/inboxes/:inboxId?archived=false",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"conversations",
								"v3",
								"conversations",
								"inboxes",
								":inboxId"
							],
							"query": [
								{
									"key": "archived",
									"value": "false"
								}
							],
							"variable": [
								{
									"key": "inboxId",
									"value": "<string>"
								}
							]
						}
					},
					"response": [
						{
							"id": "4ab03640-edcc-4ef4-abff-591d42fa505b",
							"name": "successful operation",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/conversations/v3/conversations/inboxes/:inboxId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"conversations",
										"v3",
										"conversations",
										"inboxes",
										":inboxId"
									],
									"variable": [
										{
											"key": "inboxId"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"createdAt\": \"<dateTime>\",\n  \"updatedAt\": \"<dateTime>\",\n  \"archived\": \"<boolean>\",\n  \"type\": \"<string>\"\n}"
						},
						{
							"id": "32847678-9b12-4835-b675-3a7c55f2d5b8",
							"name": "An error occurred.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									},
									{
										"description": "Added as a part of security scheme: oauth2",
										"key": "Authorization",
										"value": "<token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/conversations/v3/conversations/inboxes/:inboxId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"conversations",
										"v3",
										"conversations",
										"inboxes",
										":inboxId"
									],
									"variable": [
										{
											"key": "inboxId"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": "{\n  \"category\": \"<string>\",\n  \"correlationId\": \"<uuid>\",\n  \"message\": \"<string>\",\n  \"subCategory\": \"<string>\",\n  \"errors\": [\n    {\n      \"message\": \"<string>\",\n      \"in\": \"<string>\",\n      \"code\": \"<string>\",\n      \"subCategory\": \"<string>\",\n      \"context\": {\n        \"eab\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"consectetur_29f\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"culpa_bd6\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"dolore5cd\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      }\n    },\n    {\n      \"message\": \"<string>\",\n      \"in\": \"<string>\",\n      \"code\": \"<string>\",\n      \"subCategory\": \"<string>\",\n      \"context\": {\n        \"pariatur_57\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"consequat_a\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"voluptate08b\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"idde\": [\n          \"<string>\",\n          \"<string>\"\n        ]\n      }\n    }\n  ],\n  \"context\": {\n    \"anim_a\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"links\": {\n    \"tempor_0\": \"<string>\",\n    \"ea__93\": \"<string>\"\n  }\n}"
						}
					]
				}
			],
			"id": "0b88049d-655d-42f6-ae31-01376890b2a1"
		}
	],
	"variable": [
		{
			"id": "f2a68c4a-9804-4fb5-b9a5-8d5138ad85eb",
			"key": "baseUrl",
			"value": "https://api.hubapi.com",
			"type": "any"
		}
	]
}